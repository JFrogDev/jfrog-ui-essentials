{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/d3-collection/src/map.js","webpack://jfrog-ui-essentials/./node_modules/d3-collection/src/set.js","webpack://jfrog-ui-essentials/./node_modules/d3-collection/src/index.js"],"names":["prefix","Map","map","object","f","each","value","key","set","Array","isArray","o","i","n","length","prototype","constructor","has","this","get","remove","property","clear","keys","push","slice","values","entries","size","empty","src_map","Set","proto","add","__webpack_require__","d","__webpack_exports__"],"mappings":"yMAAO,IAAAA,EAAA,IAEP,SAAAC,KAkDA,SAAAC,EAAAC,EAAAC,GACA,IAAAF,EAAA,IAAAD,EAGA,GAAAE,aAAAF,EAAAE,EAAAE,KAAA,SAAAC,EAAAC,GAA+DL,EAAAM,IAAAD,EAAAD,UAG/D,GAAAG,MAAAC,QAAAP,GAAA,CACA,IAEAQ,EAFAC,GAAA,EACAC,EAAAV,EAAAW,OAGA,SAAAV,EAAA,QAAAQ,EAAAC,EAAAX,EAAAM,IAAAI,EAAAT,EAAAS,SACA,QAAAA,EAAAC,EAAAX,EAAAM,IAAAJ,EAAAO,EAAAR,EAAAS,KAAAT,GAAAQ,QAIA,GAAAR,EAAA,QAAAI,KAAAJ,EAAAD,EAAAM,IAAAD,EAAAJ,EAAAI,IAEA,OAAAL,EAnEAD,EAAAc,UAAAb,EAAAa,UAAA,CACAC,YAAAf,EACAgB,IAAA,SAAAV,GACA,OAAAP,EAAAO,KAAAW,MAEAC,IAAA,SAAAZ,GACA,OAAAW,KAAAlB,EAAAO,IAEAC,IAAA,SAAAD,EAAAD,GAEA,OADAY,KAAAlB,EAAAO,GAAAD,EACAY,MAEAE,OAAA,SAAAb,GACA,IAAAc,EAAArB,EAAAO,EACA,OAAAc,KAAAH,kBAAAG,IAEAC,MAAA,WACA,QAAAD,KAAAH,KAAAG,EAAA,KAAArB,UAAAkB,KAAAG,IAEAE,KAAA,WACA,IAAAA,EAAA,GACA,QAAAF,KAAAH,KAAAG,EAAA,KAAArB,GAAAuB,EAAAC,KAAAH,EAAAI,MAAA,IACA,OAAAF,GAEAG,OAAA,WACA,IAAAA,EAAA,GACA,QAAAL,KAAAH,KAAAG,EAAA,KAAArB,GAAA0B,EAAAF,KAAAN,KAAAG,IACA,OAAAK,GAEAC,QAAA,WACA,IAAAA,EAAA,GACA,QAAAN,KAAAH,KAAAG,EAAA,KAAArB,GAAA2B,EAAAH,KAAA,CAAyEjB,IAAAc,EAAAI,MAAA,GAAAnB,MAAAY,KAAAG,KACzE,OAAAM,GAEAC,KAAA,WACA,IAAAA,EAAA,EACA,QAAAP,KAAAH,KAAAG,EAAA,KAAArB,KAAA4B,EACA,OAAAA,GAEAC,MAAA,WACA,QAAAR,KAAAH,KAAA,GAAAG,EAAA,KAAArB,EAAA,SACA,UAEAK,KAAA,SAAAD,GACA,QAAAiB,KAAAH,KAAAG,EAAA,KAAArB,GAAAI,EAAAc,KAAAG,KAAAI,MAAA,GAAAP,QA0Be,IAAAY,EAAA,ECxEf,SAAAC,KAEA,IAAAC,EAAYF,EAAGf,UAkBf,SAAAP,EAAAL,EAAAC,GACA,IAAAI,EAAA,IAAAuB,EAGA,GAAA5B,aAAA4B,EAAA5B,EAAAE,KAAA,SAAAC,GAA0DE,EAAAyB,IAAA3B,UAG1D,GAAAH,EAAA,CACA,IAAAS,GAAA,EAAAC,EAAAV,EAAAW,OACA,SAAAV,EAAA,QAAAQ,EAAAC,EAAAL,EAAAyB,IAAA9B,EAAAS,SACA,QAAAA,EAAAC,EAAAL,EAAAyB,IAAA7B,EAAAD,EAAAS,KAAAT,IAGA,OAAAK,EA7BAuB,EAAAhB,UAAAP,EAAAO,UAAA,CACAC,YAAAe,EACAd,IAAAe,EAAAf,IACAgB,IAAA,SAAA3B,GAGA,OAFAA,GAAA,GACAY,KAASlB,EAAMM,KACfY,MAEAE,OAAAY,EAAAZ,OACAE,MAAAU,EAAAV,MACAI,OAAAM,EAAAT,KACAK,KAAAI,EAAAJ,KACAC,MAAAG,EAAAH,MACAxB,KAAA2B,EAAA3B,MCnBA6B,EAAAC,EAAAC,EAAA,sBAAAN","file":"jfrog-ui-essentials.umd.min.vendors-chunks~83e6cd8b.js","sourcesContent":["export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume itâ€™s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export {default as nest} from \"./nest\";\nexport {default as set} from \"./set\";\nexport {default as map} from \"./map\";\nexport {default as keys} from \"./keys\";\nexport {default as values} from \"./values\";\nexport {default as entries} from \"./entries\";\n"],"sourceRoot":""}