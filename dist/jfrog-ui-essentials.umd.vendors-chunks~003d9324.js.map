{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/d3-interpolate/src/lab.js","webpack://jfrog-ui-essentials/./node_modules/d3-interpolate/src/quantize.js","webpack://jfrog-ui-essentials/./node_modules/d3-interpolate/src/object.js","webpack://jfrog-ui-essentials/./node_modules/d3-interpolate/src/piecewise.js","webpack://jfrog-ui-essentials/./node_modules/d3-interpolate/src/number.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;AAAyC;AACb;;AAEb;AACf,UAAU,8DAAK,UAAU,oDAAQ,mBAAmB,oDAAQ;AAC5D,UAAU,8DAAK;AACf,UAAU,8DAAK;AACf,gBAAgB,8DAAK;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACfe;AACf;AACA,iBAAiB,OAAO;AACxB;AACA,CAAC;;;;;;;;;ACJD;AAA4B;;AAEb;AACf,YAAY;AACZ,YAAY;AACZ;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,8DAAK;AAClB,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;;ACtBD;AAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;ACPe;AACf;AACA;AACA;AACA,CAAC","file":"jfrog-ui-essentials.umd.vendors-chunks~003d9324.js","sourcesContent":["import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n"],"sourceRoot":""}