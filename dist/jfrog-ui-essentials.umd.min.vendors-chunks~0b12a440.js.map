{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/pc-bootstrap4-datetimepicker/src/js/bootstrap-datetimepicker.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","__webpack_require__","apply","exports","undefined","module","$","moment","Error","dateTimePicker","element","options","date","viewDate","input","use24Hours","actualFormat","parseFormats","currentViewMode","picker","unset","component","widget","minViewModeNumber","datePickerModes","clsName","navFnc","navStep","viewModes","verticalModes","horizontalModes","toolbarPlacements","keyMap","up","38","down","40","left","37","right","39","tab","9","escape","27","enter","13","pageUp","33","pageDown","34","shift","16","control","17","space","32","t","84","delete","46","keyState","hasTimeZone","tz","timeZone","getMoment","d","returnMoment","isDate","isMoment","useStrict","isEnabled","granularity","length","TypeError","indexOf","toLowerCase","hasTime","hasDate","getDatePickerTemplate","headTemplate","append","addClass","attr","icons","previous","calendarWeeks","next","contTemplate","clone","getTimePickerMainTemplate","topRow","middleRow","bottomRow","href","tabindex","title","tooltips","incrementHour","data-time-component","pickHour","decrementHour","html","incrementMinute","pickMinute","decrementMinute","incrementSecond","pickSecond","decrementSecond","data-action","togglePeriod","getTimePickerTemplate","hoursView","minutesView","secondsView","ret","push","getToolbar","row","showTodayButton","today","sideBySide","selectTime","time","showClear","clear","showClose","close","getTemplate","template","dateView","timeView","content","toolbar","collapse","inline","removeClass","toolbarPlacement","dataToOptions","eData","dataOptions","is","data","find","dateOptions","Object","extend","each","key","attributeName","charAt","toUpperCase","slice","place","parent","position","offset","vertical","widgetPositioning","horizontal","widgetParent","after","children","first","top","height","window","scrollTop","outerHeight","width","outerWidth","css","parents","filter","this","bottom","notifyEvent","e","type","isSame","oldDate","trigger","viewUpdate","change","showMode","dir","Math","max","min","hide","show","fillDow","currentDate","startOf","text","isBefore","endOf","format","add","isInDisabledDates","testDate","disabledDates","isInEnabledDates","enabledDates","isInDisabledHours","disabledHours","isInEnabledHours","enabledHours","isValid","targetMoment","minDate","maxDate","isAfter","daysOfWeekDisabled","day","disabledTimeIntervals","found","isBetween","fillMonths","spans","monthsShort","empty","updateMonths","monthsView","monthsViewHeader","months","eq","prevYear","selectYear","nextYear","subtract","year","month","index","updateYears","yearsView","yearsViewHeader","startYear","endYear","prevDecade","selectDecade","nextDecade","updateDecades","endDecadeYear","decadesView","decadesViewHeader","startDecade","y","endDecade","startedAt","minDateDecade","maxDateDecade","prevCentury","nextCentury","fillDate","i","daysView","daysViewHeader","clsNames","prevMonth","selectMonth","nextMonth","dayViewHeaderFormat","weekday","week","classNames","join","fillHours","table","currentHour","hour","fillMinutes","currentMinute","step","stepping","minute","fillSeconds","currentSecond","second","fillTime","toggle","newDate","timeComponents","hours","update","setValue","val","locale","minutes","round","seconds","keepInvalid","transitioning","collapseData","hasClass","toggleClass","off","remove","blur","parseInputDate","inputDate","Date","actions","pickerSwitch","target","closest","parseInt","selectDay","keepOpen","incrementHours","incrementMinutes","incrementSeconds","decrementHours","decrementMinutes","decrementSeconds","togglePicker","$this","$parent","expanded","closed","showPicker","showHours","showMinutes","showSeconds","selectHour","call","selectMinute","selectSecond","todaysDate","doAction","currentTarget","arguments","currentMoment","useCurrentGranularity","m","prop","ignoreReadonly","trim","useCurrent","on","focusOnShow","focus","keydown","index2","keyBindKeys","allModifiersPressed","handler","pressedKeys","pressedModifiers","currentKey","which","pressed","hasOwnProperty","keyBinds","split","stopPropagation","preventDefault","keyup","parsedDate","stopImmediatePropagation","attachDatePickerElementEvents","debug","allowInputToggle","detachDatePickerElementEvents","indexGivenDates","givenDatesArray","givenDatesIndexed","dDate","keys","indexGivenHours","givenHoursArray","givenHoursIndexed","initFormatting","replace","formatInput","newinput","localeData","longDateFormat","formatInput2","extraFormats","destroy","removeData","disable","enable","newOptions","value","newFormat","newZone","formats","Array","dates","splice","reduce","previousValue","currentValue","isNaN","sort","tries","defaultDate","useCurrentOptions","viewMode","toString","datepickerInput","fn","datetimepicker","returnValue","args","prototype","isInstance","thisMethods","_options","defaults","instance","inArray","control up","control down","control space","click"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~0b12a440.js","sourcesContent":["/*! version : 4.17.47\n =========================================================\n bootstrap-datetimejs\n https://github.com/Eonasdan/bootstrap-datetimepicker\n Copyright (c) 2015 Jonathan Peterson\n =========================================================\n */\n/*\n The MIT License (MIT)\n\n Copyright (c) 2015 Jonathan Peterson\n\n Permission is hereby granted, free of charge, to any person obtaining a copy\n of this software and associated documentation files (the \"Software\"), to deal\n in the Software without restriction, including without limitation the rights\n to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the Software is\n furnished to do so, subject to the following conditions:\n\n The above copyright notice and this permission notice shall be included in\n all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n THE SOFTWARE.\n */\n/*global define:false */\n/*global exports:false */\n/*global require:false */\n/*global jQuery:false */\n/*global moment:false */\n(function (factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        // AMD is used - Register as an anonymous module.\n        define(['jquery', 'moment'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('jquery'), require('moment'));\n    } else {\n        // Neither AMD nor CommonJS used. Use global variables.\n        if (typeof jQuery === 'undefined') {\n            throw 'bootstrap-datetimepicker requires jQuery to be loaded first';\n        }\n        if (typeof moment === 'undefined') {\n            throw 'bootstrap-datetimepicker requires Moment.js to be loaded first';\n        }\n        factory(jQuery, moment);\n    }\n}(function ($, moment) {\n    'use strict';\n    if (!moment) {\n        throw new Error('bootstrap-datetimepicker requires Moment.js to be loaded first');\n    }\n\n    var dateTimePicker = function (element, options) {\n        var picker = {},\n            date,\n            viewDate,\n            unset = true,\n            input,\n            component = false,\n            widget = false,\n            use24Hours,\n            minViewModeNumber = 0,\n            actualFormat,\n            parseFormats,\n            currentViewMode,\n            datePickerModes = [\n                {\n                    clsName: 'days',\n                    navFnc: 'M',\n                    navStep: 1\n                },\n                {\n                    clsName: 'months',\n                    navFnc: 'y',\n                    navStep: 1\n                },\n                {\n                    clsName: 'years',\n                    navFnc: 'y',\n                    navStep: 10\n                },\n                {\n                    clsName: 'decades',\n                    navFnc: 'y',\n                    navStep: 100\n                }\n            ],\n            viewModes = ['days', 'months', 'years', 'decades'],\n            verticalModes = ['top', 'bottom', 'auto'],\n            horizontalModes = ['left', 'right', 'auto'],\n            toolbarPlacements = ['default', 'top', 'bottom'],\n            keyMap = {\n                'up': 38,\n                38: 'up',\n                'down': 40,\n                40: 'down',\n                'left': 37,\n                37: 'left',\n                'right': 39,\n                39: 'right',\n                'tab': 9,\n                9: 'tab',\n                'escape': 27,\n                27: 'escape',\n                'enter': 13,\n                13: 'enter',\n                'pageUp': 33,\n                33: 'pageUp',\n                'pageDown': 34,\n                34: 'pageDown',\n                'shift': 16,\n                16: 'shift',\n                'control': 17,\n                17: 'control',\n                'space': 32,\n                32: 'space',\n                't': 84,\n                84: 't',\n                'delete': 46,\n                46: 'delete'\n            },\n            keyState = {},\n\n            /********************************************************************************\n             *\n             * Private functions\n             *\n             ********************************************************************************/\n\n            hasTimeZone = function () {\n                return moment.tz !== undefined && options.timeZone !== undefined && options.timeZone !== null && options.timeZone !== '';\n            },\n\n            getMoment = function (d) {\n                var returnMoment;\n\n                if (d === undefined || d === null) {\n                    returnMoment = moment(); //TODO should this use format? and locale?\n                } else if (moment.isDate(d) || moment.isMoment(d)) {\n                    // If the date that is passed in is already a Date() or moment() object,\n                    // pass it directly to moment.\n                    returnMoment = moment(d);\n                } else if (hasTimeZone()) { // There is a string to parse and a default time zone\n                    // parse with the tz function which takes a default time zone if it is not in the format string\n                    returnMoment = moment.tz(d, parseFormats, options.useStrict, options.timeZone);\n                } else {\n                    returnMoment = moment(d, parseFormats, options.useStrict);\n                }\n\n                if (hasTimeZone()) {\n                    returnMoment.tz(options.timeZone);\n                }\n\n                return returnMoment;\n            },\n\n            isEnabled = function (granularity) {\n                if (typeof granularity !== 'string' || granularity.length > 1) {\n                    throw new TypeError('isEnabled expects a single character string parameter');\n                }\n                switch (granularity) {\n                    case 'y':\n                        return actualFormat.indexOf('Y') !== -1;\n                    case 'M':\n                        return actualFormat.indexOf('M') !== -1;\n                    case 'd':\n                        return actualFormat.toLowerCase().indexOf('d') !== -1;\n                    case 'h':\n                    case 'H':\n                        return actualFormat.toLowerCase().indexOf('h') !== -1;\n                    case 'm':\n                        return actualFormat.indexOf('m') !== -1;\n                    case 's':\n                        return actualFormat.indexOf('s') !== -1;\n                    default:\n                        return false;\n                }\n            },\n\n            hasTime = function () {\n                return (isEnabled('h') || isEnabled('m') || isEnabled('s'));\n            },\n\n            hasDate = function () {\n                return (isEnabled('y') || isEnabled('M') || isEnabled('d'));\n            },\n\n            getDatePickerTemplate = function () {\n                var headTemplate = $('<thead>')\n                        .append($('<tr>')\n                            .append($('<th>').addClass('prev').attr('data-action', 'previous')\n                                .append($('<i>').addClass(options.icons.previous))\n                                )\n                            .append($('<th>').addClass('picker-switch').attr('data-action', 'pickerSwitch').attr('colspan', (options.calendarWeeks ? '6' : '5')))\n                            .append($('<th>').addClass('next').attr('data-action', 'next')\n                                .append($('<i>').addClass(options.icons.next))\n                                )\n                            ),\n                    contTemplate = $('<tbody>')\n                        .append($('<tr>')\n                            .append($('<td>').attr('colspan', (options.calendarWeeks ? '8' : '7')))\n                            );\n\n                return [\n                    $('<div>').addClass('datepicker-days')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate)\n                            .append($('<tbody>'))\n                            ),\n                    $('<div>').addClass('datepicker-months')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            ),\n                    $('<div>').addClass('datepicker-years')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            ),\n                    $('<div>').addClass('datepicker-decades')\n                        .append($('<table>').addClass('table-condensed')\n                            .append(headTemplate.clone())\n                            .append(contTemplate.clone())\n                            )\n                ];\n            },\n\n            getTimePickerMainTemplate = function () {\n                var topRow = $('<tr>'),\n                    middleRow = $('<tr>'),\n                    bottomRow = $('<tr>');\n\n                if (isEnabled('h')) {\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementHour }).addClass('btn').attr('data-action', 'incrementHours').append($('<i>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-hour').attr({ 'data-time-component': 'hours', 'title': options.tooltips.pickHour }).attr('data-action', 'showHours')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementHour }).addClass('btn').attr('data-action', 'decrementHours').append($('<i>').addClass(options.icons.down))));\n                }\n                if (isEnabled('m')) {\n                    if (isEnabled('h')) {\n                        topRow.append($('<td>').addClass('separator'));\n                        middleRow.append($('<td>').addClass('separator').html(':'));\n                        bottomRow.append($('<td>').addClass('separator'));\n                    }\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementMinute }).addClass('btn').attr('data-action', 'incrementMinutes')\n                            .append($('<i>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-minute').attr({ 'data-time-component': 'minutes', 'title': options.tooltips.pickMinute }).attr('data-action', 'showMinutes')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementMinute }).addClass('btn').attr('data-action', 'decrementMinutes')\n                            .append($('<i>').addClass(options.icons.down))));\n                }\n                if (isEnabled('s')) {\n                    if (isEnabled('m')) {\n                        topRow.append($('<td>').addClass('separator'));\n                        middleRow.append($('<td>').addClass('separator').html(':'));\n                        bottomRow.append($('<td>').addClass('separator'));\n                    }\n                    topRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.incrementSecond }).addClass('btn').attr('data-action', 'incrementSeconds')\n                            .append($('<i>').addClass(options.icons.up))));\n                    middleRow.append($('<td>')\n                        .append($('<span>').addClass('timepicker-second').attr({ 'data-time-component': 'seconds', 'title': options.tooltips.pickSecond }).attr('data-action', 'showSeconds')));\n                    bottomRow.append($('<td>')\n                        .append($('<a>').attr({ href: '#', tabindex: '-1', 'title': options.tooltips.decrementSecond }).addClass('btn').attr('data-action', 'decrementSeconds')\n                            .append($('<i>').addClass(options.icons.down))));\n                }\n\n                if (!use24Hours) {\n                    topRow.append($('<td>').addClass('separator'));\n                    middleRow.append($('<td>')\n                        .append($('<button>').addClass('btn btn-primary').attr({ 'data-action': 'togglePeriod', tabindex: '-1', 'title': options.tooltips.togglePeriod })));\n                    bottomRow.append($('<td>').addClass('separator'));\n                }\n\n                return $('<div>').addClass('timepicker-picker')\n                    .append($('<table>').addClass('table-condensed')\n                        .append([topRow, middleRow, bottomRow]));\n            },\n\n            getTimePickerTemplate = function () {\n                var hoursView = $('<div>').addClass('timepicker-hours')\n                        .append($('<table>').addClass('table-condensed')),\n                    minutesView = $('<div>').addClass('timepicker-minutes')\n                        .append($('<table>').addClass('table-condensed')),\n                    secondsView = $('<div>').addClass('timepicker-seconds')\n                        .append($('<table>').addClass('table-condensed')),\n                    ret = [getTimePickerMainTemplate()];\n\n                if (isEnabled('h')) {\n                    ret.push(hoursView);\n                }\n                if (isEnabled('m')) {\n                    ret.push(minutesView);\n                }\n                if (isEnabled('s')) {\n                    ret.push(secondsView);\n                }\n\n                return ret;\n            },\n\n            getToolbar = function () {\n                var row = [];\n                if (options.showTodayButton) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'today', 'title': options.tooltips.today }).append($('<i>').addClass(options.icons.today))));\n                }\n                if (!options.sideBySide && hasDate() && hasTime()) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'togglePicker', 'title': options.tooltips.selectTime }).append($('<i>').addClass(options.icons.time))));\n                }\n                if (options.showClear) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'clear', 'title': options.tooltips.clear }).append($('<i>').addClass(options.icons.clear))));\n                }\n                if (options.showClose) {\n                    row.push($('<td>').append($('<a>').attr({ 'data-action': 'close', 'title': options.tooltips.close }).append($('<i>').addClass(options.icons.close))));\n                }\n                return $('<table>').addClass('table-condensed').append($('<tbody>').append($('<tr>').append(row)));\n            },\n\n            getTemplate = function () {\n                var template = $('<div>').addClass('bootstrap-datetimepicker-widget dropdown-menu'),\n                    dateView = $('<div>').addClass('datepicker').append(getDatePickerTemplate()),\n                    timeView = $('<div>').addClass('timepicker').append(getTimePickerTemplate()),\n                    content = $('<ul>').addClass('list-unstyled'),\n                    toolbar = $('<li>').addClass('picker-switch' + (options.collapse ? ' accordion-toggle' : '')).append(getToolbar());\n\n                if (options.inline) {\n                    template.removeClass('dropdown-menu');\n                }\n\n                if (use24Hours) {\n                    template.addClass('usetwentyfour');\n                }\n\n                if (isEnabled('s') && !use24Hours) {\n                    template.addClass('wider');\n                }\n\n                if (options.sideBySide && hasDate() && hasTime()) {\n                    template.addClass('timepicker-sbs');\n                    if (options.toolbarPlacement === 'top') {\n                        template.append(toolbar);\n                    }\n                    template.append(\n                        $('<div>').addClass('row')\n                            .append(dateView.addClass('col-md-6'))\n                            .append(timeView.addClass('col-md-6'))\n                    );\n                    if (options.toolbarPlacement === 'bottom') {\n                        template.append(toolbar);\n                    }\n                    return template;\n                }\n\n                if (options.toolbarPlacement === 'top') {\n                    content.append(toolbar);\n                }\n                if (hasDate()) {\n                    content.append($('<li>').addClass((options.collapse && hasTime() ? 'collapse show' : '')).append(dateView));\n                }\n                if (options.toolbarPlacement === 'default') {\n                    content.append(toolbar);\n                }\n                if (hasTime()) {\n                    content.append($('<li>').addClass((options.collapse && hasDate() ? 'collapse' : '')).append(timeView));\n                }\n                if (options.toolbarPlacement === 'bottom') {\n                    content.append(toolbar);\n                }\n                return template.append(content);\n            },\n\n            dataToOptions = function () {\n                var eData,\n                    dataOptions = {};\n\n                if (element.is('input') || options.inline) {\n                    eData = element.data();\n                } else {\n                    eData = element.find('input').data();\n                }\n\n                if (eData.dateOptions && eData.dateOptions instanceof Object) {\n                    dataOptions = $.extend(true, dataOptions, eData.dateOptions);\n                }\n\n                $.each(options, function (key) {\n                    var attributeName = 'date' + key.charAt(0).toUpperCase() + key.slice(1);\n                    if (eData[attributeName] !== undefined) {\n                        dataOptions[key] = eData[attributeName];\n                    }\n                });\n                return dataOptions;\n            },\n\n            place = function () {\n                var position = (component || element).position(),\n                    offset = (component || element).offset(),\n                    vertical = options.widgetPositioning.vertical,\n                    horizontal = options.widgetPositioning.horizontal,\n                    parent;\n\n                if (options.widgetParent) {\n                    parent = options.widgetParent.append(widget);\n                } else if (element.is('input')) {\n                    parent = element.after(widget).parent();\n                } else if (options.inline) {\n                    parent = element.append(widget);\n                    return;\n                } else {\n                    parent = element;\n                    element.children().first().after(widget);\n                }\n\n                // Top and bottom logic\n                if (vertical === 'auto') {\n                    if (offset.top + widget.height() * 1.5 >= $(window).height() + $(window).scrollTop() &&\n                        widget.height() + element.outerHeight() < offset.top) {\n                        vertical = 'top';\n                    } else {\n                        vertical = 'bottom';\n                    }\n                }\n\n                // Left and right logic\n                if (horizontal === 'auto') {\n                    if (parent.width() < offset.left + widget.outerWidth() / 2 &&\n                        offset.left + widget.outerWidth() > $(window).width()) {\n                        horizontal = 'right';\n                    } else {\n                        horizontal = 'left';\n                    }\n                }\n\n                if (vertical === 'top') {\n                    widget.addClass('top').removeClass('bottom');\n                } else {\n                    widget.addClass('bottom').removeClass('top');\n                }\n\n                if (horizontal === 'right') {\n                    widget.addClass('pull-right');\n                } else {\n                    widget.removeClass('pull-right');\n                }\n\n                // find the first parent element that has a non-static css positioning\n                if (parent.css('position') === 'static') {\n                    parent = parent.parents().filter(function () {\n                        return $(this).css('position') !== 'static';\n                    }).first();\n                }\n\n                if (parent.length === 0) {\n                    throw new Error('datetimepicker component should be placed within a non-static positioned container');\n                }\n\n                widget.css({\n                    top: vertical === 'top' ? 'auto' : position.top + element.outerHeight(),\n                    bottom: vertical === 'top' ? parent.outerHeight() - (parent === element ? 0 : position.top) : 'auto',\n                    left: horizontal === 'left' ? (parent === element ? 0 : position.left) : 'auto',\n                    right: horizontal === 'left' ? 'auto' : parent.outerWidth() - element.outerWidth() - (parent === element ? 0 : position.left)\n                });\n            },\n\n            notifyEvent = function (e) {\n                if (e.type === 'dp.change' && ((e.date && e.date.isSame(e.oldDate)) || (!e.date && !e.oldDate))) {\n                    return;\n                }\n                element.trigger(e);\n            },\n\n            viewUpdate = function (e) {\n                if (e === 'y') {\n                    e = 'YYYY';\n                }\n                notifyEvent({\n                    type: 'dp.update',\n                    change: e,\n                    viewDate: viewDate.clone()\n                });\n            },\n\n            showMode = function (dir) {\n                if (!widget) {\n                    return;\n                }\n                if (dir) {\n                    currentViewMode = Math.max(minViewModeNumber, Math.min(3, currentViewMode + dir));\n                }\n                widget.find('.datepicker > div').hide().filter('.datepicker-' + datePickerModes[currentViewMode].clsName).show();\n            },\n\n            fillDow = function () {\n                var row = $('<tr>'),\n                    currentDate = viewDate.clone().startOf('w').startOf('d');\n\n                if (options.calendarWeeks === true) {\n                    row.append($('<th>').addClass('cw').text('#'));\n                }\n\n                while (currentDate.isBefore(viewDate.clone().endOf('w'))) {\n                    row.append($('<th>').addClass('dow').text(currentDate.format('dd')));\n                    currentDate.add(1, 'd');\n                }\n                widget.find('.datepicker-days thead').append(row);\n            },\n\n            isInDisabledDates = function (testDate) {\n                return options.disabledDates[testDate.format('YYYY-MM-DD')] === true;\n            },\n\n            isInEnabledDates = function (testDate) {\n                return options.enabledDates[testDate.format('YYYY-MM-DD')] === true;\n            },\n\n            isInDisabledHours = function (testDate) {\n                return options.disabledHours[testDate.format('H')] === true;\n            },\n\n            isInEnabledHours = function (testDate) {\n                return options.enabledHours[testDate.format('H')] === true;\n            },\n\n            isValid = function (targetMoment, granularity) {\n                if (!targetMoment.isValid()) {\n                    return false;\n                }\n                if (options.disabledDates && granularity === 'd' && isInDisabledDates(targetMoment)) {\n                    return false;\n                }\n                if (options.enabledDates && granularity === 'd' && !isInEnabledDates(targetMoment)) {\n                    return false;\n                }\n                if (options.minDate && targetMoment.isBefore(options.minDate, granularity)) {\n                    return false;\n                }\n                if (options.maxDate && targetMoment.isAfter(options.maxDate, granularity)) {\n                    return false;\n                }\n                if (options.daysOfWeekDisabled && granularity === 'd' && options.daysOfWeekDisabled.indexOf(targetMoment.day()) !== -1) {\n                    return false;\n                }\n                if (options.disabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && isInDisabledHours(targetMoment)) {\n                    return false;\n                }\n                if (options.enabledHours && (granularity === 'h' || granularity === 'm' || granularity === 's') && !isInEnabledHours(targetMoment)) {\n                    return false;\n                }\n                if (options.disabledTimeIntervals && (granularity === 'h' || granularity === 'm' || granularity === 's')) {\n                    var found = false;\n                    $.each(options.disabledTimeIntervals, function () {\n                        if (targetMoment.isBetween(this[0], this[1])) {\n                            found = true;\n                            return false;\n                        }\n                    });\n                    if (found) {\n                        return false;\n                    }\n                }\n                return true;\n            },\n\n            fillMonths = function () {\n                var spans = [],\n                    monthsShort = viewDate.clone().startOf('y').startOf('d');\n                while (monthsShort.isSame(viewDate, 'y')) {\n                    spans.push($('<span>').attr('data-action', 'selectMonth').addClass('month').text(monthsShort.format('MMM')));\n                    monthsShort.add(1, 'M');\n                }\n                widget.find('.datepicker-months td').empty().append(spans);\n            },\n\n            updateMonths = function () {\n                var monthsView = widget.find('.datepicker-months'),\n                    monthsViewHeader = monthsView.find('th'),\n                    months = monthsView.find('tbody').find('span');\n\n                monthsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevYear);\n                monthsViewHeader.eq(1).attr('title', options.tooltips.selectYear);\n                monthsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextYear);\n\n                monthsView.find('.disabled').removeClass('disabled');\n\n                if (!isValid(viewDate.clone().subtract(1, 'y'), 'y')) {\n                    monthsViewHeader.eq(0).addClass('disabled');\n                }\n\n                monthsViewHeader.eq(1).text(viewDate.year());\n\n                if (!isValid(viewDate.clone().add(1, 'y'), 'y')) {\n                    monthsViewHeader.eq(2).addClass('disabled');\n                }\n\n                months.removeClass('active');\n                if (date.isSame(viewDate, 'y') && !unset) {\n                    months.eq(date.month()).addClass('active');\n                }\n\n                months.each(function (index) {\n                    if (!isValid(viewDate.clone().month(index), 'M')) {\n                        $(this).addClass('disabled');\n                    }\n                });\n            },\n\n            updateYears = function () {\n                var yearsView = widget.find('.datepicker-years'),\n                    yearsViewHeader = yearsView.find('th'),\n                    startYear = viewDate.clone().subtract(5, 'y'),\n                    endYear = viewDate.clone().add(6, 'y'),\n                    html = '';\n\n                yearsViewHeader.eq(0).find('span').attr('title', options.tooltips.prevDecade);\n                yearsViewHeader.eq(1).attr('title', options.tooltips.selectDecade);\n                yearsViewHeader.eq(2).find('span').attr('title', options.tooltips.nextDecade);\n\n                yearsView.find('.disabled').removeClass('disabled');\n\n                if (options.minDate && options.minDate.isAfter(startYear, 'y')) {\n                    yearsViewHeader.eq(0).addClass('disabled');\n                }\n\n                yearsViewHeader.eq(1).text(startYear.year() + '-' + endYear.year());\n\n                if (options.maxDate && options.maxDate.isBefore(endYear, 'y')) {\n                    yearsViewHeader.eq(2).addClass('disabled');\n                }\n\n                while (!startYear.isAfter(endYear, 'y')) {\n                    html += '<span data-action=\"selectYear\" class=\"year' + (startYear.isSame(date, 'y') && !unset ? ' active' : '') + (!isValid(startYear, 'y') ? ' disabled' : '') + '\">' + startYear.year() + '</span>';\n                    startYear.add(1, 'y');\n                }\n\n                yearsView.find('td').html(html);\n            },\n\n            updateDecades = function () {\n                var decadesView = widget.find('.datepicker-decades'),\n                    decadesViewHeader = decadesView.find('th'),\n                    startDecade = moment({ y: viewDate.year() - (viewDate.year() % 100) - 1 }),\n                    endDecade = startDecade.clone().add(100, 'y'),\n                    startedAt = startDecade.clone(),\n                    minDateDecade = false,\n                    maxDateDecade = false,\n                    endDecadeYear,\n                    html = '';\n\n                decadesViewHeader.eq(0).find('span').attr('title', options.tooltips.prevCentury);\n                decadesViewHeader.eq(2).find('span').attr('title', options.tooltips.nextCentury);\n\n                decadesView.find('.disabled').removeClass('disabled');\n\n                if (startDecade.isSame(moment({ y: 1900 })) || (options.minDate && options.minDate.isAfter(startDecade, 'y'))) {\n                    decadesViewHeader.eq(0).addClass('disabled');\n                }\n\n                decadesViewHeader.eq(1).text(startDecade.year() + '-' + endDecade.year());\n\n                if (startDecade.isSame(moment({ y: 2000 })) || (options.maxDate && options.maxDate.isBefore(endDecade, 'y'))) {\n                    decadesViewHeader.eq(2).addClass('disabled');\n                }\n\n                while (!startDecade.isAfter(endDecade, 'y')) {\n                    endDecadeYear = startDecade.year() + 12;\n                    minDateDecade = options.minDate && options.minDate.isAfter(startDecade, 'y') && options.minDate.year() <= endDecadeYear;\n                    maxDateDecade = options.maxDate && options.maxDate.isAfter(startDecade, 'y') && options.maxDate.year() <= endDecadeYear;\n                    html += '<span data-action=\"selectDecade\" class=\"decade' + (date.isAfter(startDecade) && date.year() <= endDecadeYear ? ' active' : '') +\n                        (!isValid(startDecade, 'y') && !minDateDecade && !maxDateDecade ? ' disabled' : '') + '\" data-selection=\"' + (startDecade.year() + 6) + '\">' + (startDecade.year() + 1) + ' - ' + (startDecade.year() + 12) + '</span>';\n                    startDecade.add(12, 'y');\n                }\n                html += '<span></span><span></span><span></span>'; //push the dangling block over, at least this way it's even\n\n                decadesView.find('td').html(html);\n                decadesViewHeader.eq(1).text((startedAt.year() + 1) + '-' + (startDecade.year()));\n            },\n\n            fillDate = function () {\n                var daysView = widget.find('.datepicker-days'),\n                    daysViewHeader = daysView.find('th'),\n                    currentDate,\n                    html = [],\n                    row,\n                    clsNames = [],\n                    i;\n\n                if (!hasDate()) {\n                    return;\n                }\n\n                daysViewHeader.eq(0).find('span').attr('title', options.tooltips.prevMonth);\n                daysViewHeader.eq(1).attr('title', options.tooltips.selectMonth);\n                daysViewHeader.eq(2).find('span').attr('title', options.tooltips.nextMonth);\n\n                daysView.find('.disabled').removeClass('disabled');\n                daysViewHeader.eq(1).text(viewDate.format(options.dayViewHeaderFormat));\n\n                if (!isValid(viewDate.clone().subtract(1, 'M'), 'M')) {\n                    daysViewHeader.eq(0).addClass('disabled');\n                }\n                if (!isValid(viewDate.clone().add(1, 'M'), 'M')) {\n                    daysViewHeader.eq(2).addClass('disabled');\n                }\n\n                currentDate = viewDate.clone().startOf('M').startOf('w').startOf('d');\n\n                for (i = 0; i < 42; i++) { //always display 42 days (should show 6 weeks)\n                    if (currentDate.weekday() === 0) {\n                        row = $('<tr>');\n                        if (options.calendarWeeks) {\n                            row.append('<td class=\"cw\">' + currentDate.week() + '</td>');\n                        }\n                        html.push(row);\n                    }\n                    clsNames = ['day'];\n                    if (currentDate.isBefore(viewDate, 'M')) {\n                        clsNames.push('old');\n                    }\n                    if (currentDate.isAfter(viewDate, 'M')) {\n                        clsNames.push('new');\n                    }\n                    if (currentDate.isSame(date, 'd') && !unset) {\n                        clsNames.push('active');\n                    }\n                    if (!isValid(currentDate, 'd')) {\n                        clsNames.push('disabled');\n                    }\n                    if (currentDate.isSame(getMoment(), 'd')) {\n                        clsNames.push('today');\n                    }\n                    if (currentDate.day() === 0 || currentDate.day() === 6) {\n                        clsNames.push('weekend');\n                    }\n                    notifyEvent({\n                        type: 'dp.classify',\n                        date: currentDate,\n                        classNames: clsNames\n                    });\n                    row.append('<td data-action=\"selectDay\" data-day=\"' + currentDate.format('L') + '\" class=\"' + clsNames.join(' ') + '\">' + currentDate.date() + '</td>');\n                    currentDate.add(1, 'd');\n                }\n\n                daysView.find('tbody').empty().append(html);\n\n                updateMonths();\n\n                updateYears();\n\n                updateDecades();\n            },\n\n            fillHours = function () {\n                var table = widget.find('.timepicker-hours table'),\n                    currentHour = viewDate.clone().startOf('d'),\n                    html = [],\n                    row = $('<tr>');\n\n                if (viewDate.hour() > 11 && !use24Hours) {\n                    currentHour.hour(12);\n                }\n                while (currentHour.isSame(viewDate, 'd') && (use24Hours || (viewDate.hour() < 12 && currentHour.hour() < 12) || viewDate.hour() > 11)) {\n                    if (currentHour.hour() % 4 === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectHour\" class=\"hour' + (!isValid(currentHour, 'h') ? ' disabled' : '') + '\">' + currentHour.format(use24Hours ? 'HH' : 'hh') + '</td>');\n                    currentHour.add(1, 'h');\n                }\n                table.empty().append(html);\n            },\n\n            fillMinutes = function () {\n                var table = widget.find('.timepicker-minutes table'),\n                    currentMinute = viewDate.clone().startOf('h'),\n                    html = [],\n                    row = $('<tr>'),\n                    step = options.stepping === 1 ? 5 : options.stepping;\n\n                while (viewDate.isSame(currentMinute, 'h')) {\n                    if (currentMinute.minute() % (step * 4) === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectMinute\" class=\"minute' + (!isValid(currentMinute, 'm') ? ' disabled' : '') + '\">' + currentMinute.format('mm') + '</td>');\n                    currentMinute.add(step, 'm');\n                }\n                table.empty().append(html);\n            },\n\n            fillSeconds = function () {\n                var table = widget.find('.timepicker-seconds table'),\n                    currentSecond = viewDate.clone().startOf('m'),\n                    html = [],\n                    row = $('<tr>');\n\n                while (viewDate.isSame(currentSecond, 'm')) {\n                    if (currentSecond.second() % 20 === 0) {\n                        row = $('<tr>');\n                        html.push(row);\n                    }\n                    row.append('<td data-action=\"selectSecond\" class=\"second' + (!isValid(currentSecond, 's') ? ' disabled' : '') + '\">' + currentSecond.format('ss') + '</td>');\n                    currentSecond.add(5, 's');\n                }\n\n                table.empty().append(html);\n            },\n\n            fillTime = function () {\n                var toggle, newDate, timeComponents = widget.find('.timepicker span[data-time-component]');\n\n                if (!use24Hours) {\n                    toggle = widget.find('.timepicker [data-action=togglePeriod]');\n                    newDate = date.clone().add((date.hours() >= 12) ? -12 : 12, 'h');\n\n                    toggle.text(date.format('A'));\n\n                    if (isValid(newDate, 'h')) {\n                        toggle.removeClass('disabled');\n                    } else {\n                        toggle.addClass('disabled');\n                    }\n                }\n                timeComponents.filter('[data-time-component=hours]').text(date.format(use24Hours ? 'HH' : 'hh'));\n                timeComponents.filter('[data-time-component=minutes]').text(date.format('mm'));\n                timeComponents.filter('[data-time-component=seconds]').text(date.format('ss'));\n\n                fillHours();\n                fillMinutes();\n                fillSeconds();\n            },\n\n            update = function () {\n                if (!widget) {\n                    return;\n                }\n                fillDate();\n                fillTime();\n            },\n\n            setValue = function (targetMoment) {\n                var oldDate = unset ? null : date;\n\n                // case of calling setValue(null or false)\n                if (!targetMoment) {\n                    unset = true;\n                    input.val('');\n                    element.data('date', '');\n                    notifyEvent({\n                        type: 'dp.change',\n                        date: false,\n                        oldDate: oldDate\n                    });\n                    update();\n                    return;\n                }\n\n                targetMoment = targetMoment.clone().locale(options.locale);\n\n                if (hasTimeZone()) {\n                    targetMoment.tz(options.timeZone);\n                }\n\n                if (options.stepping !== 1) {\n                    targetMoment.minutes((Math.round(targetMoment.minutes() / options.stepping) * options.stepping)).seconds(0);\n\n                    while (options.minDate && targetMoment.isBefore(options.minDate)) {\n                        targetMoment.add(options.stepping, 'minutes');\n                    }\n                }\n\n                if (isValid(targetMoment)) {\n                    date = targetMoment;\n                    viewDate = date.clone();\n                    input.val(date.format(actualFormat));\n                    element.data('date', date.format(actualFormat));\n                    unset = false;\n                    update();\n                    notifyEvent({\n                        type: 'dp.change',\n                        date: date.clone(),\n                        oldDate: oldDate\n                    });\n                } else {\n                    if (!options.keepInvalid) {\n                        input.val(unset ? '' : date.format(actualFormat));\n                    } else {\n                        notifyEvent({\n                            type: 'dp.change',\n                            date: targetMoment,\n                            oldDate: oldDate\n                        });\n                    }\n                    notifyEvent({\n                        type: 'dp.error',\n                        date: targetMoment,\n                        oldDate: oldDate\n                    });\n                }\n            },\n\n            /**\n             * Hides the widget. Possibly will emit dp.hide\n             */\n            hide = function () {\n                var transitioning = false;\n                if (!widget) {\n                    return picker;\n                }\n                // Ignore event if in the middle of a picker transition\n                widget.find('.collapse').each(function () {\n                    var collapseData = $(this).data('collapse');\n                    if (collapseData && collapseData.transitioning) {\n                        transitioning = true;\n                        return false;\n                    }\n                    return true;\n                });\n                if (transitioning) {\n                    return picker;\n                }\n                if (component && component.hasClass('btn')) {\n                    component.toggleClass('active');\n                }\n                widget.hide();\n\n                $(window).off('resize', place);\n                widget.off('click', '[data-action]');\n                widget.off('mousedown', false);\n\n                widget.remove();\n                widget = false;\n\n                notifyEvent({\n                    type: 'dp.hide',\n                    date: date.clone()\n                });\n\n                input.blur();\n\n                viewDate = date.clone();\n\n                return picker;\n            },\n\n            clear = function () {\n                setValue(null);\n            },\n\n            parseInputDate = function (inputDate) {\n                if (options.parseInputDate === undefined) {\n                    if (!moment.isMoment(inputDate) || inputDate instanceof Date) {\n                        inputDate = getMoment(inputDate);\n                    }\n                } else {\n                    inputDate = options.parseInputDate(inputDate);\n                }\n                //inputDate.locale(options.locale);\n                return inputDate;\n            },\n\n            /********************************************************************************\n             *\n             * Widget UI interaction functions\n             *\n             ********************************************************************************/\n            actions = {\n                next: function () {\n                    var navFnc = datePickerModes[currentViewMode].navFnc;\n                    viewDate.add(datePickerModes[currentViewMode].navStep, navFnc);\n                    fillDate();\n                    viewUpdate(navFnc);\n                },\n\n                previous: function () {\n                    var navFnc = datePickerModes[currentViewMode].navFnc;\n                    viewDate.subtract(datePickerModes[currentViewMode].navStep, navFnc);\n                    fillDate();\n                    viewUpdate(navFnc);\n                },\n\n                pickerSwitch: function () {\n                    showMode(1);\n                },\n\n                selectMonth: function (e) {\n                    var month = $(e.target).closest('tbody').find('span').index($(e.target));\n                    viewDate.month(month);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()).month(viewDate.month()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('M');\n                },\n\n                selectYear: function (e) {\n                    var year = parseInt($(e.target).text(), 10) || 0;\n                    viewDate.year(year);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('YYYY');\n                },\n\n                selectDecade: function (e) {\n                    var year = parseInt($(e.target).data('selection'), 10) || 0;\n                    viewDate.year(year);\n                    if (currentViewMode === minViewModeNumber) {\n                        setValue(date.clone().year(viewDate.year()));\n                        if (!options.inline) {\n                            hide();\n                        }\n                    } else {\n                        showMode(-1);\n                        fillDate();\n                    }\n                    viewUpdate('YYYY');\n                },\n\n                selectDay: function (e) {\n                    var day = viewDate.clone();\n                    if ($(e.target).is('.old')) {\n                        day.subtract(1, 'M');\n                    }\n                    if ($(e.target).is('.new')) {\n                        day.add(1, 'M');\n                    }\n                    setValue(day.date(parseInt($(e.target).text(), 10)));\n                    if (!hasTime() && !options.keepOpen && !options.inline) {\n                        hide();\n                    }\n                },\n\n                incrementHours: function () {\n                    var newDate = date.clone().add(1, 'h');\n                    if (isValid(newDate, 'h')) {\n                        setValue(newDate);\n                    }\n                },\n\n                incrementMinutes: function () {\n                    var newDate = date.clone().add(options.stepping, 'm');\n                    if (isValid(newDate, 'm')) {\n                        setValue(newDate);\n                    }\n                },\n\n                incrementSeconds: function () {\n                    var newDate = date.clone().add(1, 's');\n                    if (isValid(newDate, 's')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementHours: function () {\n                    var newDate = date.clone().subtract(1, 'h');\n                    if (isValid(newDate, 'h')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementMinutes: function () {\n                    var newDate = date.clone().subtract(options.stepping, 'm');\n                    if (isValid(newDate, 'm')) {\n                        setValue(newDate);\n                    }\n                },\n\n                decrementSeconds: function () {\n                    var newDate = date.clone().subtract(1, 's');\n                    if (isValid(newDate, 's')) {\n                        setValue(newDate);\n                    }\n                },\n\n                togglePeriod: function () {\n                    setValue(date.clone().add((date.hours() >= 12) ? -12 : 12, 'h'));\n                },\n\n                togglePicker: function (e) {\n                    var $this = $(e.target),\n                        $parent = $this.closest('ul'),\n                        expanded = $parent.find('.show'),\n                        closed = $parent.find('.collapse:not(.show)'),\n                        collapseData;\n\n                    if (expanded && expanded.length) {\n                        collapseData = expanded.data('collapse');\n                        if (collapseData && collapseData.transitioning) {\n                            return;\n                        }\n                        if (expanded.collapse) { // if collapse plugin is available through bootstrap.js then use it\n                            expanded.collapse('hide');\n                            closed.collapse('show');\n                        } else { // otherwise just toggle in class on the two views\n                            expanded.removeClass('show');\n                            closed.addClass('show');\n                        }\n                        if ($this.is('i')) {\n                            $this.toggleClass(options.icons.time + ' ' + options.icons.date);\n                        } else {\n                            $this.find('i').toggleClass(options.icons.time + ' ' + options.icons.date);\n                        }\n\n                        // NOTE: uncomment if toggled state will be restored in show()\n                        //if (component) {\n                        //    component.find('span').toggleClass(options.icons.time + ' ' + options.icons.date);\n                        //}\n                    }\n                },\n\n                showPicker: function () {\n                    widget.find('.timepicker > div:not(.timepicker-picker)').hide();\n                    widget.find('.timepicker .timepicker-picker').show();\n                },\n\n                showHours: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-hours').show();\n                },\n\n                showMinutes: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-minutes').show();\n                },\n\n                showSeconds: function () {\n                    widget.find('.timepicker .timepicker-picker').hide();\n                    widget.find('.timepicker .timepicker-seconds').show();\n                },\n\n                selectHour: function (e) {\n                    var hour = parseInt($(e.target).text(), 10);\n\n                    if (!use24Hours) {\n                        if (date.hours() >= 12) {\n                            if (hour !== 12) {\n                                hour += 12;\n                            }\n                        } else {\n                            if (hour === 12) {\n                                hour = 0;\n                            }\n                        }\n                    }\n                    setValue(date.clone().hours(hour));\n                    actions.showPicker.call(picker);\n                },\n\n                selectMinute: function (e) {\n                    setValue(date.clone().minutes(parseInt($(e.target).text(), 10)));\n                    actions.showPicker.call(picker);\n                },\n\n                selectSecond: function (e) {\n                    setValue(date.clone().seconds(parseInt($(e.target).text(), 10)));\n                    actions.showPicker.call(picker);\n                },\n\n                clear: clear,\n\n                today: function () {\n                    var todaysDate = getMoment();\n                    if (isValid(todaysDate, 'd')) {\n                        setValue(todaysDate);\n                    }\n                },\n\n                close: hide\n            },\n\n            doAction = function (e) {\n                if ($(e.currentTarget).is('.disabled')) {\n                    return false;\n                }\n                actions[$(e.currentTarget).data('action')].apply(picker, arguments);\n                return false;\n            },\n\n            /**\n             * Shows the widget. Possibly will emit dp.show and dp.change\n             */\n            show = function () {\n                var currentMoment,\n                    useCurrentGranularity = {\n                        'year': function (m) {\n                            return m.month(0).date(1).hours(0).seconds(0).minutes(0);\n                        },\n                        'month': function (m) {\n                            return m.date(1).hours(0).seconds(0).minutes(0);\n                        },\n                        'day': function (m) {\n                            return m.hours(0).seconds(0).minutes(0);\n                        },\n                        'hour': function (m) {\n                            return m.seconds(0).minutes(0);\n                        },\n                        'minute': function (m) {\n                            return m.seconds(0);\n                        }\n                    };\n\n                if (input.prop('disabled') || (!options.ignoreReadonly && input.prop('readonly')) || widget) {\n                    return picker;\n                }\n                if (input.val() !== undefined && input.val().trim().length !== 0) {\n                    setValue(parseInputDate(input.val().trim()));\n                } else if (unset && options.useCurrent && (options.inline || (input.is('input') && input.val().trim().length === 0))) {\n                    currentMoment = getMoment();\n                    if (typeof options.useCurrent === 'string') {\n                        currentMoment = useCurrentGranularity[options.useCurrent](currentMoment);\n                    }\n                    setValue(currentMoment);\n                }\n                widget = getTemplate();\n\n                fillDow();\n                fillMonths();\n\n                widget.find('.timepicker-hours').hide();\n                widget.find('.timepicker-minutes').hide();\n                widget.find('.timepicker-seconds').hide();\n\n                update();\n                showMode();\n\n                $(window).on('resize', place);\n                widget.on('click', '[data-action]', doAction); // this handles clicks on the widget\n                widget.on('mousedown', false);\n\n                if (component && component.hasClass('btn')) {\n                    component.toggleClass('active');\n                }\n                place();\n                widget.show();\n                if (options.focusOnShow && !input.is(':focus')) {\n                    input.focus();\n                }\n\n                notifyEvent({\n                    type: 'dp.show'\n                });\n                return picker;\n            },\n\n            /**\n             * Shows or hides the widget\n             */\n            toggle = function () {\n                return (widget ? hide() : show());\n            },\n\n            keydown = function (e) {\n                var handler = null,\n                    index,\n                    index2,\n                    pressedKeys = [],\n                    pressedModifiers = {},\n                    currentKey = e.which,\n                    keyBindKeys,\n                    allModifiersPressed,\n                    pressed = 'p';\n\n                keyState[currentKey] = pressed;\n\n                for (index in keyState) {\n                    if (keyState.hasOwnProperty(index) && keyState[index] === pressed) {\n                        pressedKeys.push(index);\n                        if (parseInt(index, 10) !== currentKey) {\n                            pressedModifiers[index] = true;\n                        }\n                    }\n                }\n\n                for (index in options.keyBinds) {\n                    if (options.keyBinds.hasOwnProperty(index) && typeof (options.keyBinds[index]) === 'function') {\n                        keyBindKeys = index.split(' ');\n                        if (keyBindKeys.length === pressedKeys.length && keyMap[currentKey] === keyBindKeys[keyBindKeys.length - 1]) {\n                            allModifiersPressed = true;\n                            for (index2 = keyBindKeys.length - 2; index2 >= 0; index2--) {\n                                if (!(keyMap[keyBindKeys[index2]] in pressedModifiers)) {\n                                    allModifiersPressed = false;\n                                    break;\n                                }\n                            }\n                            if (allModifiersPressed) {\n                                handler = options.keyBinds[index];\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (handler) {\n                    handler.call(picker, widget);\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            },\n\n            keyup = function (e) {\n                keyState[e.which] = 'r';\n                e.stopPropagation();\n                e.preventDefault();\n            },\n\n            change = function (e) {\n                var val = $(e.target).val().trim(),\n                    parsedDate = val ? parseInputDate(val) : null;\n                setValue(parsedDate);\n                e.stopImmediatePropagation();\n                return false;\n            },\n\n            attachDatePickerElementEvents = function () {\n                input.on({\n                    'change': change,\n                    'blur': options.debug ? '' : hide,\n                    'keydown': keydown,\n                    'keyup': keyup,\n                    'focus': options.allowInputToggle ? show : ''\n                });\n\n                if (element.is('input')) {\n                    input.on({\n                        'focus': show\n                    });\n                } else if (component) {\n                    component.on('click', toggle);\n                    component.on('mousedown', false);\n                }\n            },\n\n            detachDatePickerElementEvents = function () {\n                input.off({\n                    'change': change,\n                    'blur': blur,\n                    'keydown': keydown,\n                    'keyup': keyup,\n                    'focus': options.allowInputToggle ? hide : ''\n                });\n\n                if (element.is('input')) {\n                    input.off({\n                        'focus': show\n                    });\n                } else if (component) {\n                    component.off('click', toggle);\n                    component.off('mousedown', false);\n                }\n            },\n\n            indexGivenDates = function (givenDatesArray) {\n                // Store given enabledDates and disabledDates as keys.\n                // This way we can check their existence in O(1) time instead of looping through whole array.\n                // (for example: options.enabledDates['2014-02-27'] === true)\n                var givenDatesIndexed = {};\n                $.each(givenDatesArray, function () {\n                    var dDate = parseInputDate(this);\n                    if (dDate.isValid()) {\n                        givenDatesIndexed[dDate.format('YYYY-MM-DD')] = true;\n                    }\n                });\n                return (Object.keys(givenDatesIndexed).length) ? givenDatesIndexed : false;\n            },\n\n            indexGivenHours = function (givenHoursArray) {\n                // Store given enabledHours and disabledHours as keys.\n                // This way we can check their existence in O(1) time instead of looping through whole array.\n                // (for example: options.enabledHours['2014-02-27'] === true)\n                var givenHoursIndexed = {};\n                $.each(givenHoursArray, function () {\n                    givenHoursIndexed[this] = true;\n                });\n                return (Object.keys(givenHoursIndexed).length) ? givenHoursIndexed : false;\n            },\n\n            initFormatting = function () {\n                var format = options.format || 'L LT';\n\n                actualFormat = format.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput) {\n                    var newinput = date.localeData().longDateFormat(formatInput) || formatInput;\n                    return newinput.replace(/(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function (formatInput2) { //temp fix for #740\n                        return date.localeData().longDateFormat(formatInput2) || formatInput2;\n                    });\n                });\n\n\n                parseFormats = options.extraFormats ? options.extraFormats.slice() : [];\n                if (parseFormats.indexOf(format) < 0 && parseFormats.indexOf(actualFormat) < 0) {\n                    parseFormats.push(actualFormat);\n                }\n\n                use24Hours = (actualFormat.toLowerCase().indexOf('a') < 1 && actualFormat.replace(/\\[.*?\\]/g, '').indexOf('h') < 1);\n\n                if (isEnabled('y')) {\n                    minViewModeNumber = 2;\n                }\n                if (isEnabled('M')) {\n                    minViewModeNumber = 1;\n                }\n                if (isEnabled('d')) {\n                    minViewModeNumber = 0;\n                }\n\n                currentViewMode = Math.max(minViewModeNumber, currentViewMode);\n\n                if (!unset) {\n                    setValue(date);\n                }\n            };\n\n        /********************************************************************************\n         *\n         * Public API functions\n         * =====================\n         *\n         * Important: Do not expose direct references to private objects or the options\n         * object to the outer world. Always return a clone when returning values or make\n         * a clone when setting a private variable.\n         *\n         ********************************************************************************/\n        picker.destroy = function () {\n            ///<summary>Destroys the widget and removes all attached event listeners</summary>\n            hide();\n            detachDatePickerElementEvents();\n            element.removeData('DateTimePicker');\n            element.removeData('date');\n        };\n\n        picker.toggle = toggle;\n\n        picker.show = show;\n\n        picker.hide = hide;\n\n        picker.disable = function () {\n            ///<summary>Disables the input element, the component is attached to, by adding a disabled=\"true\" attribute to it.\n            ///If the widget was visible before that call it is hidden. Possibly emits dp.hide</summary>\n            hide();\n            if (component && component.hasClass('btn')) {\n                component.addClass('disabled');\n            }\n            input.prop('disabled', true);\n            return picker;\n        };\n\n        picker.enable = function () {\n            ///<summary>Enables the input element, the component is attached to, by removing disabled attribute from it.</summary>\n            if (component && component.hasClass('btn')) {\n                component.removeClass('disabled');\n            }\n            input.prop('disabled', false);\n            return picker;\n        };\n\n        picker.ignoreReadonly = function (ignoreReadonly) {\n            if (arguments.length === 0) {\n                return options.ignoreReadonly;\n            }\n            if (typeof ignoreReadonly !== 'boolean') {\n                throw new TypeError('ignoreReadonly () expects a boolean parameter');\n            }\n            options.ignoreReadonly = ignoreReadonly;\n            return picker;\n        };\n\n        picker.options = function (newOptions) {\n            if (arguments.length === 0) {\n                return $.extend(true, {}, options);\n            }\n\n            if (!(newOptions instanceof Object)) {\n                throw new TypeError('options() options parameter should be an object');\n            }\n            $.extend(true, options, newOptions);\n            $.each(options, function (key, value) {\n                if (picker[key] !== undefined) {\n                    picker[key](value);\n                } else {\n                    throw new TypeError('option ' + key + ' is not recognized!');\n                }\n            });\n            return picker;\n        };\n\n        picker.date = function (newDate) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.date\">\n            ///<summary>Returns the component's model current date, a moment object or null if not set.</summary>\n            ///<returns type=\"Moment\">date.clone()</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Sets the components model current moment to it. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.</summary>\n            ///<param name=\"newDate\" locid=\"$.fn.datetimepicker.date_p:newDate\">Takes string, Date, moment, null parameter.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                if (unset) {\n                    return null;\n                }\n                return date.clone();\n            }\n\n            if (newDate !== null && typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\n                throw new TypeError('date() parameter must be one of [null, string, moment or Date]');\n            }\n\n            setValue(newDate === null ? null : parseInputDate(newDate));\n            return picker;\n        };\n\n        picker.format = function (newFormat) {\n            ///<summary>test su</summary>\n            ///<param name=\"newFormat\">info about para</param>\n            ///<returns type=\"string|boolean\">returns foo</returns>\n            if (arguments.length === 0) {\n                return options.format;\n            }\n\n            if ((typeof newFormat !== 'string') && ((typeof newFormat !== 'boolean') || (newFormat !== false))) {\n                throw new TypeError('format() expects a string or boolean:false parameter ' + newFormat);\n            }\n\n            options.format = newFormat;\n            if (actualFormat) {\n                initFormatting(); // reinit formatting\n            }\n            return picker;\n        };\n\n        picker.timeZone = function (newZone) {\n            if (arguments.length === 0) {\n                return options.timeZone;\n            }\n\n            if (typeof newZone !== 'string') {\n                throw new TypeError('newZone() expects a string parameter');\n            }\n\n            options.timeZone = newZone;\n\n            return picker;\n        };\n\n        picker.dayViewHeaderFormat = function (newFormat) {\n            if (arguments.length === 0) {\n                return options.dayViewHeaderFormat;\n            }\n\n            if (typeof newFormat !== 'string') {\n                throw new TypeError('dayViewHeaderFormat() expects a string parameter');\n            }\n\n            options.dayViewHeaderFormat = newFormat;\n            return picker;\n        };\n\n        picker.extraFormats = function (formats) {\n            if (arguments.length === 0) {\n                return options.extraFormats;\n            }\n\n            if (formats !== false && !(formats instanceof Array)) {\n                throw new TypeError('extraFormats() expects an array or false parameter');\n            }\n\n            options.extraFormats = formats;\n            if (parseFormats) {\n                initFormatting(); // reinit formatting\n            }\n            return picker;\n        };\n\n        picker.disabledDates = function (dates) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledDates\">\n            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>\n            ///<returns type=\"array\">options.disabledDates</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledDates ? $.extend({}, options.disabledDates) : options.disabledDates);\n            }\n\n            if (!dates) {\n                options.disabledDates = false;\n                update();\n                return picker;\n            }\n            if (!(dates instanceof Array)) {\n                throw new TypeError('disabledDates() expects an array parameter');\n            }\n            options.disabledDates = indexGivenDates(dates);\n            options.enabledDates = false;\n            update();\n            return picker;\n        };\n\n        picker.enabledDates = function (dates) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.enabledDates\">\n            ///<summary>Returns an array with the currently set enabled dates on the component.</summary>\n            ///<returns type=\"array\">options.enabledDates</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.enabledDates_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.enabledDates ? $.extend({}, options.enabledDates) : options.enabledDates);\n            }\n\n            if (!dates) {\n                options.enabledDates = false;\n                update();\n                return picker;\n            }\n            if (!(dates instanceof Array)) {\n                throw new TypeError('enabledDates() expects an array parameter');\n            }\n            options.enabledDates = indexGivenDates(dates);\n            options.disabledDates = false;\n            update();\n            return picker;\n        };\n\n        picker.daysOfWeekDisabled = function (daysOfWeekDisabled) {\n            if (arguments.length === 0) {\n                return options.daysOfWeekDisabled.splice(0);\n            }\n\n            if ((typeof daysOfWeekDisabled === 'boolean') && !daysOfWeekDisabled) {\n                options.daysOfWeekDisabled = false;\n                update();\n                return picker;\n            }\n\n            if (!(daysOfWeekDisabled instanceof Array)) {\n                throw new TypeError('daysOfWeekDisabled() expects an array parameter');\n            }\n            options.daysOfWeekDisabled = daysOfWeekDisabled.reduce(function (previousValue, currentValue) {\n                currentValue = parseInt(currentValue, 10);\n                if (currentValue > 6 || currentValue < 0 || isNaN(currentValue)) {\n                    return previousValue;\n                }\n                if (previousValue.indexOf(currentValue) === -1) {\n                    previousValue.push(currentValue);\n                }\n                return previousValue;\n            }, []).sort();\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'd')) {\n                    date.add(1, 'd');\n                    if (tries === 31) {\n                        throw 'Tried 31 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n\n        picker.maxDate = function (maxDate) {\n            if (arguments.length === 0) {\n                return options.maxDate ? options.maxDate.clone() : options.maxDate;\n            }\n\n            if ((typeof maxDate === 'boolean') && maxDate === false) {\n                options.maxDate = false;\n                update();\n                return picker;\n            }\n\n            if (typeof maxDate === 'string') {\n                if (maxDate === 'now' || maxDate === 'moment') {\n                    maxDate = getMoment();\n                }\n            }\n\n            var parsedDate = parseInputDate(maxDate);\n\n            if (!parsedDate.isValid()) {\n                throw new TypeError('maxDate() Could not parse date parameter: ' + maxDate);\n            }\n            if (options.minDate && parsedDate.isBefore(options.minDate)) {\n                throw new TypeError('maxDate() date parameter is before options.minDate: ' + parsedDate.format(actualFormat));\n            }\n            options.maxDate = parsedDate;\n            if (options.useCurrent && !options.keepInvalid && date.isAfter(maxDate)) {\n                setValue(options.maxDate);\n            }\n            if (viewDate.isAfter(parsedDate)) {\n                viewDate = parsedDate.clone().subtract(options.stepping, 'm');\n            }\n            update();\n            return picker;\n        };\n\n        picker.minDate = function (minDate) {\n            if (arguments.length === 0) {\n                return options.minDate ? options.minDate.clone() : options.minDate;\n            }\n\n            if ((typeof minDate === 'boolean') && minDate === false) {\n                options.minDate = false;\n                update();\n                return picker;\n            }\n\n            if (typeof minDate === 'string') {\n                if (minDate === 'now' || minDate === 'moment') {\n                    minDate = getMoment();\n                }\n            }\n\n            var parsedDate = parseInputDate(minDate);\n\n            if (!parsedDate.isValid()) {\n                throw new TypeError('minDate() Could not parse date parameter: ' + minDate);\n            }\n            if (options.maxDate && parsedDate.isAfter(options.maxDate)) {\n                throw new TypeError('minDate() date parameter is after options.maxDate: ' + parsedDate.format(actualFormat));\n            }\n            options.minDate = parsedDate;\n            if (options.useCurrent && !options.keepInvalid && date.isBefore(minDate)) {\n                setValue(options.minDate);\n            }\n            if (viewDate.isBefore(parsedDate)) {\n                viewDate = parsedDate.clone().add(options.stepping, 'm');\n            }\n            update();\n            return picker;\n        };\n\n        picker.defaultDate = function (defaultDate) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.defaultDate\">\n            ///<summary>Returns a moment with the options.defaultDate option configuration or false if not set</summary>\n            ///<returns type=\"Moment\">date.clone()</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Will set the picker's inital date. If a boolean:false value is passed the options.defaultDate parameter is cleared.</summary>\n            ///<param name=\"defaultDate\" locid=\"$.fn.datetimepicker.defaultDate_p:defaultDate\">Takes a string, Date, moment, boolean:false</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return options.defaultDate ? options.defaultDate.clone() : options.defaultDate;\n            }\n            if (!defaultDate) {\n                options.defaultDate = false;\n                return picker;\n            }\n\n            if (typeof defaultDate === 'string') {\n                if (defaultDate === 'now' || defaultDate === 'moment') {\n                    defaultDate = getMoment();\n                } else {\n                    defaultDate = getMoment(defaultDate);\n                }\n            }\n\n            var parsedDate = parseInputDate(defaultDate);\n            if (!parsedDate.isValid()) {\n                throw new TypeError('defaultDate() Could not parse date parameter: ' + defaultDate);\n            }\n            if (!isValid(parsedDate)) {\n                throw new TypeError('defaultDate() date passed is invalid according to component setup validations');\n            }\n\n            options.defaultDate = parsedDate;\n\n            if ((options.defaultDate && options.inline) || input.val().trim() === '') {\n                setValue(options.defaultDate);\n            }\n            return picker;\n        };\n\n        picker.locale = function (locale) {\n            if (arguments.length === 0) {\n                return options.locale;\n            }\n\n            if (!moment.localeData(locale)) {\n                throw new TypeError('locale() locale ' + locale + ' is not loaded from moment locales!');\n            }\n\n            options.locale = locale;\n            date.locale(options.locale);\n            viewDate.locale(options.locale);\n\n            if (actualFormat) {\n                initFormatting(); // reinit formatting\n            }\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.stepping = function (stepping) {\n            if (arguments.length === 0) {\n                return options.stepping;\n            }\n\n            stepping = parseInt(stepping, 10);\n            if (isNaN(stepping) || stepping < 1) {\n                stepping = 1;\n            }\n            options.stepping = stepping;\n            return picker;\n        };\n\n        picker.useCurrent = function (useCurrent) {\n            var useCurrentOptions = ['year', 'month', 'day', 'hour', 'minute'];\n            if (arguments.length === 0) {\n                return options.useCurrent;\n            }\n\n            if ((typeof useCurrent !== 'boolean') && (typeof useCurrent !== 'string')) {\n                throw new TypeError('useCurrent() expects a boolean or string parameter');\n            }\n            if (typeof useCurrent === 'string' && useCurrentOptions.indexOf(useCurrent.toLowerCase()) === -1) {\n                throw new TypeError('useCurrent() expects a string parameter of ' + useCurrentOptions.join(', '));\n            }\n            options.useCurrent = useCurrent;\n            return picker;\n        };\n\n        picker.collapse = function (collapse) {\n            if (arguments.length === 0) {\n                return options.collapse;\n            }\n\n            if (typeof collapse !== 'boolean') {\n                throw new TypeError('collapse() expects a boolean parameter');\n            }\n            if (options.collapse === collapse) {\n                return picker;\n            }\n            options.collapse = collapse;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.icons = function (icons) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.icons);\n            }\n\n            if (!(icons instanceof Object)) {\n                throw new TypeError('icons() expects parameter to be an Object');\n            }\n            $.extend(options.icons, icons);\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.tooltips = function (tooltips) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.tooltips);\n            }\n\n            if (!(tooltips instanceof Object)) {\n                throw new TypeError('tooltips() expects parameter to be an Object');\n            }\n            $.extend(options.tooltips, tooltips);\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.useStrict = function (useStrict) {\n            if (arguments.length === 0) {\n                return options.useStrict;\n            }\n\n            if (typeof useStrict !== 'boolean') {\n                throw new TypeError('useStrict() expects a boolean parameter');\n            }\n            options.useStrict = useStrict;\n            return picker;\n        };\n\n        picker.sideBySide = function (sideBySide) {\n            if (arguments.length === 0) {\n                return options.sideBySide;\n            }\n\n            if (typeof sideBySide !== 'boolean') {\n                throw new TypeError('sideBySide() expects a boolean parameter');\n            }\n            options.sideBySide = sideBySide;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.viewMode = function (viewMode) {\n            if (arguments.length === 0) {\n                return options.viewMode;\n            }\n\n            if (typeof viewMode !== 'string') {\n                throw new TypeError('viewMode() expects a string parameter');\n            }\n\n            if (viewModes.indexOf(viewMode) === -1) {\n                throw new TypeError('viewMode() parameter must be one of (' + viewModes.join(', ') + ') value');\n            }\n\n            options.viewMode = viewMode;\n            currentViewMode = Math.max(viewModes.indexOf(viewMode), minViewModeNumber);\n\n            showMode();\n            return picker;\n        };\n\n        picker.toolbarPlacement = function (toolbarPlacement) {\n            if (arguments.length === 0) {\n                return options.toolbarPlacement;\n            }\n\n            if (typeof toolbarPlacement !== 'string') {\n                throw new TypeError('toolbarPlacement() expects a string parameter');\n            }\n            if (toolbarPlacements.indexOf(toolbarPlacement) === -1) {\n                throw new TypeError('toolbarPlacement() parameter must be one of (' + toolbarPlacements.join(', ') + ') value');\n            }\n            options.toolbarPlacement = toolbarPlacement;\n\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.widgetPositioning = function (widgetPositioning) {\n            if (arguments.length === 0) {\n                return $.extend({}, options.widgetPositioning);\n            }\n\n            if (({}).toString.call(widgetPositioning) !== '[object Object]') {\n                throw new TypeError('widgetPositioning() expects an object variable');\n            }\n            if (widgetPositioning.horizontal) {\n                if (typeof widgetPositioning.horizontal !== 'string') {\n                    throw new TypeError('widgetPositioning() horizontal variable must be a string');\n                }\n                widgetPositioning.horizontal = widgetPositioning.horizontal.toLowerCase();\n                if (horizontalModes.indexOf(widgetPositioning.horizontal) === -1) {\n                    throw new TypeError('widgetPositioning() expects horizontal parameter to be one of (' + horizontalModes.join(', ') + ')');\n                }\n                options.widgetPositioning.horizontal = widgetPositioning.horizontal;\n            }\n            if (widgetPositioning.vertical) {\n                if (typeof widgetPositioning.vertical !== 'string') {\n                    throw new TypeError('widgetPositioning() vertical variable must be a string');\n                }\n                widgetPositioning.vertical = widgetPositioning.vertical.toLowerCase();\n                if (verticalModes.indexOf(widgetPositioning.vertical) === -1) {\n                    throw new TypeError('widgetPositioning() expects vertical parameter to be one of (' + verticalModes.join(', ') + ')');\n                }\n                options.widgetPositioning.vertical = widgetPositioning.vertical;\n            }\n            update();\n            return picker;\n        };\n\n        picker.calendarWeeks = function (calendarWeeks) {\n            if (arguments.length === 0) {\n                return options.calendarWeeks;\n            }\n\n            if (typeof calendarWeeks !== 'boolean') {\n                throw new TypeError('calendarWeeks() expects parameter to be a boolean value');\n            }\n\n            options.calendarWeeks = calendarWeeks;\n            update();\n            return picker;\n        };\n\n        picker.showTodayButton = function (showTodayButton) {\n            if (arguments.length === 0) {\n                return options.showTodayButton;\n            }\n\n            if (typeof showTodayButton !== 'boolean') {\n                throw new TypeError('showTodayButton() expects a boolean parameter');\n            }\n\n            options.showTodayButton = showTodayButton;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.showClear = function (showClear) {\n            if (arguments.length === 0) {\n                return options.showClear;\n            }\n\n            if (typeof showClear !== 'boolean') {\n                throw new TypeError('showClear() expects a boolean parameter');\n            }\n\n            options.showClear = showClear;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.widgetParent = function (widgetParent) {\n            if (arguments.length === 0) {\n                return options.widgetParent;\n            }\n\n            if (typeof widgetParent === 'string') {\n                widgetParent = $(widgetParent);\n            }\n\n            if (widgetParent !== null && (typeof widgetParent !== 'string' && !(widgetParent instanceof $))) {\n                throw new TypeError('widgetParent() expects a string or a jQuery object parameter');\n            }\n\n            options.widgetParent = widgetParent;\n            if (widget) {\n                hide();\n                show();\n            }\n            return picker;\n        };\n\n        picker.keepOpen = function (keepOpen) {\n            if (arguments.length === 0) {\n                return options.keepOpen;\n            }\n\n            if (typeof keepOpen !== 'boolean') {\n                throw new TypeError('keepOpen() expects a boolean parameter');\n            }\n\n            options.keepOpen = keepOpen;\n            return picker;\n        };\n\n        picker.focusOnShow = function (focusOnShow) {\n            if (arguments.length === 0) {\n                return options.focusOnShow;\n            }\n\n            if (typeof focusOnShow !== 'boolean') {\n                throw new TypeError('focusOnShow() expects a boolean parameter');\n            }\n\n            options.focusOnShow = focusOnShow;\n            return picker;\n        };\n\n        picker.inline = function (inline) {\n            if (arguments.length === 0) {\n                return options.inline;\n            }\n\n            if (typeof inline !== 'boolean') {\n                throw new TypeError('inline() expects a boolean parameter');\n            }\n\n            options.inline = inline;\n            return picker;\n        };\n\n        picker.clear = function () {\n            clear();\n            return picker;\n        };\n\n        picker.keyBinds = function (keyBinds) {\n            if (arguments.length === 0) {\n                return options.keyBinds;\n            }\n\n            options.keyBinds = keyBinds;\n            return picker;\n        };\n\n        picker.getMoment = function (d) {\n            return getMoment(d);\n        };\n\n        picker.debug = function (debug) {\n            if (typeof debug !== 'boolean') {\n                throw new TypeError('debug() expects a boolean parameter');\n            }\n\n            options.debug = debug;\n            return picker;\n        };\n\n        picker.allowInputToggle = function (allowInputToggle) {\n            if (arguments.length === 0) {\n                return options.allowInputToggle;\n            }\n\n            if (typeof allowInputToggle !== 'boolean') {\n                throw new TypeError('allowInputToggle() expects a boolean parameter');\n            }\n\n            options.allowInputToggle = allowInputToggle;\n            return picker;\n        };\n\n        picker.showClose = function (showClose) {\n            if (arguments.length === 0) {\n                return options.showClose;\n            }\n\n            if (typeof showClose !== 'boolean') {\n                throw new TypeError('showClose() expects a boolean parameter');\n            }\n\n            options.showClose = showClose;\n            return picker;\n        };\n\n        picker.keepInvalid = function (keepInvalid) {\n            if (arguments.length === 0) {\n                return options.keepInvalid;\n            }\n\n            if (typeof keepInvalid !== 'boolean') {\n                throw new TypeError('keepInvalid() expects a boolean parameter');\n            }\n            options.keepInvalid = keepInvalid;\n            return picker;\n        };\n\n        picker.datepickerInput = function (datepickerInput) {\n            if (arguments.length === 0) {\n                return options.datepickerInput;\n            }\n\n            if (typeof datepickerInput !== 'string') {\n                throw new TypeError('datepickerInput() expects a string parameter');\n            }\n\n            options.datepickerInput = datepickerInput;\n            return picker;\n        };\n\n        picker.parseInputDate = function (parseInputDate) {\n            if (arguments.length === 0) {\n                return options.parseInputDate;\n            }\n\n            if (typeof parseInputDate !== 'function') {\n                throw new TypeError('parseInputDate() sholud be as function');\n            }\n\n            options.parseInputDate = parseInputDate;\n\n            return picker;\n        };\n\n        picker.disabledTimeIntervals = function (disabledTimeIntervals) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledTimeIntervals\">\n            ///<summary>Returns an array with the currently set disabled dates on the component.</summary>\n            ///<returns type=\"array\">options.disabledTimeIntervals</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledDates if such exist.</summary>\n            ///<param name=\"dates\" locid=\"$.fn.datetimepicker.disabledTimeIntervals_p:dates\">Takes an [ string or Date or moment ] of values and allows the user to select only from those days.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledTimeIntervals ? $.extend({}, options.disabledTimeIntervals) : options.disabledTimeIntervals);\n            }\n\n            if (!disabledTimeIntervals) {\n                options.disabledTimeIntervals = false;\n                update();\n                return picker;\n            }\n            if (!(disabledTimeIntervals instanceof Array)) {\n                throw new TypeError('disabledTimeIntervals() expects an array parameter');\n            }\n            options.disabledTimeIntervals = disabledTimeIntervals;\n            update();\n            return picker;\n        };\n\n        picker.disabledHours = function (hours) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.disabledHours\">\n            ///<summary>Returns an array with the currently set disabled hours on the component.</summary>\n            ///<returns type=\"array\">options.disabledHours</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of\n            ///options.enabledHours if such exist.</summary>\n            ///<param name=\"hours\" locid=\"$.fn.datetimepicker.disabledHours_p:hours\">Takes an [ int ] of values and disallows the user to select only from those hours.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.disabledHours ? $.extend({}, options.disabledHours) : options.disabledHours);\n            }\n\n            if (!hours) {\n                options.disabledHours = false;\n                update();\n                return picker;\n            }\n            if (!(hours instanceof Array)) {\n                throw new TypeError('disabledHours() expects an array parameter');\n            }\n            options.disabledHours = indexGivenHours(hours);\n            options.enabledHours = false;\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'h')) {\n                    date.add(1, 'h');\n                    if (tries === 24) {\n                        throw 'Tried 24 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n\n        picker.enabledHours = function (hours) {\n            ///<signature helpKeyword=\"$.fn.datetimepicker.enabledHours\">\n            ///<summary>Returns an array with the currently set enabled hours on the component.</summary>\n            ///<returns type=\"array\">options.enabledHours</returns>\n            ///</signature>\n            ///<signature>\n            ///<summary>Setting this takes precedence over options.minDate, options.maxDate configuration. Also calling this function removes the configuration of options.disabledHours if such exist.</summary>\n            ///<param name=\"hours\" locid=\"$.fn.datetimepicker.enabledHours_p:hours\">Takes an [ int ] of values and allows the user to select only from those hours.</param>\n            ///</signature>\n            if (arguments.length === 0) {\n                return (options.enabledHours ? $.extend({}, options.enabledHours) : options.enabledHours);\n            }\n\n            if (!hours) {\n                options.enabledHours = false;\n                update();\n                return picker;\n            }\n            if (!(hours instanceof Array)) {\n                throw new TypeError('enabledHours() expects an array parameter');\n            }\n            options.enabledHours = indexGivenHours(hours);\n            options.disabledHours = false;\n            if (options.useCurrent && !options.keepInvalid) {\n                var tries = 0;\n                while (!isValid(date, 'h')) {\n                    date.add(1, 'h');\n                    if (tries === 24) {\n                        throw 'Tried 24 times to find a valid date';\n                    }\n                    tries++;\n                }\n                setValue(date);\n            }\n            update();\n            return picker;\n        };\n        /**\n         * Returns the component's model current viewDate, a moment object or null if not set. Passing a null value unsets the components model current moment. Parsing of the newDate parameter is made using moment library with the options.format and options.useStrict components configuration.\n         * @param {Takes string, viewDate, moment, null parameter.} newDate\n         * @returns {viewDate.clone()}\n         */\n        picker.viewDate = function (newDate) {\n            if (arguments.length === 0) {\n                return viewDate.clone();\n            }\n\n            if (!newDate) {\n                viewDate = date.clone();\n                return picker;\n            }\n\n            if (typeof newDate !== 'string' && !moment.isMoment(newDate) && !(newDate instanceof Date)) {\n                throw new TypeError('viewDate() parameter must be one of [string, moment or Date]');\n            }\n\n            viewDate = parseInputDate(newDate);\n            viewUpdate();\n            return picker;\n        };\n\n        // initializing element and component attributes\n        if (element.is('input')) {\n            input = element;\n        } else {\n            input = element.find(options.datepickerInput);\n            if (input.length === 0) {\n                input = element.find('input');\n            } else if (!input.is('input')) {\n                throw new Error('CSS class \"' + options.datepickerInput + '\" cannot be applied to non input element');\n            }\n        }\n\n        if (element.hasClass('input-group')) {\n            // in case there is more then one 'input-group-addon' Issue #48\n            if (element.find('.datepickerbutton').length === 0) {\n                component = element.find('.input-group-addon');\n            } else {\n                component = element.find('.datepickerbutton');\n            }\n        }\n\n        if (!options.inline && !input.is('input')) {\n            throw new Error('Could not initialize DateTimePicker without an input element');\n        }\n\n        // Set defaults for date here now instead of in var declaration\n        date = getMoment();\n        viewDate = date.clone();\n\n        $.extend(true, options, dataToOptions());\n\n        picker.options(options);\n\n        initFormatting();\n\n        attachDatePickerElementEvents();\n\n        if (input.prop('disabled')) {\n            picker.disable();\n        }\n        if (input.is('input') && input.val().trim().length !== 0) {\n            setValue(parseInputDate(input.val().trim()));\n        }\n        else if (options.defaultDate && input.attr('placeholder') === undefined) {\n            setValue(options.defaultDate);\n        }\n        if (options.inline) {\n            show();\n        }\n        return picker;\n    };\n\n    /********************************************************************************\n     *\n     * jQuery plugin constructor and defaults object\n     *\n     ********************************************************************************/\n\n    /**\n    * See (http://jquery.com/).\n    * @name jQuery\n    * @class\n    * See the jQuery Library  (http://jquery.com/) for full details.  This just\n    * documents the function and classes that are added to jQuery by this plug-in.\n    */\n    /**\n     * See (http://jquery.com/)\n     * @name fn\n     * @class\n     * See the jQuery Library  (http://jquery.com/) for full details.  This just\n     * documents the function and classes that are added to jQuery by this plug-in.\n     * @memberOf jQuery\n     */\n    /**\n     * Show comments\n     * @class datetimepicker\n     * @memberOf jQuery.fn\n     */\n    $.fn.datetimepicker = function (options) {\n        options = options || {};\n\n        var args = Array.prototype.slice.call(arguments, 1),\n            isInstance = true,\n            thisMethods = ['destroy', 'hide', 'show', 'toggle'],\n            returnValue;\n\n        if (typeof options === 'object') {\n            return this.each(function () {\n                var $this = $(this),\n                    _options;\n                if (!$this.data('DateTimePicker')) {\n                    // create a private copy of the defaults object\n                    _options = $.extend(true, {}, $.fn.datetimepicker.defaults, options);\n                    $this.data('DateTimePicker', dateTimePicker($this, _options));\n                }\n            });\n        } else if (typeof options === 'string') {\n            this.each(function () {\n                var $this = $(this),\n                    instance = $this.data('DateTimePicker');\n                if (!instance) {\n                    throw new Error('bootstrap-datetimepicker(\"' + options + '\") method was called on an element that is not using DateTimePicker');\n                }\n\n                returnValue = instance[options].apply(instance, args);\n                isInstance = returnValue === instance;\n            });\n\n            if (isInstance || $.inArray(options, thisMethods) > -1) {\n                return this;\n            }\n\n            return returnValue;\n        }\n\n        throw new TypeError('Invalid arguments for DateTimePicker: ' + options);\n    };\n\n    $.fn.datetimepicker.defaults = {\n        timeZone: '',\n        format: false,\n        dayViewHeaderFormat: 'MMMM YYYY',\n        extraFormats: false,\n        stepping: 1,\n        minDate: false,\n        maxDate: false,\n        useCurrent: true,\n        collapse: true,\n        locale: moment.locale(),\n        defaultDate: false,\n        disabledDates: false,\n        enabledDates: false,\n        icons: {\n            time: 'fa fa-clock-o',\n            date: 'fa fa-calendar',\n            up: 'fa fa-chevron-up',\n            down: 'fa fa-chevron-down',\n            previous: 'fa fa-chevron-left',\n            next: 'fa fa-chevron-right',\n            today: 'fa fa-crosshairs',\n            clear: 'fa fa-trash-o',\n            close: 'fa fa-times'\n        },\n        tooltips: {\n            today: 'Go to today',\n            clear: 'Clear selection',\n            close: 'Close the picker',\n            selectMonth: 'Select Month',\n            prevMonth: 'Previous Month',\n            nextMonth: 'Next Month',\n            selectYear: 'Select Year',\n            prevYear: 'Previous Year',\n            nextYear: 'Next Year',\n            selectDecade: 'Select Decade',\n            prevDecade: 'Previous Decade',\n            nextDecade: 'Next Decade',\n            prevCentury: 'Previous Century',\n            nextCentury: 'Next Century',\n            pickHour: 'Pick Hour',\n            incrementHour: 'Increment Hour',\n            decrementHour: 'Decrement Hour',\n            pickMinute: 'Pick Minute',\n            incrementMinute: 'Increment Minute',\n            decrementMinute: 'Decrement Minute',\n            pickSecond: 'Pick Second',\n            incrementSecond: 'Increment Second',\n            decrementSecond: 'Decrement Second',\n            togglePeriod: 'Toggle Period',\n            selectTime: 'Select Time'\n        },\n        useStrict: false,\n        sideBySide: false,\n        daysOfWeekDisabled: false,\n        calendarWeeks: false,\n        viewMode: 'days',\n        toolbarPlacement: 'default',\n        showTodayButton: false,\n        showClear: false,\n        showClose: false,\n        widgetPositioning: {\n            horizontal: 'auto',\n            vertical: 'auto'\n        },\n        widgetParent: null,\n        ignoreReadonly: false,\n        keepOpen: false,\n        focusOnShow: true,\n        inline: false,\n        keepInvalid: false,\n        datepickerInput: '.datepickerinput',\n        keyBinds: {\n            up: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(7, 'd'));\n                } else {\n                    this.date(d.clone().add(this.stepping(), 'm'));\n                }\n            },\n            down: function (widget) {\n                if (!widget) {\n                    this.show();\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(7, 'd'));\n                } else {\n                    this.date(d.clone().subtract(this.stepping(), 'm'));\n                }\n            },\n            'control up': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'y'));\n                } else {\n                    this.date(d.clone().add(1, 'h'));\n                }\n            },\n            'control down': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'y'));\n                } else {\n                    this.date(d.clone().subtract(1, 'h'));\n                }\n            },\n            left: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'd'));\n                }\n            },\n            right: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'd'));\n                }\n            },\n            pageUp: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().subtract(1, 'M'));\n                }\n            },\n            pageDown: function (widget) {\n                if (!widget) {\n                    return;\n                }\n                var d = this.date() || this.getMoment();\n                if (widget.find('.datepicker').is(':visible')) {\n                    this.date(d.clone().add(1, 'M'));\n                }\n            },\n            enter: function () {\n                this.hide();\n            },\n            escape: function () {\n                this.hide();\n            },\n            //tab: function (widget) { //this break the flow of the form. disabling for now\n            //    var toggle = widget.find('.picker-switch a[data-action=\"togglePicker\"]');\n            //    if(toggle.length > 0) toggle.click();\n            //},\n            'control space': function (widget) {\n                if (!widget) {\n                    return;\n                }\n                if (widget.find('.timepicker').is(':visible')) {\n                    widget.find('.btn[data-action=\"togglePeriod\"]').click();\n                }\n            },\n            t: function () {\n                this.date(this.getMoment());\n            },\n            'delete': function () {\n                this.clear();\n            }\n        },\n        debug: false,\n        allowInputToggle: false,\n        disabledTimeIntervals: false,\n        disabledHours: false,\n        enabledHours: false,\n        viewDate: false\n    };\n\n    return $.fn.datetimepicker;\n}));\n"],"sourceRoot":""}