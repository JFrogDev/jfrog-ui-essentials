{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/htmlparser2/lib/Tokenizer.js"],"names":["module","exports","Tokenizer","decodeCodePoint","__webpack_require__","entityMap","legacyMap","xmlMap","i","TEXT","BEFORE_TAG_NAME","IN_TAG_NAME","IN_SELF_CLOSING_TAG","BEFORE_CLOSING_TAG_NAME","IN_CLOSING_TAG_NAME","AFTER_CLOSING_TAG_NAME","BEFORE_ATTRIBUTE_NAME","IN_ATTRIBUTE_NAME","AFTER_ATTRIBUTE_NAME","BEFORE_ATTRIBUTE_VALUE","IN_ATTRIBUTE_VALUE_DQ","IN_ATTRIBUTE_VALUE_SQ","IN_ATTRIBUTE_VALUE_NQ","BEFORE_DECLARATION","IN_DECLARATION","IN_PROCESSING_INSTRUCTION","BEFORE_COMMENT","IN_COMMENT","AFTER_COMMENT_1","AFTER_COMMENT_2","BEFORE_CDATA_1","BEFORE_CDATA_2","BEFORE_CDATA_3","BEFORE_CDATA_4","BEFORE_CDATA_5","BEFORE_CDATA_6","IN_CDATA","AFTER_CDATA_1","AFTER_CDATA_2","BEFORE_SPECIAL","BEFORE_SPECIAL_END","BEFORE_SCRIPT_1","BEFORE_SCRIPT_2","BEFORE_SCRIPT_3","BEFORE_SCRIPT_4","BEFORE_SCRIPT_5","AFTER_SCRIPT_1","AFTER_SCRIPT_2","AFTER_SCRIPT_3","AFTER_SCRIPT_4","AFTER_SCRIPT_5","BEFORE_STYLE_1","BEFORE_STYLE_2","BEFORE_STYLE_3","BEFORE_STYLE_4","AFTER_STYLE_1","AFTER_STYLE_2","AFTER_STYLE_3","AFTER_STYLE_4","BEFORE_ENTITY","BEFORE_NUMERIC_ENTITY","IN_NAMED_ENTITY","IN_NUMERIC_ENTITY","IN_HEX_ENTITY","j","SPECIAL_NONE","SPECIAL_SCRIPT","SPECIAL_STYLE","whitespace","c","ifElseState","upper","SUCCESS","FAILURE","lower","toLowerCase","this","_state","_index","consumeSpecialNameChar","NEXT_STATE","options","cbs","_buffer","_sectionStart","_bufferOffset","_baseState","_special","_cbs","_running","_ended","_xmlMode","xmlMode","_decodeEntities","decodeEntities","prototype","_stateText","ontext","_getSection","_stateBeforeTagName","_stateInTagName","_emitToken","_stateBeforeCloseingTagName","_stateInCloseingTagName","_stateAfterCloseingTagName","_stateBeforeAttributeName","onopentagend","_stateInSelfClosingTag","onselfclosingtag","_stateInAttributeName","onattribname","_stateAfterAttributeName","onattribend","_stateBeforeAttributeValue","_stateInAttributeValueDoubleQuotes","_stateInAttributeValueSingleQuotes","_stateInAttributeValueNoQuotes","_stateBeforeDeclaration","_stateInDeclaration","ondeclaration","_stateInProcessingInstruction","onprocessinginstruction","_stateBeforeComment","_stateInComment","_stateAfterComment1","_stateAfterComment2","oncomment","substring","_stateBeforeCdata1","_stateBeforeCdata2","_stateBeforeCdata3","_stateBeforeCdata4","_stateBeforeCdata5","_stateBeforeCdata6","_stateInCdata","_stateAfterCdata1","_stateAfterCdata2","oncdata","_stateBeforeSpecial","_stateBeforeSpecialEnd","_stateBeforeScript1","_stateBeforeScript2","_stateBeforeScript3","_stateBeforeScript4","_stateBeforeScript5","_stateAfterScript1","_stateAfterScript2","_stateAfterScript3","_stateAfterScript4","_stateAfterScript5","_stateBeforeStyle1","_stateBeforeStyle2","_stateBeforeStyle3","_stateBeforeStyle4","_stateAfterStyle1","_stateAfterStyle2","_stateAfterStyle3","_stateAfterStyle4","_stateBeforeEntity","_stateBeforeNumericEntity","_parseNamedEntityStrict","entity","map","hasOwnProperty","_emitPartial","_parseLegacyEntity","start","limit","substr","_stateInNamedEntity","_decodeNumericEntity","offset","base","sectionStart","parsed","parseInt","_stateInNumericEntity","_stateInHexEntity","_cleanup","write","chunk","onerror","Error","_parse","length","charAt","pause","resume","_finish","end","_handleTrailingData","onend","data","reset","call","getAbsoluteIndex","name","value","onattribdata"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~866abf42.js","sourcesContent":["module.exports = Tokenizer;\n\nvar decodeCodePoint = require(\"entities/lib/decode_codepoint.js\");\nvar entityMap = require(\"entities/maps/entities.json\");\nvar legacyMap = require(\"entities/maps/legacy.json\");\nvar xmlMap = require(\"entities/maps/xml.json\");\n\nvar i = 0;\n\nvar TEXT = i++;\nvar BEFORE_TAG_NAME = i++; //after <\nvar IN_TAG_NAME = i++;\nvar IN_SELF_CLOSING_TAG = i++;\nvar BEFORE_CLOSING_TAG_NAME = i++;\nvar IN_CLOSING_TAG_NAME = i++;\nvar AFTER_CLOSING_TAG_NAME = i++;\n\n//attributes\nvar BEFORE_ATTRIBUTE_NAME = i++;\nvar IN_ATTRIBUTE_NAME = i++;\nvar AFTER_ATTRIBUTE_NAME = i++;\nvar BEFORE_ATTRIBUTE_VALUE = i++;\nvar IN_ATTRIBUTE_VALUE_DQ = i++; // \"\nvar IN_ATTRIBUTE_VALUE_SQ = i++; // '\nvar IN_ATTRIBUTE_VALUE_NQ = i++;\n\n//declarations\nvar BEFORE_DECLARATION = i++; // !\nvar IN_DECLARATION = i++;\n\n//processing instructions\nvar IN_PROCESSING_INSTRUCTION = i++; // ?\n\n//comments\nvar BEFORE_COMMENT = i++;\nvar IN_COMMENT = i++;\nvar AFTER_COMMENT_1 = i++;\nvar AFTER_COMMENT_2 = i++;\n\n//cdata\nvar BEFORE_CDATA_1 = i++; // [\nvar BEFORE_CDATA_2 = i++; // C\nvar BEFORE_CDATA_3 = i++; // D\nvar BEFORE_CDATA_4 = i++; // A\nvar BEFORE_CDATA_5 = i++; // T\nvar BEFORE_CDATA_6 = i++; // A\nvar IN_CDATA = i++; // [\nvar AFTER_CDATA_1 = i++; // ]\nvar AFTER_CDATA_2 = i++; // ]\n\n//special tags\nvar BEFORE_SPECIAL = i++; //S\nvar BEFORE_SPECIAL_END = i++; //S\n\nvar BEFORE_SCRIPT_1 = i++; //C\nvar BEFORE_SCRIPT_2 = i++; //R\nvar BEFORE_SCRIPT_3 = i++; //I\nvar BEFORE_SCRIPT_4 = i++; //P\nvar BEFORE_SCRIPT_5 = i++; //T\nvar AFTER_SCRIPT_1 = i++; //C\nvar AFTER_SCRIPT_2 = i++; //R\nvar AFTER_SCRIPT_3 = i++; //I\nvar AFTER_SCRIPT_4 = i++; //P\nvar AFTER_SCRIPT_5 = i++; //T\n\nvar BEFORE_STYLE_1 = i++; //T\nvar BEFORE_STYLE_2 = i++; //Y\nvar BEFORE_STYLE_3 = i++; //L\nvar BEFORE_STYLE_4 = i++; //E\nvar AFTER_STYLE_1 = i++; //T\nvar AFTER_STYLE_2 = i++; //Y\nvar AFTER_STYLE_3 = i++; //L\nvar AFTER_STYLE_4 = i++; //E\n\nvar BEFORE_ENTITY = i++; //&\nvar BEFORE_NUMERIC_ENTITY = i++; //#\nvar IN_NAMED_ENTITY = i++;\nvar IN_NUMERIC_ENTITY = i++;\nvar IN_HEX_ENTITY = i++; //X\n\nvar j = 0;\n\nvar SPECIAL_NONE = j++;\nvar SPECIAL_SCRIPT = j++;\nvar SPECIAL_STYLE = j++;\n\nfunction whitespace(c) {\n    return c === \" \" || c === \"\\n\" || c === \"\\t\" || c === \"\\f\" || c === \"\\r\";\n}\n\nfunction ifElseState(upper, SUCCESS, FAILURE) {\n    var lower = upper.toLowerCase();\n\n    if (upper === lower) {\n        return function(c) {\n            if (c === lower) {\n                this._state = SUCCESS;\n            } else {\n                this._state = FAILURE;\n                this._index--;\n            }\n        };\n    } else {\n        return function(c) {\n            if (c === lower || c === upper) {\n                this._state = SUCCESS;\n            } else {\n                this._state = FAILURE;\n                this._index--;\n            }\n        };\n    }\n}\n\nfunction consumeSpecialNameChar(upper, NEXT_STATE) {\n    var lower = upper.toLowerCase();\n\n    return function(c) {\n        if (c === lower || c === upper) {\n            this._state = NEXT_STATE;\n        } else {\n            this._state = IN_TAG_NAME;\n            this._index--; //consume the token again\n        }\n    };\n}\n\nfunction Tokenizer(options, cbs) {\n    this._state = TEXT;\n    this._buffer = \"\";\n    this._sectionStart = 0;\n    this._index = 0;\n    this._bufferOffset = 0; //chars removed from _buffer\n    this._baseState = TEXT;\n    this._special = SPECIAL_NONE;\n    this._cbs = cbs;\n    this._running = true;\n    this._ended = false;\n    this._xmlMode = !!(options && options.xmlMode);\n    this._decodeEntities = !!(options && options.decodeEntities);\n}\n\nTokenizer.prototype._stateText = function(c) {\n    if (c === \"<\") {\n        if (this._index > this._sectionStart) {\n            this._cbs.ontext(this._getSection());\n        }\n        this._state = BEFORE_TAG_NAME;\n        this._sectionStart = this._index;\n    } else if (\n        this._decodeEntities &&\n        this._special === SPECIAL_NONE &&\n        c === \"&\"\n    ) {\n        if (this._index > this._sectionStart) {\n            this._cbs.ontext(this._getSection());\n        }\n        this._baseState = TEXT;\n        this._state = BEFORE_ENTITY;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateBeforeTagName = function(c) {\n    if (c === \"/\") {\n        this._state = BEFORE_CLOSING_TAG_NAME;\n    } else if (c === \"<\") {\n        this._cbs.ontext(this._getSection());\n        this._sectionStart = this._index;\n    } else if (c === \">\" || this._special !== SPECIAL_NONE || whitespace(c)) {\n        this._state = TEXT;\n    } else if (c === \"!\") {\n        this._state = BEFORE_DECLARATION;\n        this._sectionStart = this._index + 1;\n    } else if (c === \"?\") {\n        this._state = IN_PROCESSING_INSTRUCTION;\n        this._sectionStart = this._index + 1;\n    } else {\n        this._state =\n            !this._xmlMode && (c === \"s\" || c === \"S\")\n                ? BEFORE_SPECIAL\n                : IN_TAG_NAME;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateInTagName = function(c) {\n    if (c === \"/\" || c === \">\" || whitespace(c)) {\n        this._emitToken(\"onopentagname\");\n        this._state = BEFORE_ATTRIBUTE_NAME;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateBeforeCloseingTagName = function(c) {\n    if (whitespace(c));\n    else if (c === \">\") {\n        this._state = TEXT;\n    } else if (this._special !== SPECIAL_NONE) {\n        if (c === \"s\" || c === \"S\") {\n            this._state = BEFORE_SPECIAL_END;\n        } else {\n            this._state = TEXT;\n            this._index--;\n        }\n    } else {\n        this._state = IN_CLOSING_TAG_NAME;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateInCloseingTagName = function(c) {\n    if (c === \">\" || whitespace(c)) {\n        this._emitToken(\"onclosetag\");\n        this._state = AFTER_CLOSING_TAG_NAME;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateAfterCloseingTagName = function(c) {\n    //skip everything until \">\"\n    if (c === \">\") {\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    }\n};\n\nTokenizer.prototype._stateBeforeAttributeName = function(c) {\n    if (c === \">\") {\n        this._cbs.onopentagend();\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    } else if (c === \"/\") {\n        this._state = IN_SELF_CLOSING_TAG;\n    } else if (!whitespace(c)) {\n        this._state = IN_ATTRIBUTE_NAME;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateInSelfClosingTag = function(c) {\n    if (c === \">\") {\n        this._cbs.onselfclosingtag();\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    } else if (!whitespace(c)) {\n        this._state = BEFORE_ATTRIBUTE_NAME;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateInAttributeName = function(c) {\n    if (c === \"=\" || c === \"/\" || c === \">\" || whitespace(c)) {\n        this._cbs.onattribname(this._getSection());\n        this._sectionStart = -1;\n        this._state = AFTER_ATTRIBUTE_NAME;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateAfterAttributeName = function(c) {\n    if (c === \"=\") {\n        this._state = BEFORE_ATTRIBUTE_VALUE;\n    } else if (c === \"/\" || c === \">\") {\n        this._cbs.onattribend();\n        this._state = BEFORE_ATTRIBUTE_NAME;\n        this._index--;\n    } else if (!whitespace(c)) {\n        this._cbs.onattribend();\n        this._state = IN_ATTRIBUTE_NAME;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateBeforeAttributeValue = function(c) {\n    if (c === '\"') {\n        this._state = IN_ATTRIBUTE_VALUE_DQ;\n        this._sectionStart = this._index + 1;\n    } else if (c === \"'\") {\n        this._state = IN_ATTRIBUTE_VALUE_SQ;\n        this._sectionStart = this._index + 1;\n    } else if (!whitespace(c)) {\n        this._state = IN_ATTRIBUTE_VALUE_NQ;\n        this._sectionStart = this._index;\n        this._index--; //reconsume token\n    }\n};\n\nTokenizer.prototype._stateInAttributeValueDoubleQuotes = function(c) {\n    if (c === '\"') {\n        this._emitToken(\"onattribdata\");\n        this._cbs.onattribend();\n        this._state = BEFORE_ATTRIBUTE_NAME;\n    } else if (this._decodeEntities && c === \"&\") {\n        this._emitToken(\"onattribdata\");\n        this._baseState = this._state;\n        this._state = BEFORE_ENTITY;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateInAttributeValueSingleQuotes = function(c) {\n    if (c === \"'\") {\n        this._emitToken(\"onattribdata\");\n        this._cbs.onattribend();\n        this._state = BEFORE_ATTRIBUTE_NAME;\n    } else if (this._decodeEntities && c === \"&\") {\n        this._emitToken(\"onattribdata\");\n        this._baseState = this._state;\n        this._state = BEFORE_ENTITY;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateInAttributeValueNoQuotes = function(c) {\n    if (whitespace(c) || c === \">\") {\n        this._emitToken(\"onattribdata\");\n        this._cbs.onattribend();\n        this._state = BEFORE_ATTRIBUTE_NAME;\n        this._index--;\n    } else if (this._decodeEntities && c === \"&\") {\n        this._emitToken(\"onattribdata\");\n        this._baseState = this._state;\n        this._state = BEFORE_ENTITY;\n        this._sectionStart = this._index;\n    }\n};\n\nTokenizer.prototype._stateBeforeDeclaration = function(c) {\n    this._state =\n        c === \"[\"\n            ? BEFORE_CDATA_1\n            : c === \"-\"\n                ? BEFORE_COMMENT\n                : IN_DECLARATION;\n};\n\nTokenizer.prototype._stateInDeclaration = function(c) {\n    if (c === \">\") {\n        this._cbs.ondeclaration(this._getSection());\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    }\n};\n\nTokenizer.prototype._stateInProcessingInstruction = function(c) {\n    if (c === \">\") {\n        this._cbs.onprocessinginstruction(this._getSection());\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    }\n};\n\nTokenizer.prototype._stateBeforeComment = function(c) {\n    if (c === \"-\") {\n        this._state = IN_COMMENT;\n        this._sectionStart = this._index + 1;\n    } else {\n        this._state = IN_DECLARATION;\n    }\n};\n\nTokenizer.prototype._stateInComment = function(c) {\n    if (c === \"-\") this._state = AFTER_COMMENT_1;\n};\n\nTokenizer.prototype._stateAfterComment1 = function(c) {\n    if (c === \"-\") {\n        this._state = AFTER_COMMENT_2;\n    } else {\n        this._state = IN_COMMENT;\n    }\n};\n\nTokenizer.prototype._stateAfterComment2 = function(c) {\n    if (c === \">\") {\n        //remove 2 trailing chars\n        this._cbs.oncomment(\n            this._buffer.substring(this._sectionStart, this._index - 2)\n        );\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    } else if (c !== \"-\") {\n        this._state = IN_COMMENT;\n    }\n    // else: stay in AFTER_COMMENT_2 (`--->`)\n};\n\nTokenizer.prototype._stateBeforeCdata1 = ifElseState(\n    \"C\",\n    BEFORE_CDATA_2,\n    IN_DECLARATION\n);\nTokenizer.prototype._stateBeforeCdata2 = ifElseState(\n    \"D\",\n    BEFORE_CDATA_3,\n    IN_DECLARATION\n);\nTokenizer.prototype._stateBeforeCdata3 = ifElseState(\n    \"A\",\n    BEFORE_CDATA_4,\n    IN_DECLARATION\n);\nTokenizer.prototype._stateBeforeCdata4 = ifElseState(\n    \"T\",\n    BEFORE_CDATA_5,\n    IN_DECLARATION\n);\nTokenizer.prototype._stateBeforeCdata5 = ifElseState(\n    \"A\",\n    BEFORE_CDATA_6,\n    IN_DECLARATION\n);\n\nTokenizer.prototype._stateBeforeCdata6 = function(c) {\n    if (c === \"[\") {\n        this._state = IN_CDATA;\n        this._sectionStart = this._index + 1;\n    } else {\n        this._state = IN_DECLARATION;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateInCdata = function(c) {\n    if (c === \"]\") this._state = AFTER_CDATA_1;\n};\n\nTokenizer.prototype._stateAfterCdata1 = function(c) {\n    if (c === \"]\") this._state = AFTER_CDATA_2;\n    else this._state = IN_CDATA;\n};\n\nTokenizer.prototype._stateAfterCdata2 = function(c) {\n    if (c === \">\") {\n        //remove 2 trailing chars\n        this._cbs.oncdata(\n            this._buffer.substring(this._sectionStart, this._index - 2)\n        );\n        this._state = TEXT;\n        this._sectionStart = this._index + 1;\n    } else if (c !== \"]\") {\n        this._state = IN_CDATA;\n    }\n    //else: stay in AFTER_CDATA_2 (`]]]>`)\n};\n\nTokenizer.prototype._stateBeforeSpecial = function(c) {\n    if (c === \"c\" || c === \"C\") {\n        this._state = BEFORE_SCRIPT_1;\n    } else if (c === \"t\" || c === \"T\") {\n        this._state = BEFORE_STYLE_1;\n    } else {\n        this._state = IN_TAG_NAME;\n        this._index--; //consume the token again\n    }\n};\n\nTokenizer.prototype._stateBeforeSpecialEnd = function(c) {\n    if (this._special === SPECIAL_SCRIPT && (c === \"c\" || c === \"C\")) {\n        this._state = AFTER_SCRIPT_1;\n    } else if (this._special === SPECIAL_STYLE && (c === \"t\" || c === \"T\")) {\n        this._state = AFTER_STYLE_1;\n    } else this._state = TEXT;\n};\n\nTokenizer.prototype._stateBeforeScript1 = consumeSpecialNameChar(\n    \"R\",\n    BEFORE_SCRIPT_2\n);\nTokenizer.prototype._stateBeforeScript2 = consumeSpecialNameChar(\n    \"I\",\n    BEFORE_SCRIPT_3\n);\nTokenizer.prototype._stateBeforeScript3 = consumeSpecialNameChar(\n    \"P\",\n    BEFORE_SCRIPT_4\n);\nTokenizer.prototype._stateBeforeScript4 = consumeSpecialNameChar(\n    \"T\",\n    BEFORE_SCRIPT_5\n);\n\nTokenizer.prototype._stateBeforeScript5 = function(c) {\n    if (c === \"/\" || c === \">\" || whitespace(c)) {\n        this._special = SPECIAL_SCRIPT;\n    }\n    this._state = IN_TAG_NAME;\n    this._index--; //consume the token again\n};\n\nTokenizer.prototype._stateAfterScript1 = ifElseState(\"R\", AFTER_SCRIPT_2, TEXT);\nTokenizer.prototype._stateAfterScript2 = ifElseState(\"I\", AFTER_SCRIPT_3, TEXT);\nTokenizer.prototype._stateAfterScript3 = ifElseState(\"P\", AFTER_SCRIPT_4, TEXT);\nTokenizer.prototype._stateAfterScript4 = ifElseState(\"T\", AFTER_SCRIPT_5, TEXT);\n\nTokenizer.prototype._stateAfterScript5 = function(c) {\n    if (c === \">\" || whitespace(c)) {\n        this._special = SPECIAL_NONE;\n        this._state = IN_CLOSING_TAG_NAME;\n        this._sectionStart = this._index - 6;\n        this._index--; //reconsume the token\n    } else this._state = TEXT;\n};\n\nTokenizer.prototype._stateBeforeStyle1 = consumeSpecialNameChar(\n    \"Y\",\n    BEFORE_STYLE_2\n);\nTokenizer.prototype._stateBeforeStyle2 = consumeSpecialNameChar(\n    \"L\",\n    BEFORE_STYLE_3\n);\nTokenizer.prototype._stateBeforeStyle3 = consumeSpecialNameChar(\n    \"E\",\n    BEFORE_STYLE_4\n);\n\nTokenizer.prototype._stateBeforeStyle4 = function(c) {\n    if (c === \"/\" || c === \">\" || whitespace(c)) {\n        this._special = SPECIAL_STYLE;\n    }\n    this._state = IN_TAG_NAME;\n    this._index--; //consume the token again\n};\n\nTokenizer.prototype._stateAfterStyle1 = ifElseState(\"Y\", AFTER_STYLE_2, TEXT);\nTokenizer.prototype._stateAfterStyle2 = ifElseState(\"L\", AFTER_STYLE_3, TEXT);\nTokenizer.prototype._stateAfterStyle3 = ifElseState(\"E\", AFTER_STYLE_4, TEXT);\n\nTokenizer.prototype._stateAfterStyle4 = function(c) {\n    if (c === \">\" || whitespace(c)) {\n        this._special = SPECIAL_NONE;\n        this._state = IN_CLOSING_TAG_NAME;\n        this._sectionStart = this._index - 5;\n        this._index--; //reconsume the token\n    } else this._state = TEXT;\n};\n\nTokenizer.prototype._stateBeforeEntity = ifElseState(\n    \"#\",\n    BEFORE_NUMERIC_ENTITY,\n    IN_NAMED_ENTITY\n);\nTokenizer.prototype._stateBeforeNumericEntity = ifElseState(\n    \"X\",\n    IN_HEX_ENTITY,\n    IN_NUMERIC_ENTITY\n);\n\n//for entities terminated with a semicolon\nTokenizer.prototype._parseNamedEntityStrict = function() {\n    //offset = 1\n    if (this._sectionStart + 1 < this._index) {\n        var entity = this._buffer.substring(\n                this._sectionStart + 1,\n                this._index\n            ),\n            map = this._xmlMode ? xmlMap : entityMap;\n\n        if (map.hasOwnProperty(entity)) {\n            this._emitPartial(map[entity]);\n            this._sectionStart = this._index + 1;\n        }\n    }\n};\n\n//parses legacy entities (without trailing semicolon)\nTokenizer.prototype._parseLegacyEntity = function() {\n    var start = this._sectionStart + 1,\n        limit = this._index - start;\n\n    if (limit > 6) limit = 6; //the max length of legacy entities is 6\n\n    while (limit >= 2) {\n        //the min length of legacy entities is 2\n        var entity = this._buffer.substr(start, limit);\n\n        if (legacyMap.hasOwnProperty(entity)) {\n            this._emitPartial(legacyMap[entity]);\n            this._sectionStart += limit + 1;\n            return;\n        } else {\n            limit--;\n        }\n    }\n};\n\nTokenizer.prototype._stateInNamedEntity = function(c) {\n    if (c === \";\") {\n        this._parseNamedEntityStrict();\n        if (this._sectionStart + 1 < this._index && !this._xmlMode) {\n            this._parseLegacyEntity();\n        }\n        this._state = this._baseState;\n    } else if (\n        (c < \"a\" || c > \"z\") &&\n        (c < \"A\" || c > \"Z\") &&\n        (c < \"0\" || c > \"9\")\n    ) {\n        if (this._xmlMode);\n        else if (this._sectionStart + 1 === this._index);\n        else if (this._baseState !== TEXT) {\n            if (c !== \"=\") {\n                this._parseNamedEntityStrict();\n            }\n        } else {\n            this._parseLegacyEntity();\n        }\n\n        this._state = this._baseState;\n        this._index--;\n    }\n};\n\nTokenizer.prototype._decodeNumericEntity = function(offset, base) {\n    var sectionStart = this._sectionStart + offset;\n\n    if (sectionStart !== this._index) {\n        //parse entity\n        var entity = this._buffer.substring(sectionStart, this._index);\n        var parsed = parseInt(entity, base);\n\n        this._emitPartial(decodeCodePoint(parsed));\n        this._sectionStart = this._index;\n    } else {\n        this._sectionStart--;\n    }\n\n    this._state = this._baseState;\n};\n\nTokenizer.prototype._stateInNumericEntity = function(c) {\n    if (c === \";\") {\n        this._decodeNumericEntity(2, 10);\n        this._sectionStart++;\n    } else if (c < \"0\" || c > \"9\") {\n        if (!this._xmlMode) {\n            this._decodeNumericEntity(2, 10);\n        } else {\n            this._state = this._baseState;\n        }\n        this._index--;\n    }\n};\n\nTokenizer.prototype._stateInHexEntity = function(c) {\n    if (c === \";\") {\n        this._decodeNumericEntity(3, 16);\n        this._sectionStart++;\n    } else if (\n        (c < \"a\" || c > \"f\") &&\n        (c < \"A\" || c > \"F\") &&\n        (c < \"0\" || c > \"9\")\n    ) {\n        if (!this._xmlMode) {\n            this._decodeNumericEntity(3, 16);\n        } else {\n            this._state = this._baseState;\n        }\n        this._index--;\n    }\n};\n\nTokenizer.prototype._cleanup = function() {\n    if (this._sectionStart < 0) {\n        this._buffer = \"\";\n        this._bufferOffset += this._index;\n        this._index = 0;\n    } else if (this._running) {\n        if (this._state === TEXT) {\n            if (this._sectionStart !== this._index) {\n                this._cbs.ontext(this._buffer.substr(this._sectionStart));\n            }\n            this._buffer = \"\";\n            this._bufferOffset += this._index;\n            this._index = 0;\n        } else if (this._sectionStart === this._index) {\n            //the section just started\n            this._buffer = \"\";\n            this._bufferOffset += this._index;\n            this._index = 0;\n        } else {\n            //remove everything unnecessary\n            this._buffer = this._buffer.substr(this._sectionStart);\n            this._index -= this._sectionStart;\n            this._bufferOffset += this._sectionStart;\n        }\n\n        this._sectionStart = 0;\n    }\n};\n\n//TODO make events conditional\nTokenizer.prototype.write = function(chunk) {\n    if (this._ended) this._cbs.onerror(Error(\".write() after done!\"));\n\n    this._buffer += chunk;\n    this._parse();\n};\n\nTokenizer.prototype._parse = function() {\n    while (this._index < this._buffer.length && this._running) {\n        var c = this._buffer.charAt(this._index);\n        if (this._state === TEXT) {\n            this._stateText(c);\n        } else if (this._state === BEFORE_TAG_NAME) {\n            this._stateBeforeTagName(c);\n        } else if (this._state === IN_TAG_NAME) {\n            this._stateInTagName(c);\n        } else if (this._state === BEFORE_CLOSING_TAG_NAME) {\n            this._stateBeforeCloseingTagName(c);\n        } else if (this._state === IN_CLOSING_TAG_NAME) {\n            this._stateInCloseingTagName(c);\n        } else if (this._state === AFTER_CLOSING_TAG_NAME) {\n            this._stateAfterCloseingTagName(c);\n        } else if (this._state === IN_SELF_CLOSING_TAG) {\n            this._stateInSelfClosingTag(c);\n        } else if (this._state === BEFORE_ATTRIBUTE_NAME) {\n\n        /*\n\t\t*\tattributes\n\t\t*/\n            this._stateBeforeAttributeName(c);\n        } else if (this._state === IN_ATTRIBUTE_NAME) {\n            this._stateInAttributeName(c);\n        } else if (this._state === AFTER_ATTRIBUTE_NAME) {\n            this._stateAfterAttributeName(c);\n        } else if (this._state === BEFORE_ATTRIBUTE_VALUE) {\n            this._stateBeforeAttributeValue(c);\n        } else if (this._state === IN_ATTRIBUTE_VALUE_DQ) {\n            this._stateInAttributeValueDoubleQuotes(c);\n        } else if (this._state === IN_ATTRIBUTE_VALUE_SQ) {\n            this._stateInAttributeValueSingleQuotes(c);\n        } else if (this._state === IN_ATTRIBUTE_VALUE_NQ) {\n            this._stateInAttributeValueNoQuotes(c);\n        } else if (this._state === BEFORE_DECLARATION) {\n\n        /*\n\t\t*\tdeclarations\n\t\t*/\n            this._stateBeforeDeclaration(c);\n        } else if (this._state === IN_DECLARATION) {\n            this._stateInDeclaration(c);\n        } else if (this._state === IN_PROCESSING_INSTRUCTION) {\n\n        /*\n\t\t*\tprocessing instructions\n\t\t*/\n            this._stateInProcessingInstruction(c);\n        } else if (this._state === BEFORE_COMMENT) {\n\n        /*\n\t\t*\tcomments\n\t\t*/\n            this._stateBeforeComment(c);\n        } else if (this._state === IN_COMMENT) {\n            this._stateInComment(c);\n        } else if (this._state === AFTER_COMMENT_1) {\n            this._stateAfterComment1(c);\n        } else if (this._state === AFTER_COMMENT_2) {\n            this._stateAfterComment2(c);\n        } else if (this._state === BEFORE_CDATA_1) {\n\n        /*\n\t\t*\tcdata\n\t\t*/\n            this._stateBeforeCdata1(c);\n        } else if (this._state === BEFORE_CDATA_2) {\n            this._stateBeforeCdata2(c);\n        } else if (this._state === BEFORE_CDATA_3) {\n            this._stateBeforeCdata3(c);\n        } else if (this._state === BEFORE_CDATA_4) {\n            this._stateBeforeCdata4(c);\n        } else if (this._state === BEFORE_CDATA_5) {\n            this._stateBeforeCdata5(c);\n        } else if (this._state === BEFORE_CDATA_6) {\n            this._stateBeforeCdata6(c);\n        } else if (this._state === IN_CDATA) {\n            this._stateInCdata(c);\n        } else if (this._state === AFTER_CDATA_1) {\n            this._stateAfterCdata1(c);\n        } else if (this._state === AFTER_CDATA_2) {\n            this._stateAfterCdata2(c);\n        } else if (this._state === BEFORE_SPECIAL) {\n\n        /*\n\t\t* special tags\n\t\t*/\n            this._stateBeforeSpecial(c);\n        } else if (this._state === BEFORE_SPECIAL_END) {\n            this._stateBeforeSpecialEnd(c);\n        } else if (this._state === BEFORE_SCRIPT_1) {\n\n        /*\n\t\t* script\n\t\t*/\n            this._stateBeforeScript1(c);\n        } else if (this._state === BEFORE_SCRIPT_2) {\n            this._stateBeforeScript2(c);\n        } else if (this._state === BEFORE_SCRIPT_3) {\n            this._stateBeforeScript3(c);\n        } else if (this._state === BEFORE_SCRIPT_4) {\n            this._stateBeforeScript4(c);\n        } else if (this._state === BEFORE_SCRIPT_5) {\n            this._stateBeforeScript5(c);\n        } else if (this._state === AFTER_SCRIPT_1) {\n            this._stateAfterScript1(c);\n        } else if (this._state === AFTER_SCRIPT_2) {\n            this._stateAfterScript2(c);\n        } else if (this._state === AFTER_SCRIPT_3) {\n            this._stateAfterScript3(c);\n        } else if (this._state === AFTER_SCRIPT_4) {\n            this._stateAfterScript4(c);\n        } else if (this._state === AFTER_SCRIPT_5) {\n            this._stateAfterScript5(c);\n        } else if (this._state === BEFORE_STYLE_1) {\n\n        /*\n\t\t* style\n\t\t*/\n            this._stateBeforeStyle1(c);\n        } else if (this._state === BEFORE_STYLE_2) {\n            this._stateBeforeStyle2(c);\n        } else if (this._state === BEFORE_STYLE_3) {\n            this._stateBeforeStyle3(c);\n        } else if (this._state === BEFORE_STYLE_4) {\n            this._stateBeforeStyle4(c);\n        } else if (this._state === AFTER_STYLE_1) {\n            this._stateAfterStyle1(c);\n        } else if (this._state === AFTER_STYLE_2) {\n            this._stateAfterStyle2(c);\n        } else if (this._state === AFTER_STYLE_3) {\n            this._stateAfterStyle3(c);\n        } else if (this._state === AFTER_STYLE_4) {\n            this._stateAfterStyle4(c);\n        } else if (this._state === BEFORE_ENTITY) {\n\n        /*\n\t\t* entities\n\t\t*/\n            this._stateBeforeEntity(c);\n        } else if (this._state === BEFORE_NUMERIC_ENTITY) {\n            this._stateBeforeNumericEntity(c);\n        } else if (this._state === IN_NAMED_ENTITY) {\n            this._stateInNamedEntity(c);\n        } else if (this._state === IN_NUMERIC_ENTITY) {\n            this._stateInNumericEntity(c);\n        } else if (this._state === IN_HEX_ENTITY) {\n            this._stateInHexEntity(c);\n        } else {\n            this._cbs.onerror(Error(\"unknown _state\"), this._state);\n        }\n\n        this._index++;\n    }\n\n    this._cleanup();\n};\n\nTokenizer.prototype.pause = function() {\n    this._running = false;\n};\nTokenizer.prototype.resume = function() {\n    this._running = true;\n\n    if (this._index < this._buffer.length) {\n        this._parse();\n    }\n    if (this._ended) {\n        this._finish();\n    }\n};\n\nTokenizer.prototype.end = function(chunk) {\n    if (this._ended) this._cbs.onerror(Error(\".end() after done!\"));\n    if (chunk) this.write(chunk);\n\n    this._ended = true;\n\n    if (this._running) this._finish();\n};\n\nTokenizer.prototype._finish = function() {\n    //if there is remaining data, emit it in a reasonable way\n    if (this._sectionStart < this._index) {\n        this._handleTrailingData();\n    }\n\n    this._cbs.onend();\n};\n\nTokenizer.prototype._handleTrailingData = function() {\n    var data = this._buffer.substr(this._sectionStart);\n\n    if (\n        this._state === IN_CDATA ||\n        this._state === AFTER_CDATA_1 ||\n        this._state === AFTER_CDATA_2\n    ) {\n        this._cbs.oncdata(data);\n    } else if (\n        this._state === IN_COMMENT ||\n        this._state === AFTER_COMMENT_1 ||\n        this._state === AFTER_COMMENT_2\n    ) {\n        this._cbs.oncomment(data);\n    } else if (this._state === IN_NAMED_ENTITY && !this._xmlMode) {\n        this._parseLegacyEntity();\n        if (this._sectionStart < this._index) {\n            this._state = this._baseState;\n            this._handleTrailingData();\n        }\n    } else if (this._state === IN_NUMERIC_ENTITY && !this._xmlMode) {\n        this._decodeNumericEntity(2, 10);\n        if (this._sectionStart < this._index) {\n            this._state = this._baseState;\n            this._handleTrailingData();\n        }\n    } else if (this._state === IN_HEX_ENTITY && !this._xmlMode) {\n        this._decodeNumericEntity(3, 16);\n        if (this._sectionStart < this._index) {\n            this._state = this._baseState;\n            this._handleTrailingData();\n        }\n    } else if (\n        this._state !== IN_TAG_NAME &&\n        this._state !== BEFORE_ATTRIBUTE_NAME &&\n        this._state !== BEFORE_ATTRIBUTE_VALUE &&\n        this._state !== AFTER_ATTRIBUTE_NAME &&\n        this._state !== IN_ATTRIBUTE_NAME &&\n        this._state !== IN_ATTRIBUTE_VALUE_SQ &&\n        this._state !== IN_ATTRIBUTE_VALUE_DQ &&\n        this._state !== IN_ATTRIBUTE_VALUE_NQ &&\n        this._state !== IN_CLOSING_TAG_NAME\n    ) {\n        this._cbs.ontext(data);\n    }\n    //else, ignore remaining data\n    //TODO add a way to remove current tag\n};\n\nTokenizer.prototype.reset = function() {\n    Tokenizer.call(\n        this,\n        { xmlMode: this._xmlMode, decodeEntities: this._decodeEntities },\n        this._cbs\n    );\n};\n\nTokenizer.prototype.getAbsoluteIndex = function() {\n    return this._bufferOffset + this._index;\n};\n\nTokenizer.prototype._getSection = function() {\n    return this._buffer.substring(this._sectionStart, this._index);\n};\n\nTokenizer.prototype._emitToken = function(name) {\n    this._cbs[name](this._getSection());\n    this._sectionStart = -1;\n};\n\nTokenizer.prototype._emitPartial = function(value) {\n    if (this._baseState !== TEXT) {\n        this._cbs.onattribdata(value); //TODO implement the new event\n    } else {\n        this._cbs.ontext(value);\n    }\n};\n"],"sourceRoot":""}