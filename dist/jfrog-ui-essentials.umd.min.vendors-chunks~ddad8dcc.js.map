{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/axios/lib/core/Axios.js","webpack://jfrog-ui-essentials/./node_modules/axios/lib/core/createError.js","webpack://jfrog-ui-essentials/./node_modules/axios/lib/cancel/isCancel.js","webpack://jfrog-ui-essentials/./node_modules/axios/lib/core/enhanceError.js","webpack://jfrog-ui-essentials/./node_modules/axios/lib/core/settle.js","webpack://jfrog-ui-essentials/./node_modules/axios/lib/core/dispatchRequest.js","webpack://jfrog-ui-essentials/./node_modules/axios/lib/cancel/Cancel.js","webpack://jfrog-ui-essentials/./node_modules/axios/lib/cancel/CancelToken.js","webpack://jfrog-ui-essentials/./node_modules/axios/lib/core/transformData.js","webpack://jfrog-ui-essentials/./node_modules/axios/lib/core/InterceptorManager.js"],"names":["defaults","__webpack_require__","utils","InterceptorManager","dispatchRequest","Axios","instanceConfig","this","interceptors","request","response","prototype","config","merge","url","arguments","method","toLowerCase","chain","undefined","promise","Promise","resolve","forEach","interceptor","unshift","fulfilled","rejected","push","length","then","shift","data","module","exports","enhanceError","message","code","error","Error","value","__CANCEL__","createError","reject","validateStatus","status","transformData","isCancel","isAbsoluteURL","combineURLs","throwIfCancellationRequested","cancelToken","throwIfRequested","baseURL","headers","transformRequest","common","adapter","transformResponse","reason","Cancel","toString","CancelToken","executor","TypeError","resolvePromise","token","source","cancel","c","fns","fn","handlers","use","eject","id","h"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~ddad8dcc.js","sourcesContent":["'use strict';\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = utils.merge({\n      url: arguments[0]\n    }, arguments[1]);\n  }\n\n  config = utils.merge(defaults, {method: 'get'}, this.defaults, config);\n  config.method = config.method.toLowerCase();\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(utils.merge(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n  error.request = request;\n  error.response = response;\n  return error;\n};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  // Note: status is not exposed by XDomainRequest\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar isAbsoluteURL = require('./../helpers/isAbsoluteURL');\nvar combineURLs = require('./../helpers/combineURLs');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Support baseURL config\n  if (config.baseURL && !isAbsoluteURL(config.url)) {\n    config.url = combineURLs(config.baseURL, config.url);\n  }\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n"],"sourceRoot":""}