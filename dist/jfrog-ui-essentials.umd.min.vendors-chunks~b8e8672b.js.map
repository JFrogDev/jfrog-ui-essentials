{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/components/table/helpers/filter-event.js","webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/components/table/helpers/default-sort-compare.js"],"names":["exports","__esModule","default","filterEvent","_dom","__webpack_require__","_constants","evt","target","el","tagName","disabled","closest","label","control","matches","EVENT_FILTER","defaultSortCompare","_get","_interopRequireDefault","_inspect","_stringifyObjectValues","obj","a","b","sortBy","isDate","isNumber","localeCompare","undefined","numeric"],"mappings":"yMAEAA,EAAAC,YAAA,EACAD,EAAAE,QAAAC,EAEA,IAAAC,EAAWC,EAAQ,QAEnBC,EAAiBD,EAAQ,QAIzB,SAAAF,EAAAI,GACA,GAAAA,KAAAC,OAAA,CAKA,IAAAC,EAAAF,EAAAC,OAEA,UAAAC,EAAAC,SAAA,OAAAD,EAAAC,SAAA,OAAAD,EAAAC,SAAAD,EAAAE,SAEA,SAGA,MAAAP,EAAAQ,SAAA,iBAAAH,GAEA,SAGA,IAAAI,EAAA,UAAAJ,EAAAC,QAAAD,GAAA,EAAAL,EAAAQ,SAAA,QAAAH,GAEA,SAAAI,MAAAC,SAAAD,EAAAC,QAAAH,YAOA,EAAAP,EAAAW,SAAAN,EAAAH,EAAAU,mDCpCAhB,EAAAC,YAAA,EACAD,EAAAE,QAAAe,EAEA,IAAAC,EAAAC,EAAkCd,EAAQ,SAE1Ce,EAAef,EAAQ,QAEvBgB,EAAAF,EAAoDd,EAAQ,SAE5D,SAAAc,EAAAG,GAAsC,OAAAA,KAAArB,WAAAqB,EAAA,CAAuCpB,QAAAoB,GAO7E,SAAAL,EAAAM,EAAAC,EAAAC,GAIA,OAHAF,GAAA,EAAAL,EAAAhB,SAAAqB,EAAAE,EAAA,IACAD,GAAA,EAAAN,EAAAhB,SAAAsB,EAAAC,EAAA,KAEA,EAAAL,EAAAM,QAAAH,KAAA,EAAAH,EAAAM,QAAAF,KAAA,EAAAJ,EAAAO,UAAAJ,KAAA,EAAAH,EAAAO,UAAAH,GAGAD,EAAAC,GACA,EACKD,EAAAC,EACL,EAEA,GAIA,EAAAH,EAAAnB,SAAAqB,GAAAK,eAAA,EAAAP,EAAAnB,SAAAsB,QAAAK,EAAA,CACAC,SAAA","file":"jfrog-ui-essentials.umd.min.vendors-chunks~b8e8672b.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = filterEvent;\n\nvar _dom = require(\"../../../utils/dom\");\n\nvar _constants = require(\"./constants\");\n\n// Returns true of we should ignore the click/dbclick/keypress event\n// Avoids having the user need to use @click.stop on the form control\nfunction filterEvent(evt) {\n  if (!evt || !evt.target) {\n    /* istanbul ignore next */\n    return;\n  }\n\n  var el = evt.target;\n\n  if (el.tagName === 'TD' || el.tagName === 'TH' || el.tagName === 'TR' || el.disabled) {\n    // Shortut all the following tests for efficiency\n    return false;\n  }\n\n  if ((0, _dom.closest)('.dropdown-menu', el)) {\n    // Click was in a dropdown menu, so ignore\n    return true;\n  }\n\n  var label = el.tagName === 'LABEL' ? el : (0, _dom.closest)('label', el);\n\n  if (label && label.control && !label.control.disabled) {\n    // If the label's form control is not disabled then we don't propagate evt\n    return true;\n  } // Else check to see if the event target matches one of the selectors in the event filter\n  // i.e. anchors, non disabled inputs, etc. Return true if we should ignore the event.\n\n\n  return (0, _dom.matches)(el, _constants.EVENT_FILTER);\n}","\"use strict\";\n\nexports.__esModule = true;\nexports.default = defaultSortCompare;\n\nvar _get = _interopRequireDefault(require(\"../../../utils/get\"));\n\nvar _inspect = require(\"../../../utils/inspect\");\n\nvar _stringifyObjectValues = _interopRequireDefault(require(\"./stringify-object-values\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Default sort compare routine\n//\n// TODO: add option to sort by multiple columns (tri-state per column, plus order of columns in sort)\n//  where sortBy could be an array of objects [ {key: 'foo', sortDir: 'asc'}, {key:'bar', sortDir: 'desc'} ...]\n//  or an array of arrays [ ['foo','asc'], ['bar','desc'] ]\nfunction defaultSortCompare(a, b, sortBy) {\n  a = (0, _get.default)(a, sortBy, '');\n  b = (0, _get.default)(b, sortBy, '');\n\n  if ((0, _inspect.isDate)(a) && (0, _inspect.isDate)(b) || (0, _inspect.isNumber)(a) && (0, _inspect.isNumber)(b)) {\n    // Special case for comparing Dates and Numbers\n    // Internally dates are compared via their epoch number values\n    if (a < b) {\n      return -1;\n    } else if (a > b) {\n      return 1;\n    } else {\n      return 0;\n    }\n  } else {\n    // Do localized string comparison\n    return (0, _stringifyObjectValues.default)(a).localeCompare((0, _stringifyObjectValues.default)(b), undefined, {\n      numeric: true\n    });\n  }\n}"],"sourceRoot":""}