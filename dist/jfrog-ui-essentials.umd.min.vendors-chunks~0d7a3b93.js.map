{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/vue-multiselect/src/index.js","webpack://jfrog-ui-essentials/./node_modules/vue-multiselect/src/pointerMixin.js"],"names":["_Multiselect__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","__webpack_exports__","[object Object]","pointer","pointerDirty","props","showPointer","type","Boolean","default","optionHeight","Number","computed","this","optimizedHeight","watch","pointerAdjust","methods","index","option","multiselect__option--highlight","multiselect__option--selected","isSelected","selectedGroup","groupSelect","group","options","find","groupLabel","$groupLabel","wholeGroupDisabled","multiselect__option--group-selected","wholeGroupSelected","key","filteredOptions","length","select","pointerReset","$refs","list","scrollTop","pointerPosition","visibleElements","$isLabel","pointerForward","pointerBackward","closeOnSelect"],"mappings":"wMAAA,IAAAA,EAAAC,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAIeC,EAAA,KAAAF,EAAA,0CCJAE,EAAA,MACfC,OACA,OACAC,QAAA,EACAC,cAAA,IAGAC,MAAA,CAMAC,YAAA,CACAC,KAAAC,QACAC,SAAA,GAEAC,aAAA,CACAH,KAAAI,OACAF,QAAA,KAGAG,SAAA,CACAV,kBACA,OAAAW,KAAAV,QAAAU,KAAAH,cAEAR,kBACA,OAAAW,KAAAC,gBAAAD,KAAAH,eAGAK,MAAA,CACAb,kBACAW,KAAAG,iBAEAd,SACAW,KAAAT,cAAA,IAGAa,QAAA,CACAf,gBAAAgB,EAAAC,GACA,OACAC,iCAAAF,IAAAL,KAAAV,SAAAU,KAAAP,YACAe,gCAAAR,KAAAS,WAAAH,KAGAjB,eAAAgB,EAAAK,GACA,IAAAV,KAAAW,YACA,qEAGA,MAAAC,EAAAZ,KAAAa,QAAAC,KAAAR,IACA,OAAAA,EAAAN,KAAAe,cAAAL,EAAAM,cAGA,OAAAJ,IAAAZ,KAAAiB,mBAAAL,GAAA,CACA,6BACA,CAASL,iCAAAF,IAAAL,KAAAV,SAAAU,KAAAP,aACT,CAASyB,sCAAAlB,KAAAmB,mBAAAP,KACT,iCAEAvB,mBAAA+B,IAAwBA,GAAM,SAE9BpB,KAAAqB,gBAAAC,OAAA,GACAtB,KAAAuB,OAAAvB,KAAAqB,gBAAArB,KAAAV,SAAA8B,GAEApB,KAAAwB,gBAEAnC,iBAEAW,KAAAV,QAAAU,KAAAqB,gBAAAC,OAAA,IACAtB,KAAAV,UAEAU,KAAAyB,MAAAC,KAAAC,WAAA3B,KAAA4B,iBAAA5B,KAAA6B,gBAAA,GAAA7B,KAAAH,eACAG,KAAAyB,MAAAC,KAAAC,UAAA3B,KAAA4B,iBAAA5B,KAAA6B,gBAAA,GAAA7B,KAAAH,cAIAG,KAAAqB,gBAAArB,KAAAV,UACAU,KAAAqB,gBAAArB,KAAAV,SAAAwC,WACA9B,KAAAW,aACAX,KAAA+B,kBAEA/B,KAAAT,cAAA,GAEAF,kBACAW,KAAAV,QAAA,GACAU,KAAAV,UAEAU,KAAAyB,MAAAC,KAAAC,WAAA3B,KAAA4B,kBACA5B,KAAAyB,MAAAC,KAAAC,UAAA3B,KAAA4B,iBAIA5B,KAAAqB,gBAAArB,KAAAV,UACAU,KAAAqB,gBAAArB,KAAAV,SAAAwC,WACA9B,KAAAW,aACAX,KAAAgC,mBAIAhC,KAAAqB,gBAAArB,KAAAV,UACAU,KAAAqB,gBAAA,GAAAS,WACA9B,KAAAW,aACAX,KAAA+B,iBAEA/B,KAAAT,cAAA,GAEAF,eAEAW,KAAAiC,gBACAjC,KAAAV,QAAA,EAEAU,KAAAyB,MAAAC,OACA1B,KAAAyB,MAAAC,KAAAC,UAAA,KAGAtC,gBAEAW,KAAAV,SAAAU,KAAAqB,gBAAAC,OAAA,IACAtB,KAAAV,QAAAU,KAAAqB,gBAAAC,OACAtB,KAAAqB,gBAAAC,OAAA,EACA,GAGAtB,KAAAqB,gBAAAC,OAAA,GACAtB,KAAAqB,gBAAArB,KAAAV,SAAAwC,WACA9B,KAAAW,aAEAX,KAAA+B,kBAGA1C,WAAAgB,GACAL,KAAAV,QAAAe,EACAL,KAAAT,cAAA","file":"jfrog-ui-essentials.umd.min.vendors-chunks~0d7a3b93.js","sourcesContent":["import Multiselect from './Multiselect'\nimport multiselectMixin from './multiselectMixin'\nimport pointerMixin from './pointerMixin'\n\nexport default Multiselect\n\nexport { Multiselect, multiselectMixin, pointerMixin }\n","export default {\n  data () {\n    return {\n      pointer: 0,\n      pointerDirty: false\n    }\n  },\n  props: {\n    /**\n     * Enable/disable highlighting of the pointed value.\n     * @type {Boolean}\n     * @default true\n     */\n    showPointer: {\n      type: Boolean,\n      default: true\n    },\n    optionHeight: {\n      type: Number,\n      default: 40\n    }\n  },\n  computed: {\n    pointerPosition () {\n      return this.pointer * this.optionHeight\n    },\n    visibleElements () {\n      return this.optimizedHeight / this.optionHeight\n    }\n  },\n  watch: {\n    filteredOptions () {\n      this.pointerAdjust()\n    },\n    isOpen () {\n      this.pointerDirty = false\n    }\n  },\n  methods: {\n    optionHighlight (index, option) {\n      return {\n        'multiselect__option--highlight': index === this.pointer && this.showPointer,\n        'multiselect__option--selected': this.isSelected(option)\n      }\n    },\n    groupHighlight (index, selectedGroup) {\n      if (!this.groupSelect) {\n        return ['multiselect__option--group', 'multiselect__option--disabled']\n      }\n\n      const group = this.options.find(option => {\n        return option[this.groupLabel] === selectedGroup.$groupLabel\n      })\n\n      return group && !this.wholeGroupDisabled(group) ? [\n        'multiselect__option--group',\n        { 'multiselect__option--highlight': index === this.pointer && this.showPointer },\n        { 'multiselect__option--group-selected': this.wholeGroupSelected(group) }\n      ] : 'multiselect__option--disabled'\n    },\n    addPointerElement ({ key } = 'Enter') {\n      /* istanbul ignore else */\n      if (this.filteredOptions.length > 0) {\n        this.select(this.filteredOptions[this.pointer], key)\n      }\n      this.pointerReset()\n    },\n    pointerForward () {\n      /* istanbul ignore else */\n      if (this.pointer < this.filteredOptions.length - 1) {\n        this.pointer++\n        /* istanbul ignore next */\n        if (this.$refs.list.scrollTop <= this.pointerPosition - (this.visibleElements - 1) * this.optionHeight) {\n          this.$refs.list.scrollTop = this.pointerPosition - (this.visibleElements - 1) * this.optionHeight\n        }\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[this.pointer].$isLabel &&\n          !this.groupSelect\n        ) this.pointerForward()\n      }\n      this.pointerDirty = true\n    },\n    pointerBackward () {\n      if (this.pointer > 0) {\n        this.pointer--\n        /* istanbul ignore else */\n        if (this.$refs.list.scrollTop >= this.pointerPosition) {\n          this.$refs.list.scrollTop = this.pointerPosition\n        }\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[this.pointer].$isLabel &&\n          !this.groupSelect\n        ) this.pointerBackward()\n      } else {\n        /* istanbul ignore else */\n        if (\n          this.filteredOptions[this.pointer] &&\n          this.filteredOptions[0].$isLabel &&\n          !this.groupSelect\n        ) this.pointerForward()\n      }\n      this.pointerDirty = true\n    },\n    pointerReset () {\n      /* istanbul ignore else */\n      if (!this.closeOnSelect) return\n      this.pointer = 0\n      /* istanbul ignore else */\n      if (this.$refs.list) {\n        this.$refs.list.scrollTop = 0\n      }\n    },\n    pointerAdjust () {\n      /* istanbul ignore else */\n      if (this.pointer >= this.filteredOptions.length - 1) {\n        this.pointer = this.filteredOptions.length\n          ? this.filteredOptions.length - 1\n          : 0\n      }\n\n      if (this.filteredOptions.length > 0 &&\n        this.filteredOptions[this.pointer].$isLabel &&\n        !this.groupSelect\n      ) {\n        this.pointerForward()\n      }\n    },\n    pointerSet (index) {\n      this.pointer = index\n      this.pointerDirty = true\n    }\n  }\n}\n"],"sourceRoot":""}