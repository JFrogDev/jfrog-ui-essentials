{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/jquery-contextmenu/dist/jquery.contextMenu.js"],"names":["__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","__webpack_require__","apply","exports","undefined","module","$","support","htmlMenuitem","window","htmlCommand","eventSelectstart","document","documentElement","ui","widget","_cleanData","cleanData","elems","elem","i","triggerHandler","e","$currentTrigger","initialized","$win","counter","namespaces","menus","types","defaults","selector","appendTo","trigger","autoHide","delay","reposition","determinePosition","$menu","position","css","my","at","of","this","offset","collision","top","outerHeight","left","outerWidth","opt","x","y","bottom","scrollTop","height","right","scrollLeft","width","call","positionSubmenu","zIndex","animation","duration","show","hide","events","noop","callback","items","hoveract","timer","pageX","pageY","zindex","$t","zin","$tt","Math","max","parseInt","parent","length","indexOf","prop","toLowerCase","handle","abortevent","preventDefault","stopImmediatePropagation","contextmenu","$this","data","originalEvent","hasClass","build","built","extend","isEmptyObject","console","error","log","Error","$trigger","op","create","showMenu","item","visible","hasOwnProperty","isFunction","currentTarget","click","Event","mousedown","is","button","mouseup","removeData","mouseenter","$related","relatedTarget","$document","closest","on","mousemove","setTimeout","off","mouseleave","clearTimeout","layerClick","target","root","$window","triggerAction","elementFromPoint","$layer","has","one","contextMenu","keyStop","isInput","stopPropagation","key","keyCode","shiftKey","$selected","find","blur","$parent","itemdata","children","k","String","fromCharCode","toUpperCase","accesskeys","$node","prevItem","$s","$children","$prev","prev","last","$round","itemMouseleave","get","itemMouseenter","$input","focus","nextItem","$next","next","first","focusInput","contextMenuRoot","blurInput","menuMouseenter","hovering","menuMouseleave","itemClick","contextMenuKey","callbacks","Object","prototype","update","inputClick","hideMenu","force","focusItem","addClass","siblings","removeClass","filter","blurItem","layer","pos","remove","each","className","$label","accesskey","ak","aks","splitAccesskey","_name","name","replace","RegExp","type","commands","html","hasTypes","inputs","attr","val","value","selected","prependTo","radio","options","text","icon","_icon","body","resize","nested","display","ceil","minWidth","maxWidth","addBack","$item","disabled","insertBefore","style","t","split","keys","charAt","push","inputLabel","node","id","menuChildren","label","nodeName","clone","fn","operation","$o","context","isPlainObject","o","$context","_hasContext","match","ns","contextmenu:hide.contextMenu","prevcommand.contextMenu","nextcommand.contextMenu","contextmenu.contextMenu","mouseenter.contextMenu","mouseleave.contextMenu","mouseup.contextMenu","contextmenu:focus.contextMenu","contextmenu:blur.contextMenu","$visibleMenu","fromMenu","setInputValues","getInputValues","element"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~7f8fdb14.js","sourcesContent":["/*!\n * jQuery contextMenu v1.8.1 - Plugin for simple contextMenu handling\n *\n * Version: v1.8.1\n *\n * Authors: Björn Brala (SWIS.nl), Rodney Rehm, Addy Osmani (patches for FF)\n * Web: http://swisnl.github.io/jQuery-contextMenu/\n *\n * Copyright (c) 2011-2015 SWIS BV and contributors\n *\n * Licensed under\n *   MIT License http://www.opensource.org/licenses/mit-license\n *   GPL v3 http://opensource.org/licenses/GPL-3.0\n *\n * Date: 2015-09-14T19:40:36.214Z\n */\n\n\n(function (factory) {\n    if (typeof define === 'function' && define.amd) {\n        // AMD. Register as anonymous module.\n        define(['jquery'], factory);\n    } else if (typeof exports === 'object') {\n        // Node / CommonJS\n        factory(require('jquery'));\n    } else {\n        // Browser globals.\n        factory(jQuery);\n    }\n})(function ($) {\n\n    'use strict';\n\n    // TODO: -\n    // ARIA stuff: menuitem, menuitemcheckbox und menuitemradio\n    // create <menu> structure if $.support[htmlCommand || htmlMenuitem] and !opt.disableNative\n\n    // determine html5 compatibility\n    $.support.htmlMenuitem = ('HTMLMenuItemElement' in window);\n    $.support.htmlCommand = ('HTMLCommandElement' in window);\n    $.support.eventSelectstart = ('onselectstart' in document.documentElement);\n    /* // should the need arise, test for css user-select\n     $.support.cssUserSelect = (function(){\n     var t = false,\n     e = document.createElement('div');\n\n     $.each('Moz|Webkit|Khtml|O|ms|Icab|'.split('|'), function(i, prefix) {\n     var propCC = prefix + (prefix ? 'U' : 'u') + 'serSelect',\n     prop = (prefix ? ('-' + prefix.toLowerCase() + '-') : '') + 'user-select';\n\n     e.style.cssText = prop + ': text;';\n     if (e.style[propCC] == 'text') {\n     t = true;\n     return false;\n     }\n\n     return true;\n     });\n\n     return t;\n     })();\n     */\n\n    if (!$.ui || !$.ui.widget) {\n        // duck punch $.cleanData like jQueryUI does to get that remove event\n        // https://github.com/jquery/jquery-ui/blob/master/ui/jquery.ui.widget.js#L16-24\n        var _cleanData = $.cleanData;\n        $.cleanData = function (elems) {\n            for (var i = 0, elem; (elem = elems[i]) != null; i++) {\n                try {\n                    $(elem).triggerHandler('remove');\n                    // http://bugs.jquery.com/ticket/8235\n                } catch (e) {\n                }\n            }\n            _cleanData(elems);\n        };\n    }\n\n    var // currently active contextMenu trigger\n        $currentTrigger = null,\n    // is contextMenu initialized with at least one menu?\n        initialized = false,\n    // window handle\n        $win = $(window),\n    // number of registered menus\n        counter = 0,\n    // mapping selector to namespace\n        namespaces = {},\n    // mapping namespace to options\n        menus = {},\n    // custom command type handlers\n        types = {},\n    // default values\n        defaults = {\n            // selector of contextMenu trigger\n            selector: null,\n            // where to append the menu to\n            appendTo: null,\n            // method to trigger context menu [\"right\", \"left\", \"hover\"]\n            trigger: 'right',\n            // hide menu when mouse leaves trigger / menu elements\n            autoHide: false,\n            // ms to wait before showing a hover-triggered context menu\n            delay: 200,\n            // flag denoting if a second trigger should simply move (true) or rebuild (false) an open menu\n            // as long as the trigger happened on one of the trigger-element's child nodes\n            reposition: true,\n            // determine position to show menu at\n            determinePosition: function ($menu) {\n                // position to the lower middle of the trigger element\n                if ($.ui && $.ui.position) {\n                    // .position() is provided as a jQuery UI utility\n                    // (...and it won't work on hidden elements)\n                    $menu.css('display', 'block').position({\n                        my: 'center top',\n                        at: 'center bottom',\n                        of: this,\n                        offset: '0 5',\n                        collision: 'fit'\n                    }).css('display', 'none');\n                } else {\n                    // determine contextMenu position\n                    var offset = this.offset();\n                    offset.top += this.outerHeight();\n                    offset.left += this.outerWidth() / 2 - $menu.outerWidth() / 2;\n                    $menu.css(offset);\n                }\n            },\n            // position menu\n            position: function (opt, x, y) {\n                var offset;\n                // determine contextMenu position\n                if (!x && !y) {\n                    opt.determinePosition.call(this, opt.$menu);\n                    return;\n                } else if (x === 'maintain' && y === 'maintain') {\n                    // x and y must not be changed (after re-show on command click)\n                    offset = opt.$menu.position();\n                } else {\n                    // x and y are given (by mouse event)\n                    offset = {top: y, left: x};\n                }\n\n                // correct offset if viewport demands it\n                var bottom = $win.scrollTop() + $win.height(),\n                    right = $win.scrollLeft() + $win.width(),\n                    height = opt.$menu.outerHeight(),\n                    width = opt.$menu.outerWidth();\n\n                if (offset.top + height > bottom) {\n                    offset.top -= height;\n                }\n\n                if (offset.top < 0) {\n                    offset.top = 0;\n                }\n\n                if (offset.left + width > right) {\n                    offset.left -= width;\n                }\n\n                opt.$menu.css(offset);\n            },\n            // position the sub-menu\n            positionSubmenu: function ($menu) {\n                if ($.ui && $.ui.position) {\n                    // .position() is provided as a jQuery UI utility\n                    // (...and it won't work on hidden elements)\n                    $menu.css('display', 'block').position({\n                        my: 'left top',\n                        at: 'right top',\n                        of: this,\n                        collision: 'flipfit fit'\n                    }).css('display', '');\n                } else {\n                    // determine contextMenu position\n                    var offset = {\n                        top: 0,\n                        left: this.outerWidth()\n                    };\n                    $menu.css(offset);\n                }\n            },\n            // offset to add to zIndex\n            zIndex: 1,\n            // show hide animation settings\n            animation: {\n                duration: 50,\n                show: 'slideDown',\n                hide: 'slideUp'\n            },\n            // events\n            events: {\n                show: $.noop,\n                hide: $.noop\n            },\n            // default callback\n            callback: null,\n            // list of contextMenu items\n            items: {}\n        },\n    // mouse position for hover activation\n        hoveract = {\n            timer: null,\n            pageX: null,\n            pageY: null\n        },\n    // determine zIndex\n        zindex = function ($t) {\n            var zin = 0,\n                $tt = $t;\n\n            while (true) {\n                zin = Math.max(zin, parseInt($tt.css('z-index'), 10) || 0);\n                $tt = $tt.parent();\n                if (!$tt || !$tt.length || 'html body'.indexOf($tt.prop('nodeName').toLowerCase()) > -1) {\n                    break;\n                }\n            }\n            return zin;\n        },\n    // event handlers\n        handle = {\n            // abort anything\n            abortevent: function (e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            },\n            // contextmenu show dispatcher\n            contextmenu: function (e) {\n                var $this = $(this);\n\n                // disable actual context-menu if we are using the right mouse button as the trigger\n                if (e.data.trigger === 'right') {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                }\n\n                // abort native-triggered events unless we're triggering on right click\n                if ((e.data.trigger !== 'right' && e.data.trigger !== 'demand') && e.originalEvent) {\n                    return;\n                }\n\n                // abort event if menu is visible for this trigger\n                if ($this.hasClass('context-menu-active')) {\n                    return;\n                }\n\n                if (!$this.hasClass('context-menu-disabled')) {\n                    // theoretically need to fire a show event at <menu>\n                    // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#context-menus\n                    // var evt = jQuery.Event(\"show\", { data: data, pageX: e.pageX, pageY: e.pageY, relatedTarget: this });\n                    // e.data.$menu.trigger(evt);\n\n                    $currentTrigger = $this;\n                    if (e.data.build) {\n                        var built = e.data.build($currentTrigger, e);\n                        // abort if build() returned false\n                        if (built === false) {\n                            return;\n                        }\n\n                        // dynamically build menu on invocation\n                        e.data = $.extend(true, {}, defaults, e.data, built || {});\n\n                        // abort if there are no items to display\n                        if (!e.data.items || $.isEmptyObject(e.data.items)) {\n                            // Note: jQuery captures and ignores errors from event handlers\n                            if (window.console) {\n                                (console.error || console.log).call(console, 'No items specified to show in contextMenu');\n                            }\n\n                            throw new Error('No Items specified');\n                        }\n\n                        // backreference for custom command type creation\n                        e.data.$trigger = $currentTrigger;\n\n                        op.create(e.data);\n                    }\n                    var showMenu = false;\n                    for (var item in e.data.items) {\n                        if (e.data.items.hasOwnProperty(item)) {\n                            var visible;\n                            if ($.isFunction(e.data.items[item].visible)) {\n                                visible = e.data.items[item].visible.call($(e.currentTarget), item, e.data);\n                            } else if (typeof item.visible !== 'undefined') {\n                                visible = e.data.items[item].visible === true;\n                            } else {\n                                visible = true;\n                            }\n                            if (visible) {\n                                showMenu = true;\n                            }\n                        }\n                    }\n                    if (showMenu) {\n                        // show menu\n                        op.show.call($this, e.data, e.pageX, e.pageY);\n                    }\n                }\n            },\n            // contextMenu left-click trigger\n            click: function (e) {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n                $(this).trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY}));\n            },\n            // contextMenu right-click trigger\n            mousedown: function (e) {\n                // register mouse down\n                var $this = $(this);\n\n                // hide any previous menus\n                if ($currentTrigger && $currentTrigger.length && !$currentTrigger.is($this)) {\n                    $currentTrigger.data('contextMenu').$menu.trigger('contextmenu:hide');\n                }\n\n                // activate on right click\n                if (e.button === 2) {\n                    $currentTrigger = $this.data('contextMenuActive', true);\n                }\n            },\n            // contextMenu right-click trigger\n            mouseup: function (e) {\n                // show menu\n                var $this = $(this);\n                if ($this.data('contextMenuActive') && $currentTrigger && $currentTrigger.length && $currentTrigger.is($this) && !$this.hasClass('context-menu-disabled')) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    $currentTrigger = $this;\n                    $this.trigger($.Event('contextmenu', {data: e.data, pageX: e.pageX, pageY: e.pageY}));\n                }\n\n                $this.removeData('contextMenuActive');\n            },\n            // contextMenu hover trigger\n            mouseenter: function (e) {\n                var $this = $(this),\n                    $related = $(e.relatedTarget),\n                    $document = $(document);\n\n                // abort if we're coming from a menu\n                if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n                    return;\n                }\n\n                // abort if a menu is shown\n                if ($currentTrigger && $currentTrigger.length) {\n                    return;\n                }\n\n                hoveract.pageX = e.pageX;\n                hoveract.pageY = e.pageY;\n                hoveract.data = e.data;\n                $document.on('mousemove.contextMenuShow', handle.mousemove);\n                hoveract.timer = setTimeout(function () {\n                    hoveract.timer = null;\n                    $document.off('mousemove.contextMenuShow');\n                    $currentTrigger = $this;\n                    $this.trigger($.Event('contextmenu', {\n                        data: hoveract.data,\n                        pageX: hoveract.pageX,\n                        pageY: hoveract.pageY\n                    }));\n                }, e.data.delay);\n            },\n            // contextMenu hover trigger\n            mousemove: function (e) {\n                hoveract.pageX = e.pageX;\n                hoveract.pageY = e.pageY;\n            },\n            // contextMenu hover trigger\n            mouseleave: function (e) {\n                // abort if we're leaving for a menu\n                var $related = $(e.relatedTarget);\n                if ($related.is('.context-menu-list') || $related.closest('.context-menu-list').length) {\n                    return;\n                }\n\n                try {\n                    clearTimeout(hoveract.timer);\n                } catch (e) {\n                }\n\n                hoveract.timer = null;\n            },\n            // click on layer to hide contextMenu\n            layerClick: function (e) {\n                var $this = $(this),\n                    root = $this.data('contextMenuRoot'),\n                    button = e.button,\n                    x = e.pageX,\n                    y = e.pageY,\n                    target,\n                    offset;\n\n                e.preventDefault();\n                e.stopImmediatePropagation();\n\n                setTimeout(function () {\n                    var $window;\n                    var triggerAction = ((root.trigger === 'left' && button === 0) || (root.trigger === 'right' && button === 2));\n\n                    // find the element that would've been clicked, wasn't the layer in the way\n                    if (document.elementFromPoint) {\n                        root.$layer.hide();\n                        target = document.elementFromPoint(x - $win.scrollLeft(), y - $win.scrollTop());\n                        root.$layer.show();\n                    }\n\n                    if (root.reposition && triggerAction) {\n                        if (document.elementFromPoint) {\n                            if (root.$trigger.is(target) || root.$trigger.has(target).length) {\n                                root.position.call(root.$trigger, root, x, y);\n                                return;\n                            }\n                        } else {\n                            offset = root.$trigger.offset();\n                            $window = $(window);\n                            // while this looks kinda awful, it's the best way to avoid\n                            // unnecessarily calculating any positions\n                            offset.top += $window.scrollTop();\n                            if (offset.top <= e.pageY) {\n                                offset.left += $window.scrollLeft();\n                                if (offset.left <= e.pageX) {\n                                    offset.bottom = offset.top + root.$trigger.outerHeight();\n                                    if (offset.bottom >= e.pageY) {\n                                        offset.right = offset.left + root.$trigger.outerWidth();\n                                        if (offset.right >= e.pageX) {\n                                            // reposition\n                                            root.position.call(root.$trigger, root, x, y);\n                                            return;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    if (target && triggerAction) {\n                        root.$trigger.one('contextmenu:hidden', function () {\n                            $(target).contextMenu({x: x, y: y});\n                        });\n                    }\n\n                    root.$menu.trigger('contextmenu:hide');\n                }, 50);\n            },\n            // key handled :hover\n            keyStop: function (e, opt) {\n                if (!opt.isInput) {\n                    e.preventDefault();\n                }\n\n                e.stopPropagation();\n            },\n            key: function (e) {\n\n                var opt = {};\n\n                // Only get the data from $currentTrigger if it exists\n                if ($currentTrigger) {\n                    opt = $currentTrigger.data('contextMenu') || {};\n                }\n\n                switch (e.keyCode) {\n                    case 9:\n                    case 38: // up\n                        handle.keyStop(e, opt);\n                        // if keyCode is [38 (up)] or [9 (tab) with shift]\n                        if (opt.isInput) {\n                            if (e.keyCode === 9 && e.shiftKey) {\n                                e.preventDefault();\n                                opt.$selected && opt.$selected.find('input, textarea, select').blur();\n                                opt.$menu.trigger('prevcommand');\n                                return;\n                            } else if (e.keyCode === 38 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                                // checkboxes don't capture this key\n                                e.preventDefault();\n                                return;\n                            }\n                        } else if (e.keyCode !== 9 || e.shiftKey) {\n                            opt.$menu.trigger('prevcommand');\n                            return;\n                        }\n                    // omitting break;\n                    // case 9: // tab - reached through omitted break;\n                    case 40: // down\n                        handle.keyStop(e, opt);\n                        if (opt.isInput) {\n                            if (e.keyCode === 9) {\n                                e.preventDefault();\n                                opt.$selected && opt.$selected.find('input, textarea, select').blur();\n                                opt.$menu.trigger('nextcommand');\n                                return;\n                            } else if (e.keyCode === 40 && opt.$selected.find('input, textarea, select').prop('type') === 'checkbox') {\n                                // checkboxes don't capture this key\n                                e.preventDefault();\n                                return;\n                            }\n                        } else {\n                            opt.$menu.trigger('nextcommand');\n                            return;\n                        }\n                        break;\n\n                    case 37: // left\n                        handle.keyStop(e, opt);\n                        if (opt.isInput || !opt.$selected || !opt.$selected.length) {\n                            break;\n                        }\n\n                        if (!opt.$selected.parent().hasClass('context-menu-root')) {\n                            var $parent = opt.$selected.parent().parent();\n                            opt.$selected.trigger('contextmenu:blur');\n                            opt.$selected = $parent;\n                            return;\n                        }\n                        break;\n\n                    case 39: // right\n                        handle.keyStop(e, opt);\n                        if (opt.isInput || !opt.$selected || !opt.$selected.length) {\n                            break;\n                        }\n\n                        var itemdata = opt.$selected.data('contextMenu') || {};\n                        if (itemdata.$menu && opt.$selected.hasClass('context-menu-submenu')) {\n                            opt.$selected = null;\n                            itemdata.$selected = null;\n                            itemdata.$menu.trigger('nextcommand');\n                            return;\n                        }\n                        break;\n\n                    case 35: // end\n                    case 36: // home\n                        if (opt.$selected && opt.$selected.find('input, textarea, select').length) {\n                            return;\n                        } else {\n                            (opt.$selected && opt.$selected.parent() || opt.$menu)\n                                .children(':not(.disabled, .not-selectable)')[e.keyCode === 36 ? 'first' : 'last']()\n                                .trigger('contextmenu:focus');\n                            e.preventDefault();\n                            return;\n                        }\n                        break;\n\n                    case 13: // enter\n                        handle.keyStop(e, opt);\n                        if (opt.isInput) {\n                            if (opt.$selected && !opt.$selected.is('textarea, select')) {\n                                e.preventDefault();\n                                return;\n                            }\n                            break;\n                        }\n                        if (typeof opt.$selected !== 'undefined') {\n                            opt.$selected.trigger('mouseup');\n                        }\n                        return;\n\n                    case 32: // space\n                    case 33: // page up\n                    case 34: // page down\n                        // prevent browser from scrolling down while menu is visible\n                        handle.keyStop(e, opt);\n                        return;\n\n                    case 27: // esc\n                        handle.keyStop(e, opt);\n                        opt.$menu.trigger('contextmenu:hide');\n                        return;\n\n                    default: // 0-9, a-z\n                        var k = (String.fromCharCode(e.keyCode)).toUpperCase();\n                        if (opt.accesskeys && opt.accesskeys[k]) {\n                            // according to the specs accesskeys must be invoked immediately\n                            opt.accesskeys[k].$node.trigger(opt.accesskeys[k].$menu ? 'contextmenu:focus' : 'mouseup');\n                            return;\n                        }\n                        break;\n                }\n                // pass event to selected item,\n                // stop propagation to avoid endless recursion\n                e.stopPropagation();\n                if (typeof opt.$selected !== 'undefined') {\n                    opt.$selected.trigger(e);\n                }\n            },\n            // select previous possible command in menu\n            prevItem: function (e) {\n                e.stopPropagation();\n                var opt = $(this).data('contextMenu') || {};\n\n                // obtain currently selected menu\n                if (opt.$selected) {\n                    var $s = opt.$selected;\n                    opt = opt.$selected.parent().data('contextMenu') || {};\n                    opt.$selected = $s;\n                }\n\n                var $children = opt.$menu.children(),\n                    $prev = !opt.$selected || !opt.$selected.prev().length ? $children.last() : opt.$selected.prev(),\n                    $round = $prev;\n\n                // skip disabled\n                while ($prev.hasClass('disabled') || $prev.hasClass('not-selectable')) {\n                    if ($prev.prev().length) {\n                        $prev = $prev.prev();\n                    } else {\n                        $prev = $children.last();\n                    }\n                    if ($prev.is($round)) {\n                        // break endless loop\n                        return;\n                    }\n                }\n\n                // leave current\n                if (opt.$selected) {\n                    handle.itemMouseleave.call(opt.$selected.get(0), e);\n                }\n\n                // activate next\n                handle.itemMouseenter.call($prev.get(0), e);\n\n                // focus input\n                var $input = $prev.find('input, textarea, select');\n                if ($input.length) {\n                    $input.focus();\n                }\n            },\n            // select next possible command in menu\n            nextItem: function (e) {\n                e.stopPropagation();\n                var opt = $(this).data('contextMenu') || {};\n\n                // obtain currently selected menu\n                if (opt.$selected) {\n                    var $s = opt.$selected;\n                    opt = opt.$selected.parent().data('contextMenu') || {};\n                    opt.$selected = $s;\n                }\n\n                var $children = opt.$menu.children(),\n                    $next = !opt.$selected || !opt.$selected.next().length ? $children.first() : opt.$selected.next(),\n                    $round = $next;\n\n                // skip disabled\n                while ($next.hasClass('disabled') || $next.hasClass('not-selectable')) {\n                    if ($next.next().length) {\n                        $next = $next.next();\n                    } else {\n                        $next = $children.first();\n                    }\n                    if ($next.is($round)) {\n                        // break endless loop\n                        return;\n                    }\n                }\n\n                // leave current\n                if (opt.$selected) {\n                    handle.itemMouseleave.call(opt.$selected.get(0), e);\n                }\n\n                // activate next\n                handle.itemMouseenter.call($next.get(0), e);\n\n                // focus input\n                var $input = $next.find('input, textarea, select');\n                if ($input.length) {\n                    $input.focus();\n                }\n            },\n            // flag that we're inside an input so the key handler can act accordingly\n            focusInput: function () {\n                var $this = $(this).closest('.context-menu-item'),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot;\n\n                root.$selected = opt.$selected = $this;\n                root.isInput = opt.isInput = true;\n            },\n            // flag that we're inside an input so the key handler can act accordingly\n            blurInput: function () {\n                var $this = $(this).closest('.context-menu-item'),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot;\n\n                root.isInput = opt.isInput = false;\n            },\n            // :hover on menu\n            menuMouseenter: function () {\n                var root = $(this).data().contextMenuRoot;\n                root.hovering = true;\n            },\n            // :hover on menu\n            menuMouseleave: function (e) {\n                var root = $(this).data().contextMenuRoot;\n                if (root.$layer && root.$layer.is(e.relatedTarget)) {\n                    root.hovering = false;\n                }\n            },\n            // :hover done manually so key handling is possible\n            itemMouseenter: function (e) {\n                var $this = $(this),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot;\n\n                root.hovering = true;\n\n                // abort if we're re-entering\n                if (e && root.$layer && root.$layer.is(e.relatedTarget)) {\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                }\n\n                // make sure only one item is selected\n                (opt.$menu ? opt : root).$menu\n                    .children('.hover').trigger('contextmenu:blur');\n\n                if ($this.hasClass('disabled') || $this.hasClass('not-selectable')) {\n                    opt.$selected = null;\n                    return;\n                }\n\n                $this.trigger('contextmenu:focus');\n            },\n            // :hover done manually so key handling is possible\n            itemMouseleave: function (e) {\n                var $this = $(this),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot;\n\n                if (root !== opt && root.$layer && root.$layer.is(e.relatedTarget)) {\n                    if (typeof root.$selected !== 'undefined') {\n                        root.$selected.trigger('contextmenu:blur');\n                    }\n                    e.preventDefault();\n                    e.stopImmediatePropagation();\n                    root.$selected = opt.$selected = opt.$node;\n                    return;\n                }\n\n                $this.trigger('contextmenu:blur');\n            },\n            // contextMenu item click\n            itemClick: function (e) {\n                var $this = $(this),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot,\n                    key = data.contextMenuKey,\n                    callback;\n\n                // abort if the key is unknown or disabled or is a menu\n                if (!opt.items[key] || $this.is('.disabled, .context-menu-submenu, .context-menu-separator, .not-selectable')) {\n                    return;\n                }\n\n                e.preventDefault();\n                e.stopImmediatePropagation();\n\n                if ($.isFunction(root.callbacks[key]) && Object.prototype.hasOwnProperty.call(root.callbacks, key)) {\n                    // item-specific callback\n                    callback = root.callbacks[key];\n                } else if ($.isFunction(root.callback)) {\n                    // default callback\n                    callback = root.callback;\n                } else {\n                    // no callback, no action\n                    return;\n                }\n\n                // hide menu if callback doesn't stop that\n                if (callback.call(root.$trigger, key, root) !== false) {\n                    root.$menu.trigger('contextmenu:hide');\n                } else if (root.$menu.parent().length) {\n                    op.update.call(root.$trigger, root);\n                }\n            },\n            // ignore click events on input elements\n            inputClick: function (e) {\n                e.stopImmediatePropagation();\n            },\n            // hide <menu>\n            hideMenu: function (e, data) {\n                var root = $(this).data('contextMenuRoot');\n                op.hide.call(root.$trigger, root, data && data.force);\n            },\n            // focus <command>\n            focusItem: function (e) {\n                e.stopPropagation();\n                var $this = $(this),\n                    data = $this.data(),\n                    opt = data.contextMenu,\n                    root = data.contextMenuRoot;\n\n                $this\n                    .addClass('hover visible')\n                    .siblings()\n                    .removeClass('visible')\n                    .filter('.hover')\n                    .trigger('contextmenu:blur');\n\n                // remember selected\n                opt.$selected = root.$selected = $this;\n\n                // position sub-menu - do after show so dumb $.ui.position can keep up\n                if (opt.$node) {\n                    root.positionSubmenu.call(opt.$node, opt.$menu);\n                }\n            },\n            // blur <command>\n            blurItem: function (e) {\n                e.stopPropagation();\n                var $this = $(this),\n                    data = $this.data(),\n                    opt = data.contextMenu;\n\n                if (opt.autoHide) { // for tablets and touch screens this needs to remain\n                    $this.removeClass('visible');\n                }\n                $this.removeClass('hover');\n                opt.$selected = null;\n            }\n        },\n    // operations\n        op = {\n            show: function (opt, x, y) {\n                var $trigger = $(this),\n                    css = {};\n\n                // hide any open menus\n                $('#context-menu-layer').trigger('mousedown');\n\n                // backreference for callbacks\n                opt.$trigger = $trigger;\n\n                // show event\n                if (opt.events.show.call($trigger, opt) === false) {\n                    $currentTrigger = null;\n                    return;\n                }\n\n                // create or update context menu\n                op.update.call($trigger, opt);\n\n                // position menu\n                opt.position.call($trigger, opt, x, y);\n\n                // make sure we're in front\n                if (opt.zIndex) {\n                    css.zIndex = zindex($trigger) + opt.zIndex;\n                }\n\n                // add layer\n                op.layer.call(opt.$menu, opt, css.zIndex);\n\n                // adjust sub-menu zIndexes\n                opt.$menu.find('ul').css('zIndex', css.zIndex + 1);\n\n                // position and show context menu\n                opt.$menu.css(css)[opt.animation.show](opt.animation.duration, function () {\n                    $trigger.trigger('contextmenu:visible');\n                });\n                // make options available and set state\n                $trigger\n                    .data('contextMenu', opt)\n                    .addClass('context-menu-active');\n\n                // register key handler\n                $(document).off('keydown.contextMenu').on('keydown.contextMenu', handle.key);\n                // register autoHide handler\n                if (opt.autoHide) {\n                    // mouse position handler\n                    $(document).on('mousemove.contextMenuAutoHide', function (e) {\n                        // need to capture the offset on mousemove,\n                        // since the page might've been scrolled since activation\n                        var pos = $trigger.offset();\n                        pos.right = pos.left + $trigger.outerWidth();\n                        pos.bottom = pos.top + $trigger.outerHeight();\n\n                        if (opt.$layer && !opt.hovering && (!(e.pageX >= pos.left && e.pageX <= pos.right) || !(e.pageY >= pos.top && e.pageY <= pos.bottom))) {\n                            // if mouse in menu...\n                            opt.$menu.trigger('contextmenu:hide');\n                        }\n                    });\n                }\n            },\n            hide: function (opt, force) {\n                var $trigger = $(this);\n                if (!opt) {\n                    opt = $trigger.data('contextMenu') || {};\n                }\n\n                // hide event\n                if (!force && opt.events && opt.events.hide.call($trigger, opt) === false) {\n                    return;\n                }\n\n                // remove options and revert state\n                $trigger\n                    .removeData('contextMenu')\n                    .removeClass('context-menu-active');\n\n                if (opt.$layer) {\n                    // keep layer for a bit so the contextmenu event can be aborted properly by opera\n                    setTimeout((function ($layer) {\n                        return function () {\n                            $layer.remove();\n                        };\n                    })(opt.$layer), 10);\n\n                    try {\n                        delete opt.$layer;\n                    } catch (e) {\n                        opt.$layer = null;\n                    }\n                }\n\n                // remove handle\n                $currentTrigger = null;\n                // remove selected\n                opt.$menu.find('.hover').trigger('contextmenu:blur');\n                opt.$selected = null;\n                // unregister key and mouse handlers\n                // $(document).off('.contextMenuAutoHide keydown.contextMenu'); // http://bugs.jquery.com/ticket/10705\n                $(document).off('.contextMenuAutoHide').off('keydown.contextMenu');\n                // hide menu\n                opt.$menu && opt.$menu[opt.animation.hide](opt.animation.duration, function () {\n                    // tear down dynamically built menu after animation is completed.\n                    if (opt.build) {\n                        opt.$menu.remove();\n                        $.each(opt, function (key) {\n                            switch (key) {\n                                case 'ns':\n                                case 'selector':\n                                case 'build':\n                                case 'trigger':\n                                    return true;\n\n                                default:\n                                    opt[key] = undefined;\n                                    try {\n                                        delete opt[key];\n                                    } catch (e) {\n                                    }\n                                    return true;\n                            }\n                        });\n                    }\n\n                    setTimeout(function () {\n                        $trigger.trigger('contextmenu:hidden');\n                    }, 10);\n                });\n            },\n            create: function (opt, root) {\n                if (root === undefined) {\n                    root = opt;\n                }\n                // create contextMenu\n                opt.$menu = $('<ul class=\"context-menu-list\"></ul>').addClass(opt.className || '').data({\n                    'contextMenu': opt,\n                    'contextMenuRoot': root\n                });\n\n                $.each(['callbacks', 'commands', 'inputs'], function (i, k) {\n                    opt[k] = {};\n                    if (!root[k]) {\n                        root[k] = {};\n                    }\n                });\n\n                root.accesskeys || (root.accesskeys = {});\n\n                // create contextMenu items\n                $.each(opt.items, function (key, item) {\n                    var $t = $('<li class=\"context-menu-item\"></li>').addClass(item.className || ''),\n                        $label = null,\n                        $input = null;\n\n                    // iOS needs to see a click-event bound to an element to actually\n                    // have the TouchEvents infrastructure trigger the click event\n                    $t.on('click', $.noop);\n\n                    item.$node = $t.data({\n                        'contextMenu': opt,\n                        'contextMenuRoot': root,\n                        'contextMenuKey': key\n                    });\n\n                    // register accesskey\n                    // NOTE: the accesskey attribute should be applicable to any element, but Safari5 and Chrome13 still can't do that\n                    if (typeof item.accesskey !== 'undefined') {\n                        var aks = splitAccesskey(item.accesskey);\n                        for (var i = 0, ak; ak = aks[i]; i++) {\n                            if (!root.accesskeys[ak]) {\n                                root.accesskeys[ak] = item;\n                                item._name = item.name.replace(new RegExp('(' + ak + ')', 'i'), '<span class=\"context-menu-accesskey\">$1</span>');\n                                break;\n                            }\n                        }\n                    }\n\n                    if (typeof item === 'string') {\n                        $t.addClass('context-menu-separator not-selectable');\n                    } else if (item.type && types[item.type]) {\n                        // run custom type handler\n                        types[item.type].call($t, item, opt, root);\n                        // register commands\n                        $.each([opt, root], function (i, k) {\n                            k.commands[key] = item;\n                            if ($.isFunction(item.callback)) {\n                                k.callbacks[key] = item.callback;\n                            }\n                        });\n                    } else {\n                        // add label for input\n                        if (item.type === 'html') {\n                            $t.addClass('context-menu-html not-selectable');\n                        } else if (item.type) {\n                            $label = $('<label></label>').appendTo($t);\n                            $('<span></span>').html(item._name || item.name).appendTo($label);\n                            $t.addClass('context-menu-input');\n                            opt.hasTypes = true;\n                            $.each([opt, root], function (i, k) {\n                                k.commands[key] = item;\n                                k.inputs[key] = item;\n                            });\n                        } else if (item.items) {\n                            item.type = 'sub';\n                        }\n\n                        switch (item.type) {\n                            case 'text':\n                                $input = $('<input type=\"text\" value=\"1\" name=\"\" value=\"\">')\n                                    .attr('name', 'context-menu-input-' + key)\n                                    .val(item.value || '')\n                                    .appendTo($label);\n                                break;\n\n                            case 'textarea':\n                                $input = $('<textarea name=\"\"></textarea>')\n                                    .attr('name', 'context-menu-input-' + key)\n                                    .val(item.value || '')\n                                    .appendTo($label);\n\n                                if (item.height) {\n                                    $input.height(item.height);\n                                }\n                                break;\n\n                            case 'checkbox':\n                                $input = $('<input type=\"checkbox\" value=\"1\" name=\"\" value=\"\">')\n                                    .attr('name', 'context-menu-input-' + key)\n                                    .val(item.value || '')\n                                    .prop('checked', !!item.selected)\n                                    .prependTo($label);\n                                break;\n\n                            case 'radio':\n                                $input = $('<input type=\"radio\" value=\"1\" name=\"\" value=\"\">')\n                                    .attr('name', 'context-menu-input-' + item.radio)\n                                    .val(item.value || '')\n                                    .prop('checked', !!item.selected)\n                                    .prependTo($label);\n                                break;\n\n                            case 'select':\n                                $input = $('<select name=\"\">')\n                                    .attr('name', 'context-menu-input-' + key)\n                                    .appendTo($label);\n                                if (item.options) {\n                                    $.each(item.options, function (value, text) {\n                                        $('<option></option>').val(value).text(text).appendTo($input);\n                                    });\n                                    $input.val(item.selected);\n                                }\n                                break;\n\n                            case 'sub':\n                                $('<span></span>').html(item._name || item.name).appendTo($t);\n                                item.appendTo = item.$node;\n                                op.create(item, root);\n                                $t.data('contextMenu', item).addClass('context-menu-submenu');\n                                item.callback = null;\n                                break;\n\n                            case 'html':\n                                $(item.html).appendTo($t);\n                                break;\n\n                            default:\n                                $.each([opt, root], function (i, k) {\n                                    k.commands[key] = item;\n                                    if ($.isFunction(item.callback)) {\n                                        k.callbacks[key] = item.callback;\n                                    }\n                                });\n                                $('<span></span>').html(item._name || item.name || '').appendTo($t);\n                                break;\n                        }\n\n                        // disable key listener in <input>\n                        if (item.type && item.type !== 'sub' && item.type !== 'html') {\n                            $input\n                                .on('focus', handle.focusInput)\n                                .on('blur', handle.blurInput);\n\n                            if (item.events) {\n                                $input.on(item.events, opt);\n                            }\n                        }\n\n                        // add icons\n                        if (item.icon) {\n                            if ($.isFunction(item.icon)) {\n                                item._icon = item.icon.call(this, $t, key, item);\n                            } else {\n                                item._icon = 'icon icon-' + item.icon;\n                            }\n                            $t.addClass(item._icon);\n                        }\n                    }\n\n                    // cache contained elements\n                    item.$input = $input;\n                    item.$label = $label;\n\n                    // attach item to menu\n                    $t.appendTo(opt.$menu);\n\n                    // Disable text selection\n                    if (!opt.hasTypes && $.support.eventSelectstart) {\n                        // browsers support user-select: none,\n                        // IE has a special event for text-selection\n                        // browsers supporting neither will not be preventing text-selection\n                        $t.on('selectstart.disableTextSelect', handle.abortevent);\n                    }\n                });\n                // attach contextMenu to <body> (to bypass any possible overflow:hidden issues on parents of the trigger element)\n                if (!opt.$node) {\n                    opt.$menu.css('display', 'none').addClass('context-menu-root');\n                }\n                opt.$menu.appendTo(opt.appendTo || document.body);\n            },\n            resize: function ($menu, nested) {\n                // determine widths of submenus, as CSS won't grow them automatically\n                // position:absolute within position:absolute; min-width:100; max-width:200; results in width: 100;\n                // kinda sucks hard...\n\n                // determine width of absolutely positioned element\n                $menu.css({position: 'absolute', display: 'block'});\n                // don't apply yet, because that would break nested elements' widths\n                $menu.data('width', Math.ceil($menu.width()));\n                // reset styles so they allow nested elements to grow/shrink naturally\n                $menu.css({\n                    position: 'static',\n                    minWidth: '0px',\n                    maxWidth: '100000px'\n                });\n                // identify width of nested menus\n                $menu.find('> li > ul').each(function () {\n                    op.resize($(this), true);\n                });\n                // reset and apply changes in the end because nested\n                // elements' widths wouldn't be calculatable otherwise\n                if (!nested) {\n                    $menu.find('ul').addBack().css({\n                        position: '',\n                        display: '',\n                        minWidth: '',\n                        maxWidth: ''\n                    }).width(function () {\n                        return $(this).data('width');\n                    });\n                }\n            },\n            update: function (opt, root) {\n                var $trigger = this;\n                if (root === undefined) {\n                    root = opt;\n                    op.resize(opt.$menu);\n                }\n                // re-check disabled for each item\n                opt.$menu.children().each(function () {\n                    var $item = $(this),\n                        key = $item.data('contextMenuKey'),\n                        item = opt.items[key],\n                        disabled = ($.isFunction(item.disabled) && item.disabled.call($trigger, key, root)) || item.disabled === true,\n                        visible;\n                    if ($.isFunction(item.visible)) {\n                        visible = item.visible.call($trigger, key, root);\n                    } else if (typeof item.visible !== 'undefined') {\n                        visible = item.visible === true;\n                    } else {\n                        visible = true;\n                    }\n                    $item[visible ? 'show' : 'hide']();\n\n                    // dis- / enable item\n                    $item[disabled ? 'addClass' : 'removeClass']('disabled');\n\n                    if ($.isFunction(item.icon)) {\n                        $item.removeClass(item._icon);\n                        item._icon = item.icon.call(this, $trigger, key, item);\n                        $item.addClass(item._icon);\n                    }\n\n                    if (item.type) {\n                        // dis- / enable input elements\n                        $item.find('input, select, textarea').prop('disabled', disabled);\n\n                        // update input states\n                        switch (item.type) {\n                            case 'text':\n                            case 'textarea':\n                                item.$input.val(item.value || '');\n                                break;\n\n                            case 'checkbox':\n                            case 'radio':\n                                item.$input.val(item.value || '').prop('checked', !!item.selected);\n                                break;\n\n                            case 'select':\n                                item.$input.val(item.selected || '');\n                                break;\n                        }\n                    }\n\n                    if (item.$menu) {\n                        // update sub-menu\n                        op.update.call($trigger, item, root);\n                    }\n                });\n            },\n            layer: function (opt, zIndex) {\n                // add transparent layer for click area\n                // filter and background for Internet Explorer, Issue #23\n                var $layer = opt.$layer = $('<div id=\"context-menu-layer\" style=\"position:fixed; z-index:' + zIndex + '; top:0; left:0; opacity: 0; filter: alpha(opacity=0); background-color: #000;\"></div>')\n                    .css({height: $win.height(), width: $win.width(), display: 'block'})\n                    .data('contextMenuRoot', opt)\n                    .insertBefore(this)\n                    .on('contextmenu', handle.abortevent)\n                    .on('mousedown', handle.layerClick);\n\n                // IE6 doesn't know position:fixed;\n                if (document.body.style.maxWidth === undefined) { // IE6 doesn't support maxWidth\n                    $layer.css({\n                        'position': 'absolute',\n                        'height': $(document).height()\n                    });\n                }\n\n                return $layer;\n            }\n        };\n\n// split accesskey according to http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#assigned-access-key\n    function splitAccesskey(val) {\n        var t = val.split(/\\s+/),\n            keys = [];\n\n        for (var i = 0, k; k = t[i]; i++) {\n            k = k.charAt(0).toUpperCase(); // first character only\n            // theoretically non-accessible characters should be ignored, but different systems, different keyboard layouts, ... screw it.\n            // a map to look up already used access keys would be nice\n            keys.push(k);\n        }\n\n        return keys;\n    }\n\n// handle contextMenu triggers\n    $.fn.contextMenu = function (operation) {\n        var $t = this, $o = operation;\n        if (this.length > 0) {  // this is not a build on demand menu\n            if (operation === undefined) {\n                this.first().trigger('contextmenu');\n            } else if (operation.x && operation.y) {\n                this.first().trigger($.Event('contextmenu', {pageX: operation.x, pageY: operation.y}));\n            } else if (operation === 'hide') {\n                var $menu = this.first().data('contextMenu') ? this.first().data('contextMenu').$menu : null;\n                $menu && $menu.trigger('contextmenu:hide');\n            } else if (operation === 'destroy') {\n                $.contextMenu('destroy', {context: this});\n            } else if ($.isPlainObject(operation)) {\n                operation.context = this;\n                $.contextMenu('create', operation);\n            } else if (operation) {\n                this.removeClass('context-menu-disabled');\n            } else if (!operation) {\n                this.addClass('context-menu-disabled');\n            }\n        } else {\n            $.each(menus, function () {\n                if (this.selector === $t.selector) {\n                    $o.data = this;\n\n                    $.extend($o.data, {trigger: 'demand'});\n                }\n            });\n\n            handle.contextmenu.call($o.target, $o);\n        }\n\n        return this;\n    };\n\n// manage contextMenu instances\n    $.contextMenu = function (operation, options) {\n        if (typeof operation !== 'string') {\n            options = operation;\n            operation = 'create';\n        }\n\n        if (typeof options === 'string') {\n            options = {selector: options};\n        } else if (options === undefined) {\n            options = {};\n        }\n\n        // merge with default options\n        var o = $.extend(true, {}, defaults, options || {});\n        var $document = $(document);\n        var $context = $document;\n        var _hasContext = false;\n\n        if (!o.context || !o.context.length) {\n            o.context = document;\n        } else {\n            // you never know what they throw at you...\n            $context = $(o.context).first();\n            o.context = $context.get(0);\n            _hasContext = o.context !== document;\n        }\n\n        switch (operation) {\n            case 'create':\n                // no selector no joy\n                if (!o.selector) {\n                    throw new Error('No selector specified');\n                }\n                // make sure internal classes are not bound to\n                if (o.selector.match(/.context-menu-(list|item|input)($|\\s)/)) {\n                    throw new Error('Cannot bind to selector \"' + o.selector + '\" as it contains a reserved className');\n                }\n                if (!o.build && (!o.items || $.isEmptyObject(o.items))) {\n                    throw new Error('No Items specified');\n                }\n                counter++;\n                o.ns = '.contextMenu' + counter;\n                if (!_hasContext) {\n                    namespaces[o.selector] = o.ns;\n                }\n                menus[o.ns] = o;\n\n                // default to right click\n                if (!o.trigger) {\n                    o.trigger = 'right';\n                }\n\n                if (!initialized) {\n                    // make sure item click is registered first\n                    $document\n                        .on({\n                            'contextmenu:hide.contextMenu': handle.hideMenu,\n                            'prevcommand.contextMenu': handle.prevItem,\n                            'nextcommand.contextMenu': handle.nextItem,\n                            'contextmenu.contextMenu': handle.abortevent,\n                            'mouseenter.contextMenu': handle.menuMouseenter,\n                            'mouseleave.contextMenu': handle.menuMouseleave\n                        }, '.context-menu-list')\n                        .on('mouseup.contextMenu', '.context-menu-input', handle.inputClick)\n                        .on({\n                            'mouseup.contextMenu': handle.itemClick,\n                            'contextmenu:focus.contextMenu': handle.focusItem,\n                            'contextmenu:blur.contextMenu': handle.blurItem,\n                            'contextmenu.contextMenu': handle.abortevent,\n                            'mouseenter.contextMenu': handle.itemMouseenter,\n                            'mouseleave.contextMenu': handle.itemMouseleave\n                        }, '.context-menu-item');\n\n                    initialized = true;\n                }\n\n                // engage native contextmenu event\n                $context\n                    .on('contextmenu' + o.ns, o.selector, o, handle.contextmenu);\n\n                if (_hasContext) {\n                    // add remove hook, just in case\n                    $context.on('remove' + o.ns, function () {\n                        $(this).contextMenu('destroy');\n                    });\n                }\n\n                switch (o.trigger) {\n                    case 'hover':\n                        $context\n                            .on('mouseenter' + o.ns, o.selector, o, handle.mouseenter)\n                            .on('mouseleave' + o.ns, o.selector, o, handle.mouseleave);\n                        break;\n\n                    case 'left':\n                        $context.on('click' + o.ns, o.selector, o, handle.click);\n                        break;\n                    /*\n                     default:\n                     // http://www.quirksmode.org/dom/events/contextmenu.html\n                     $document\n                     .on('mousedown' + o.ns, o.selector, o, handle.mousedown)\n                     .on('mouseup' + o.ns, o.selector, o, handle.mouseup);\n                     break;\n                     */\n                }\n\n                // create menu\n                if (!o.build) {\n                    op.create(o);\n                }\n                break;\n\n            case 'destroy':\n                var $visibleMenu;\n                if (_hasContext) {\n                    // get proper options\n                    var context = o.context;\n                    $.each(menus, function (ns, o) {\n                        if (o.context !== context) {\n                            return true;\n                        }\n\n                        $visibleMenu = $('.context-menu-list').filter(':visible');\n                        if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is($(o.context).find(o.selector))) {\n                            $visibleMenu.trigger('contextmenu:hide', {force: true});\n                        }\n\n                        try {\n                            if (menus[o.ns].$menu) {\n                                menus[o.ns].$menu.remove();\n                            }\n\n                            delete menus[o.ns];\n                        } catch (e) {\n                            menus[o.ns] = null;\n                        }\n\n                        $(o.context).off(o.ns);\n\n                        return true;\n                    });\n                } else if (!o.selector) {\n                    $document.off('.contextMenu .contextMenuAutoHide');\n                    $.each(menus, function (ns, o) {\n                        $(o.context).off(o.ns);\n                    });\n\n                    namespaces = {};\n                    menus = {};\n                    counter = 0;\n                    initialized = false;\n\n                    $('#context-menu-layer, .context-menu-list').remove();\n                } else if (namespaces[o.selector]) {\n                    $visibleMenu = $('.context-menu-list').filter(':visible');\n                    if ($visibleMenu.length && $visibleMenu.data().contextMenuRoot.$trigger.is(o.selector)) {\n                        $visibleMenu.trigger('contextmenu:hide', {force: true});\n                    }\n\n                    try {\n                        if (menus[namespaces[o.selector]].$menu) {\n                            menus[namespaces[o.selector]].$menu.remove();\n                        }\n\n                        delete menus[namespaces[o.selector]];\n                    } catch (e) {\n                        menus[namespaces[o.selector]] = null;\n                    }\n\n                    $document.off(namespaces[o.selector]);\n                }\n                break;\n\n            case 'html5':\n                // if <command> or <menuitem> are not handled by the browser,\n                // or options was a bool true,\n                // initialize $.contextMenu for them\n                if ((!$.support.htmlCommand && !$.support.htmlMenuitem) || (typeof options === 'boolean' && options)) {\n                    $('menu[type=\"context\"]').each(function () {\n                        if (this.id) {\n                            $.contextMenu({\n                                selector: '[contextmenu=' + this.id + ']',\n                                items: $.contextMenu.fromMenu(this)\n                            });\n                        }\n                    }).css('display', 'none');\n                }\n                break;\n\n            default:\n                throw new Error('Unknown operation \"' + operation + '\"');\n        }\n\n        return this;\n    };\n\n// import values into <input> commands\n    $.contextMenu.setInputValues = function (opt, data) {\n        if (data === undefined) {\n            data = {};\n        }\n\n        $.each(opt.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                    item.value = data[key] || '';\n                    break;\n\n                case 'checkbox':\n                    item.selected = data[key] ? true : false;\n                    break;\n\n                case 'radio':\n                    item.selected = (data[item.radio] || '') === item.value;\n                    break;\n\n                case 'select':\n                    item.selected = data[key] || '';\n                    break;\n            }\n        });\n    };\n\n// export values from <input> commands\n    $.contextMenu.getInputValues = function (opt, data) {\n        if (data === undefined) {\n            data = {};\n        }\n\n        $.each(opt.inputs, function (key, item) {\n            switch (item.type) {\n                case 'text':\n                case 'textarea':\n                case 'select':\n                    data[key] = item.$input.val();\n                    break;\n\n                case 'checkbox':\n                    data[key] = item.$input.prop('checked');\n                    break;\n\n                case 'radio':\n                    if (item.$input.prop('checked')) {\n                        data[item.radio] = item.value;\n                    }\n                    break;\n            }\n        });\n\n        return data;\n    };\n\n// find <label for=\"xyz\">\n    function inputLabel(node) {\n        return (node.id && $('label[for=\"' + node.id + '\"]').val()) || node.name;\n    }\n\n// convert <menu> to items object\n    function menuChildren(items, $children, counter) {\n        if (!counter) {\n            counter = 0;\n        }\n\n        $children.each(function () {\n            var $node = $(this),\n                node = this,\n                nodeName = this.nodeName.toLowerCase(),\n                label,\n                item;\n\n            // extract <label><input>\n            if (nodeName === 'label' && $node.find('input, textarea, select').length) {\n                label = $node.text();\n                $node = $node.children().first();\n                node = $node.get(0);\n                nodeName = node.nodeName.toLowerCase();\n            }\n\n            /*\n             * <menu> accepts flow-content as children. that means <embed>, <canvas> and such are valid menu items.\n             * Not being the sadistic kind, $.contextMenu only accepts:\n             * <command>, <menuitem>, <hr>, <span>, <p> <input [text, radio, checkbox]>, <textarea>, <select> and of course <menu>.\n             * Everything else will be imported as an html node, which is not interfaced with contextMenu.\n             */\n\n            // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#concept-command\n            switch (nodeName) {\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/interactive-elements.html#the-menu-element\n                case 'menu':\n                    item = {name: $node.attr('label'), items: {}};\n                    counter = menuChildren(item.items, $node.children(), counter);\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-a-element-to-define-a-command\n                case 'a':\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-button-element-to-define-a-command\n                case 'button':\n                    item = {\n                        name: $node.text(),\n                        disabled: !!$node.attr('disabled'),\n                        callback: (function () {\n                            return function () {\n                                $node.click();\n                            };\n                        })()\n                    };\n                    break;\n\n                // http://www.whatwg.org/specs/web-apps/current-work/multipage/commands.html#using-the-command-element-to-define-a-command\n\n                case 'menuitem':\n                case 'command':\n                    switch ($node.attr('type')) {\n                        case undefined:\n                        case 'command':\n                        case 'menuitem':\n                            item = {\n                                name: $node.attr('label'),\n                                disabled: !!$node.attr('disabled'),\n                                icon: $node.attr('icon'),\n                                callback: (function () {\n                                    return function () {\n                                        $node.click();\n                                    };\n                                })()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                disabled: !!$node.attr('disabled'),\n                                name: $node.attr('label'),\n                                radio: $node.attr('radiogroup'),\n                                value: $node.attr('id'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                    }\n                    break;\n\n                case 'hr':\n                    item = '-------';\n                    break;\n\n                case 'input':\n                    switch ($node.attr('type')) {\n                        case 'text':\n                            item = {\n                                type: 'text',\n                                name: label || inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                value: $node.val()\n                            };\n                            break;\n\n                        case 'checkbox':\n                            item = {\n                                type: 'checkbox',\n                                name: label || inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        case 'radio':\n                            item = {\n                                type: 'radio',\n                                name: label || inputLabel(node),\n                                disabled: !!$node.attr('disabled'),\n                                radio: !!$node.attr('name'),\n                                value: $node.val(),\n                                selected: !!$node.attr('checked')\n                            };\n                            break;\n\n                        default:\n                            item = undefined;\n                            break;\n                    }\n                    break;\n\n                case 'select':\n                    item = {\n                        type: 'select',\n                        name: label || inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        selected: $node.val(),\n                        options: {}\n                    };\n                    $node.children().each(function () {\n                        item.options[this.value] = $(this).text();\n                    });\n                    break;\n\n                case 'textarea':\n                    item = {\n                        type: 'textarea',\n                        name: label || inputLabel(node),\n                        disabled: !!$node.attr('disabled'),\n                        value: $node.val()\n                    };\n                    break;\n\n                case 'label':\n                    break;\n\n                default:\n                    item = {type: 'html', html: $node.clone(true)};\n                    break;\n            }\n\n            if (item) {\n                counter++;\n                items['key' + counter] = item;\n            }\n        });\n\n        return counter;\n    }\n\n// convert html5 menu\n    $.contextMenu.fromMenu = function (element) {\n        var $this = $(element),\n            items = {};\n\n        menuChildren(items, $this.children());\n\n        return items;\n    };\n\n// make defaults accessible\n    $.contextMenu.defaults = defaults;\n    $.contextMenu.types = types;\n// export internal functions - undocumented, for hacking only!\n    $.contextMenu.handle = handle;\n    $.contextMenu.op = op;\n    $.contextMenu.menus = menus;\n\n\n});\n"],"sourceRoot":""}