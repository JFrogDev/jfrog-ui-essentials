{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/utils/plugins.js","webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/utils/pluck-props.js","webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/utils/observe-dom.js"],"names":["exports","__esModule","vueUse","registerDirectives","registerDirective","registerComponents","registerComponent","registerPlugins","installFactory","_config","__webpack_require__","_env","_ref","components","directives","plugins","install","Vue","config","arguments","length","undefined","installed","setConfig","plugin","use","name","def","component","directive","VuePlugin","hasWindowSupport","window","default","_identity","_interopRequireDefault","_inspect","_object","obj","pluckProps","keysToPluck","objToPluck","transformFn","isArray","slice","keys","reduce","memo","prop","_default","_dom","_warn","_objectSpread","target","i","source","ownKeys","Object","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","observeDom","el","callback","opts","$el","isElement","warnNoMutationObserverSupport","obs","MutationObs","mutations","changed","mutation","type","nodeType","Node","TEXT_NODE","addedNodes","removedNodes","observe","childList","subtree"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~8c9d0056.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.vueUse = exports.registerDirectives = exports.registerDirective = exports.registerComponents = exports.registerComponent = exports.registerPlugins = exports.installFactory = void 0;\n\nvar _config = require(\"./config\");\n\nvar _env = require(\"./env\");\n\n/**\n * Plugin install factory function.\n * @param {object} { components, directives }\n * @returns {function} plugin install function\n */\nvar installFactory = function installFactory(_ref) {\n  var components = _ref.components,\n      directives = _ref.directives,\n      plugins = _ref.plugins;\n\n  var install = function install(Vue) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (install.installed) {\n      /* istanbul ignore next */\n      return;\n    }\n\n    install.installed = true;\n    (0, _config.setConfig)(config);\n    registerComponents(Vue, components);\n    registerDirectives(Vue, directives);\n    registerPlugins(Vue, plugins);\n  };\n\n  install.installed = false;\n  return install;\n};\n/**\n * Load a group of plugins.\n * @param {object} Vue\n * @param {object} Plugin definitions\n */\n\n\nexports.installFactory = installFactory;\n\nvar registerPlugins = function registerPlugins(Vue) {\n  var plugins = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  for (var plugin in plugins) {\n    if (plugin && plugins[plugin]) {\n      Vue.use(plugins[plugin]);\n    }\n  }\n};\n/**\n * Load a component.\n * @param {object} Vue\n * @param {string} Component name\n * @param {object} Component definition\n */\n\n\nexports.registerPlugins = registerPlugins;\n\nvar registerComponent = function registerComponent(Vue, name, def) {\n  if (Vue && name && def) {\n    Vue.component(name, def);\n  }\n};\n/**\n * Load a group of components.\n * @param {object} Vue\n * @param {object} Object of component definitions\n */\n\n\nexports.registerComponent = registerComponent;\n\nvar registerComponents = function registerComponents(Vue) {\n  var components = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  for (var component in components) {\n    registerComponent(Vue, component, components[component]);\n  }\n};\n/**\n * Load a directive.\n * @param {object} Vue\n * @param {string} Directive name\n * @param {object} Directive definition\n */\n\n\nexports.registerComponents = registerComponents;\n\nvar registerDirective = function registerDirective(Vue, name, def) {\n  if (Vue && name && def) {\n    Vue.directive(name, def);\n  }\n};\n/**\n * Load a group of directives.\n * @param {object} Vue\n * @param {object} Object of directive definitions\n */\n\n\nexports.registerDirective = registerDirective;\n\nvar registerDirectives = function registerDirectives(Vue) {\n  var directives = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  for (var directive in directives) {\n    registerDirective(Vue, directive, directives[directive]);\n  }\n};\n/**\n * Install plugin if window.Vue available\n * @param {object} Plugin definition\n */\n\n\nexports.registerDirectives = registerDirectives;\n\nvar vueUse = function vueUse(VuePlugin) {\n  /* istanbul ignore next */\n  if (_env.hasWindowSupport && window.Vue) {\n    window.Vue.use(VuePlugin);\n  }\n};\n\nexports.vueUse = vueUse;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _identity = _interopRequireDefault(require(\"./identity\"));\n\nvar _inspect = require(\"./inspect\");\n\nvar _object = require(\"./object\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Given an array of properties or an object of property keys,\n * plucks all the values off the target object, returning a new object\n * that has props that reference the original prop values\n *\n * @param {{}|string[]} keysToPluck\n * @param {{}} objToPluck\n * @param {Function} transformFn\n * @return {{}}\n */\nvar pluckProps = function pluckProps(keysToPluck, objToPluck) {\n  var transformFn = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _identity.default;\n  return ((0, _inspect.isArray)(keysToPluck) ? keysToPluck.slice() : (0, _object.keys)(keysToPluck)).reduce(function (memo, prop) {\n    memo[transformFn(prop)] = objToPluck[prop];\n    return memo;\n  }, {});\n};\n\nvar _default = pluckProps;\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _dom = require(\"./dom\");\n\nvar _warn = require(\"./warn\");\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Observe a DOM element changes, falls back to eventListener mode\n * @param {Element} el The DOM element to observe\n * @param {Function} callback callback to be called on change\n * @param {object} [opts={childList: true, subtree: true}] observe options\n * @see http://stackoverflow.com/questions/3219758\n */\nvar observeDom = function observeDom(el, callback, opts)\n/* istanbul ignore next: difficult to test in JSDOM */\n{\n  // Handle cases where we might be passed a Vue instance\n  el = el ? el.$el || el : null; // Early exit when we have no element\n\n  /* istanbul ignore next: difficult to test in JSDOM */\n\n  if (!(0, _dom.isElement)(el)) {\n    return null;\n  } // Exit and throw a warning when `MutationObserver` isn't available\n\n\n  if ((0, _warn.warnNoMutationObserverSupport)('observeDom')) {\n    return null;\n  } // Define a new observer\n\n\n  var obs = new _dom.MutationObs(function (mutations) {\n    var changed = false; // A mutation can contain several change records, so we loop\n    // through them to see what has changed\n    // We break out of the loop early if any \"significant\" change\n    // has been detected\n\n    for (var i = 0; i < mutations.length && !changed; i++) {\n      // The mutation record\n      var mutation = mutations[i]; // Mutation type\n\n      var type = mutation.type; // DOM node (could be any DOM node type - HTMLElement, Text, comment, etc.)\n\n      var target = mutation.target; // Detect whether a change happened based on type and target\n\n      if (type === 'characterData' && target.nodeType === Node.TEXT_NODE) {\n        // We ignore nodes that are not TEXT (i.e. comments, etc)\n        // as they don't change layout\n        changed = true;\n      } else if (type === 'attributes') {\n        changed = true;\n      } else if (type === 'childList' && (mutation.addedNodes.length > 0 || mutation.removedNodes.length > 0)) {\n        // This includes HTMLElement and text nodes being\n        // added/removed/re-arranged\n        changed = true;\n      }\n    } // We only call the callback if a change that could affect\n    // layout/size truely happened\n\n\n    if (changed) {\n      callback();\n    }\n  }); // Have the observer observe foo for changes in children, etc\n\n  obs.observe(el, _objectSpread({\n    childList: true,\n    subtree: true\n  }, opts)); // We return a reference to the observer so that `obs.disconnect()`\n  // can be called if necessary\n  // To reduce overhead when the root element is hidden\n\n  return obs;\n};\n\nvar _default = observeDom;\nexports.default = _default;"],"sourceRoot":""}