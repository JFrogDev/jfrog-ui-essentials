{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/htmlparser2/lib/FeedHandler.js","webpack://jfrog-ui-essentials/./node_modules/htmlparser2/lib/CollectingHandler.js"],"names":["DomHandler","__webpack_require__","DomUtils","FeedHandler","callback","options","this","init","getElements","what","where","getElementsByTagName","getOneElement","fetch","recurse","getText","trim","addConditionally","obj","prop","tmp","prototype","isValidFeed","value","onend","childs","feed","feedRoot","dom","name","children","type","attribs","href","link","updated","Date","items","map","item","entry","description","pubDate","substr","id","_handleCallback","call","Error","module","exports","CollectingHandler","cbs","_cbs","events","EVENTS","Object","keys","forEach","push","a","b","onreset","restart","i","len","length","num"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~2b61847a.js","sourcesContent":["var DomHandler = require(\"domhandler\");\nvar DomUtils = require(\"domutils\");\n\n//TODO: make this a streamable handler\nfunction FeedHandler(callback, options) {\n    this.init(callback, options);\n}\n\nrequire(\"inherits\")(FeedHandler, DomHandler);\n\nFeedHandler.prototype.init = DomHandler;\n\nfunction getElements(what, where) {\n    return DomUtils.getElementsByTagName(what, where, true);\n}\nfunction getOneElement(what, where) {\n    return DomUtils.getElementsByTagName(what, where, true, 1)[0];\n}\nfunction fetch(what, where, recurse) {\n    return DomUtils.getText(\n        DomUtils.getElementsByTagName(what, where, recurse, 1)\n    ).trim();\n}\n\nfunction addConditionally(obj, prop, what, where, recurse) {\n    var tmp = fetch(what, where, recurse);\n    if (tmp) obj[prop] = tmp;\n}\n\nvar isValidFeed = function(value) {\n    return value === \"rss\" || value === \"feed\" || value === \"rdf:RDF\";\n};\n\nFeedHandler.prototype.onend = function() {\n    var feed = {},\n        feedRoot = getOneElement(isValidFeed, this.dom),\n        tmp,\n        childs;\n\n    if (feedRoot) {\n        if (feedRoot.name === \"feed\") {\n            childs = feedRoot.children;\n\n            feed.type = \"atom\";\n            addConditionally(feed, \"id\", \"id\", childs);\n            addConditionally(feed, \"title\", \"title\", childs);\n            if (\n                (tmp = getOneElement(\"link\", childs)) &&\n                (tmp = tmp.attribs) &&\n                (tmp = tmp.href)\n            )\n                feed.link = tmp;\n            addConditionally(feed, \"description\", \"subtitle\", childs);\n            if ((tmp = fetch(\"updated\", childs))) feed.updated = new Date(tmp);\n            addConditionally(feed, \"author\", \"email\", childs, true);\n\n            feed.items = getElements(\"entry\", childs).map(function(item) {\n                var entry = {},\n                    tmp;\n\n                item = item.children;\n\n                addConditionally(entry, \"id\", \"id\", item);\n                addConditionally(entry, \"title\", \"title\", item);\n                if (\n                    (tmp = getOneElement(\"link\", item)) &&\n                    (tmp = tmp.attribs) &&\n                    (tmp = tmp.href)\n                )\n                    entry.link = tmp;\n                if ((tmp = fetch(\"summary\", item) || fetch(\"content\", item)))\n                    entry.description = tmp;\n                if ((tmp = fetch(\"updated\", item)))\n                    entry.pubDate = new Date(tmp);\n                return entry;\n            });\n        } else {\n            childs = getOneElement(\"channel\", feedRoot.children).children;\n\n            feed.type = feedRoot.name.substr(0, 3);\n            feed.id = \"\";\n            addConditionally(feed, \"title\", \"title\", childs);\n            addConditionally(feed, \"link\", \"link\", childs);\n            addConditionally(feed, \"description\", \"description\", childs);\n            if ((tmp = fetch(\"lastBuildDate\", childs)))\n                feed.updated = new Date(tmp);\n            addConditionally(feed, \"author\", \"managingEditor\", childs, true);\n\n            feed.items = getElements(\"item\", feedRoot.children).map(function(\n                item\n            ) {\n                var entry = {},\n                    tmp;\n\n                item = item.children;\n\n                addConditionally(entry, \"id\", \"guid\", item);\n                addConditionally(entry, \"title\", \"title\", item);\n                addConditionally(entry, \"link\", \"link\", item);\n                addConditionally(entry, \"description\", \"description\", item);\n                if ((tmp = fetch(\"pubDate\", item)))\n                    entry.pubDate = new Date(tmp);\n                return entry;\n            });\n        }\n    }\n    this.dom = feed;\n    DomHandler.prototype._handleCallback.call(\n        this,\n        feedRoot ? null : Error(\"couldn't find root of feed\")\n    );\n};\n\nmodule.exports = FeedHandler;\n","module.exports = CollectingHandler;\n\nfunction CollectingHandler(cbs) {\n    this._cbs = cbs || {};\n    this.events = [];\n}\n\nvar EVENTS = require(\"./\").EVENTS;\nObject.keys(EVENTS).forEach(function(name) {\n    if (EVENTS[name] === 0) {\n        name = \"on\" + name;\n        CollectingHandler.prototype[name] = function() {\n            this.events.push([name]);\n            if (this._cbs[name]) this._cbs[name]();\n        };\n    } else if (EVENTS[name] === 1) {\n        name = \"on\" + name;\n        CollectingHandler.prototype[name] = function(a) {\n            this.events.push([name, a]);\n            if (this._cbs[name]) this._cbs[name](a);\n        };\n    } else if (EVENTS[name] === 2) {\n        name = \"on\" + name;\n        CollectingHandler.prototype[name] = function(a, b) {\n            this.events.push([name, a, b]);\n            if (this._cbs[name]) this._cbs[name](a, b);\n        };\n    } else {\n        throw Error(\"wrong number of arguments\");\n    }\n});\n\nCollectingHandler.prototype.onreset = function() {\n    this.events = [];\n    if (this._cbs.onreset) this._cbs.onreset();\n};\n\nCollectingHandler.prototype.restart = function() {\n    if (this._cbs.onreset) this._cbs.onreset();\n\n    for (var i = 0, len = this.events.length; i < len; i++) {\n        if (this._cbs[this.events[i][0]]) {\n            var num = this.events[i].length;\n\n            if (num === 1) {\n                this._cbs[this.events[i][0]]();\n            } else if (num === 2) {\n                this._cbs[this.events[i][0]](this.events[i][1]);\n            } else {\n                this._cbs[this.events[i][0]](\n                    this.events[i][1],\n                    this.events[i][2]\n                );\n            }\n        }\n    }\n};\n"],"sourceRoot":""}