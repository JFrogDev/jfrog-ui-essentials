{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/components/image/img.js"],"names":["exports","__esModule","default","props","_vue","_interopRequireDefault","__webpack_require__","_vueFunctionalDataMerge","_config","_inspect","obj","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","NAME","BLANK_TEMPLATE","src","type","String","alt","width","Number","height","block","Boolean","fluid","fluidGrow","rounded","thumbnail","left","right","center","blank","blankColor","getComponentConfig","makeBlankImgSrc","color","encodeURIComponent","replace","concat","_default2","extend","name","functional","render","h","_ref","_class","data","parseInt","align","mergeData","attrs","class","img-thumbnail","img-fluid","w-100","isString"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~c029aa1b.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.props = void 0;\n\nvar _vue = _interopRequireDefault(require(\"../../utils/vue\"));\n\nvar _vueFunctionalDataMerge = require(\"vue-functional-data-merge\");\n\nvar _config = require(\"../../utils/config\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// --- Constants --\nvar NAME = 'BImg'; // Blank image with fill template\n\nvar BLANK_TEMPLATE = '<svg width=\"%{w}\" height=\"%{h}\" ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'viewBox=\"0 0 %{w} %{h}\" preserveAspectRatio=\"none\">' + '<rect width=\"100%\" height=\"100%\" style=\"fill:%{f};\"></rect>' + '</svg>';\nvar props = {\n  src: {\n    type: String,\n    default: null\n  },\n  alt: {\n    type: String,\n    default: null\n  },\n  width: {\n    type: [Number, String],\n    default: null\n  },\n  height: {\n    type: [Number, String],\n    default: null\n  },\n  block: {\n    type: Boolean,\n    default: false\n  },\n  fluid: {\n    type: Boolean,\n    default: false\n  },\n  fluidGrow: {\n    // Gives fluid images class `w-100` to make them grow to fit container\n    type: Boolean,\n    default: false\n  },\n  rounded: {\n    // rounded can be:\n    //   false: no rounding of corners\n    //   true: slightly rounded corners\n    //   'top': top corners rounded\n    //   'right': right corners rounded\n    //   'bottom': bottom corners rounded\n    //   'left': left corners rounded\n    //   'circle': circle/oval\n    //   '0': force rounding off\n    type: [Boolean, String],\n    default: false\n  },\n  thumbnail: {\n    type: Boolean,\n    default: false\n  },\n  left: {\n    type: Boolean,\n    default: false\n  },\n  right: {\n    type: Boolean,\n    default: false\n  },\n  center: {\n    type: Boolean,\n    default: false\n  },\n  blank: {\n    type: Boolean,\n    default: false\n  },\n  blankColor: {\n    type: String,\n    default: function _default() {\n      return String((0, _config.getComponentConfig)(NAME, 'blankColor'));\n    }\n  } // --- Helper methods ---\n\n};\nexports.props = props;\n\nfunction makeBlankImgSrc(width, height, color) {\n  var src = encodeURIComponent(BLANK_TEMPLATE.replace('%{w}', String(width)).replace('%{h}', String(height)).replace('%{f}', color));\n  return \"data:image/svg+xml;charset=UTF-8,\".concat(src);\n} // @vue/component\n\n\nvar _default2 = _vue.default.extend({\n  name: 'BImg',\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class;\n\n    var props = _ref.props,\n        data = _ref.data;\n    var src = props.src;\n    var width = parseInt(props.width, 10) ? parseInt(props.width, 10) : null;\n    var height = parseInt(props.height, 10) ? parseInt(props.height, 10) : null;\n    var align = null;\n    var block = props.block;\n\n    if (props.blank) {\n      if (!height && Boolean(width)) {\n        height = width;\n      } else if (!width && Boolean(height)) {\n        width = height;\n      }\n\n      if (!width && !height) {\n        width = 1;\n        height = 1;\n      } // Make a blank SVG image\n\n\n      src = makeBlankImgSrc(width, height, props.blankColor || 'transparent');\n    }\n\n    if (props.left) {\n      align = 'float-left';\n    } else if (props.right) {\n      align = 'float-right';\n    } else if (props.center) {\n      align = 'mx-auto';\n      block = true;\n    }\n\n    return h('img', (0, _vueFunctionalDataMerge.mergeData)(data, {\n      attrs: {\n        src: src,\n        alt: props.alt,\n        width: width ? String(width) : null,\n        height: height ? String(height) : null\n      },\n      class: (_class = {\n        'img-thumbnail': props.thumbnail,\n        'img-fluid': props.fluid || props.fluidGrow,\n        'w-100': props.fluidGrow,\n        rounded: props.rounded === '' || props.rounded === true\n      }, _defineProperty(_class, \"rounded-\".concat(props.rounded), (0, _inspect.isString)(props.rounded) && props.rounded !== ''), _defineProperty(_class, align, Boolean(align)), _defineProperty(_class, 'd-block', block), _class)\n    }));\n  }\n});\n\nexports.default = _default2;"],"sourceRoot":""}