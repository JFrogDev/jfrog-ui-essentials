{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/components/button/button-close.js","webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/components/button/button.js"],"names":["exports","__esModule","default","_vue","_interopRequireDefault","__webpack_require__","_vueFunctionalDataMerge","_config","obj","_defineProperty","key","value","Object","defineProperty","enumerable","configurable","writable","NAME","props","disabled","type","Boolean","ariaLabel","String","getComponentConfig","textVariant","_default2","extend","name","functional","render","h","_ref","data","slots","listeners","componentData","staticClass","class","concat","attrs","aria-label","on","click","e","Event","stopPropagation","preventDefault","domProps","innerHTML","mergeData","_pluckProps","_array","_dom","_inspect","_object","_link","_interopRequireWildcard","newObj","prototype","hasOwnProperty","call","desc","getOwnPropertyDescriptor","get","set","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","filter","sym","forEach","btnProps","block","size","variant","tag","pressed","linkProps","propsFactory","href","to","linkPropKeys","handleFocus","evt","addClass","removeClass","isLink","toLowerCase","isToggle","isBoolean","isButton","isNonStandardTag","computeClass","computeLinkProps","computeAttrs","button","link","toggle","nonStdTag","role","tabindex","aria-disabled","aria-pressed","autocomplete","_ref2","children","fn","isFunction","focusin","focusout"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~646aaa93.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"../../utils/vue\"));\n\nvar _vueFunctionalDataMerge = require(\"vue-functional-data-merge\");\n\nvar _config = require(\"../../utils/config\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar NAME = 'BButtonClose';\nvar props = {\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  ariaLabel: {\n    type: String,\n    default: function _default() {\n      return String((0, _config.getComponentConfig)(NAME, 'ariaLabel'));\n    }\n  },\n  textVariant: {\n    type: String,\n    default: function _default() {\n      return String((0, _config.getComponentConfig)(NAME, 'textVariant') || '') || null;\n    }\n  } // @vue/component\n\n};\n\nvar _default2 = _vue.default.extend({\n  name: NAME,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        listeners = _ref.listeners,\n        slots = _ref.slots;\n    var componentData = {\n      staticClass: 'close',\n      class: _defineProperty({}, \"text-\".concat(props.textVariant), props.textVariant),\n      attrs: {\n        type: 'button',\n        disabled: props.disabled,\n        'aria-label': props.ariaLabel ? String(props.ariaLabel) : null\n      },\n      on: {\n        click: function click(e) {\n          // Ensure click on button HTML content is also disabled\n\n          /* istanbul ignore if: bug in JSDOM still emits click on inner element */\n          if (props.disabled && e instanceof Event) {\n            e.stopPropagation();\n            e.preventDefault();\n          }\n        }\n      } // Careful not to override the default slot with innerHTML\n\n    };\n\n    if (!slots().default) {\n      componentData.domProps = {\n        innerHTML: '&times;'\n      };\n    }\n\n    return h('button', (0, _vueFunctionalDataMerge.mergeData)(data, componentData), slots().default);\n  }\n});\n\nexports.default = _default2;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.props = void 0;\n\nvar _vue = _interopRequireDefault(require(\"../../utils/vue\"));\n\nvar _vueFunctionalDataMerge = require(\"vue-functional-data-merge\");\n\nvar _pluckProps = _interopRequireDefault(require(\"../../utils/pluck-props\"));\n\nvar _array = require(\"../../utils/array\");\n\nvar _config = require(\"../../utils/config\");\n\nvar _dom = require(\"../../utils/dom\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _link = _interopRequireWildcard(require(\"../link/link\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// --- Constants --\nvar NAME = 'BButton';\nvar btnProps = {\n  block: {\n    type: Boolean,\n    default: false\n  },\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  size: {\n    type: String,\n    default: null\n  },\n  variant: {\n    type: String,\n    default: function _default() {\n      return String((0, _config.getComponentConfig)(NAME, 'variant'));\n    }\n  },\n  type: {\n    type: String,\n    default: 'button'\n  },\n  tag: {\n    type: String,\n    default: 'button'\n  },\n  pressed: {\n    // tri-state prop: true, false or null\n    // => on, off, not a toggle\n    type: Boolean,\n    default: null\n  }\n};\nvar linkProps = (0, _link.propsFactory)();\ndelete linkProps.href.default;\ndelete linkProps.to.default;\nvar linkPropKeys = (0, _object.keys)(linkProps);\n\nvar props = _objectSpread({}, linkProps, btnProps); // --- Helper methods ---\n// Focus handler for toggle buttons.  Needs class of 'focus' when focused.\n\n\nexports.props = props;\n\nvar handleFocus = function handleFocus(evt) {\n  if (evt.type === 'focusin') {\n    (0, _dom.addClass)(evt.target, 'focus');\n  } else if (evt.type === 'focusout') {\n    (0, _dom.removeClass)(evt.target, 'focus');\n  }\n}; // Is the requested button a link?\n\n\nvar isLink = function isLink(props) {\n  // If tag prop is set to `a`, we use a b-link to get proper disabled handling\n  return Boolean(props.href || props.to || props.tag && String(props.tag).toLowerCase() === 'a');\n}; // Is the button to be a toggle button?\n\n\nvar isToggle = function isToggle(props) {\n  return (0, _inspect.isBoolean)(props.pressed);\n}; // Is the button \"really\" a button?\n\n\nvar isButton = function isButton(props) {\n  if (isLink(props)) {\n    return false;\n  } else if (props.tag && String(props.tag).toLowerCase() !== 'button') {\n    return false;\n  }\n\n  return true;\n}; // Is the requested tag not a button or link?\n\n\nvar isNonStandardTag = function isNonStandardTag(props) {\n  return !isLink(props) && !isButton(props);\n}; // Compute required classes (non static classes)\n\n\nvar computeClass = function computeClass(props) {\n  var _ref;\n\n  return [\"btn-\".concat(props.variant || (0, _config.getComponentConfig)(NAME, 'variant')), (_ref = {}, _defineProperty(_ref, \"btn-\".concat(props.size), Boolean(props.size)), _defineProperty(_ref, 'btn-block', props.block), _defineProperty(_ref, \"disabled\", props.disabled), _defineProperty(_ref, \"active\", props.pressed), _ref)];\n}; // Compute the link props to pass to b-link (if required)\n\n\nvar computeLinkProps = function computeLinkProps(props) {\n  return isLink(props) ? (0, _pluckProps.default)(linkPropKeys, props) : null;\n}; // Compute the attributes for a button\n\n\nvar computeAttrs = function computeAttrs(props, data) {\n  var button = isButton(props);\n  var link = isLink(props);\n  var toggle = isToggle(props);\n  var nonStdTag = isNonStandardTag(props);\n  var role = data.attrs && data.attrs['role'] ? data.attrs['role'] : null;\n  var tabindex = data.attrs ? data.attrs['tabindex'] : null;\n\n  if (nonStdTag) {\n    tabindex = '0';\n  }\n\n  return {\n    // Type only used for \"real\" buttons\n    type: button && !link ? props.type : null,\n    // Disabled only set on \"real\" buttons\n    disabled: button ? props.disabled : null,\n    // We add a role of button when the tag is not a link or button for ARIA.\n    // Don't bork any role provided in data.attrs when isLink or isButton\n    role: nonStdTag ? 'button' : role,\n    // We set the aria-disabled state for non-standard tags\n    'aria-disabled': nonStdTag ? String(props.disabled) : null,\n    // For toggles, we need to set the pressed state for ARIA\n    'aria-pressed': toggle ? String(props.pressed) : null,\n    // autocomplete off is needed in toggle mode to prevent some browsers from\n    // remembering the previous setting when using the back button.\n    autocomplete: toggle ? 'off' : null,\n    // Tab index is used when the component is not a button.\n    // Links are tabbable, but don't allow disabled, while non buttons or links\n    // are not tabbable, so we mimic that functionality by disabling tabbing\n    // when disabled, and adding a tabindex of '0' to non buttons or non links.\n    tabindex: props.disabled && !button ? '-1' : tabindex\n  };\n}; // @vue/component\n\n\nvar _default2 = _vue.default.extend({\n  name: NAME,\n  functional: true,\n  props: props,\n  render: function render(h, _ref2) {\n    var props = _ref2.props,\n        data = _ref2.data,\n        listeners = _ref2.listeners,\n        children = _ref2.children;\n    var toggle = isToggle(props);\n    var link = isLink(props);\n    var on = {\n      click: function click(e) {\n        /* istanbul ignore if: blink/button disabled should handle this */\n        if (props.disabled && e instanceof Event) {\n          e.stopPropagation();\n          e.preventDefault();\n        } else if (toggle && listeners && listeners['update:pressed']) {\n          // Send .sync updates to any \"pressed\" prop (if .sync listeners)\n          // Concat will normalize the value to an array\n          // without double wrapping an array value in an array.\n          (0, _array.concat)(listeners['update:pressed']).forEach(function (fn) {\n            if ((0, _inspect.isFunction)(fn)) {\n              fn(!props.pressed);\n            }\n          });\n        }\n      }\n    };\n\n    if (toggle) {\n      on.focusin = handleFocus;\n      on.focusout = handleFocus;\n    }\n\n    var componentData = {\n      staticClass: 'btn',\n      class: computeClass(props),\n      props: computeLinkProps(props),\n      attrs: computeAttrs(props, data),\n      on: on\n    };\n    return h(link ? _link.default : props.tag, (0, _vueFunctionalDataMerge.mergeData)(data, componentData), children);\n  }\n});\n\nexports.default = _default2;"],"sourceRoot":""}