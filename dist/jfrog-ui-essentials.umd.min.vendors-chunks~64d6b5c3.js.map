{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/components/form-group/form-group.js"],"names":["exports","__esModule","default","_memoize","_interopRequireDefault","__webpack_require__","_upperFirst","_warn","_array","_config","_dom","_env","_inspect","_object","_formState","_id","_col","_formInvalidFeedback","_formRow","_formText","_formValidFeedback","obj","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","NAME","SELECTOR","DEPRECATED_MSG","renderInvalidFeedback","h","ctx","content","$slots","invalidFeedback","props","id","invalidFeedbackId","state","computedState","tooltip","ariaLive","feedbackAriaLive","role","attrs","tabindex","renderValidFeedback","validFeedback","validFeedbackId","renderHelpText","description","descriptionId","renderLabel","label","labelFor","isLegend","isHorizontal","labelTag","labelSrOnly","class","labelId","for","labelColProps","on","click","legendClick","tag","labelSize","labelAlignClasses","labelClass","makePropName","breakpoint","undefined","prefix","generateProps","BREAKPOINTS","getBreakpointsUpCached","bpLabelColProps","reduce","type","Number","String","Boolean","create","bpLabelAlignProps","Array","validated","disabled","horizontal","deprecated","_default","name","mixins","this","computed","_this","bp","cols","parseInt","labelCols","propVal","isBoolean","bColPropName","_this2","classes","className","push","safeId","hasInvalidFeedback","hasValidFeedback","describedByIds","join","watch","add","remove","setInputDescribedBy","mounted","_this3","$nextTick","methods","evt","tagName","test","inputs","selectAll","$refs","isVisible","focus","isBrowser","input","select","adb","ids","getAttr","split","arrayIncludes","memo","trim","setAttr","removeAttr","render","isFieldset","ref","data","staticClass","stateClass","aria-invalid","aria-labelledby","aria-describedby"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~64d6b5c3.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _memoize = _interopRequireDefault(require(\"../../utils/memoize\"));\n\nvar _upperFirst = _interopRequireDefault(require(\"../../utils/upper-first\"));\n\nvar _warn = _interopRequireDefault(require(\"../../utils/warn\"));\n\nvar _array = require(\"../../utils/array\");\n\nvar _config = require(\"../../utils/config\");\n\nvar _dom = require(\"../../utils/dom\");\n\nvar _env = require(\"../../utils/env\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _formState = _interopRequireDefault(require(\"../../mixins/form-state\"));\n\nvar _id = _interopRequireDefault(require(\"../../mixins/id\"));\n\nvar _col = _interopRequireDefault(require(\"../layout/col\"));\n\nvar _formInvalidFeedback = _interopRequireDefault(require(\"../form/form-invalid-feedback\"));\n\nvar _formRow = _interopRequireDefault(require(\"../layout/form-row\"));\n\nvar _formText = _interopRequireDefault(require(\"../form/form-text\"));\n\nvar _formValidFeedback = _interopRequireDefault(require(\"../form/form-valid-feedback\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Component name\nvar NAME = 'BFormGroup'; // Selector for finding first input in the form-group\n\nvar SELECTOR = 'input:not([disabled]),textarea:not([disabled]),select:not([disabled])';\nvar DEPRECATED_MSG = 'Props \"horizontal\" and \"breakpoint\" are deprecated. Use \"label-cols(-{breakpoint})\" props instead.'; // Render helper functions (here rather than polluting the instance with more methods)\n\nvar renderInvalidFeedback = function renderInvalidFeedback(h, ctx) {\n  var content = ctx.$slots['invalid-feedback'] || ctx.invalidFeedback;\n  var invalidFeedback = h(false);\n\n  if (content) {\n    invalidFeedback = h(_formInvalidFeedback.default, {\n      props: {\n        id: ctx.invalidFeedbackId,\n        // If state is explicitly false, always show the feedback\n        state: ctx.computedState,\n        tooltip: ctx.tooltip,\n        ariaLive: ctx.feedbackAriaLive,\n        role: ctx.feedbackAriaLive ? 'alert' : null\n      },\n      attrs: {\n        tabindex: content ? '-1' : null\n      }\n    }, [content]);\n  }\n\n  return invalidFeedback;\n};\n\nvar renderValidFeedback = function renderValidFeedback(h, ctx) {\n  var content = ctx.$slots['valid-feedback'] || ctx.validFeedback;\n  var validFeedback = h(false);\n\n  if (content) {\n    validFeedback = h(_formValidFeedback.default, {\n      props: {\n        id: ctx.validFeedbackId,\n        // If state is explicitly true, always show the feedback\n        state: ctx.computedState,\n        tooltip: ctx.tooltip,\n        ariaLive: ctx.feedbackAriaLive,\n        role: ctx.feedbackAriaLive ? 'alert' : null\n      },\n      attrs: {\n        tabindex: content ? '-1' : null\n      }\n    }, [content]);\n  }\n\n  return validFeedback;\n};\n\nvar renderHelpText = function renderHelpText(h, ctx) {\n  // Form help text (description)\n  var content = ctx.$slots['description'] || ctx.description;\n  var description = h(false);\n\n  if (content) {\n    description = h(_formText.default, {\n      attrs: {\n        id: ctx.descriptionId,\n        tabindex: content ? '-1' : null\n      }\n    }, [content]);\n  }\n\n  return description;\n};\n\nvar renderLabel = function renderLabel(h, ctx) {\n  // Render label/legend inside b-col if necessary\n  var content = ctx.$slots['label'] || ctx.label;\n  var labelFor = ctx.labelFor;\n  var isLegend = !labelFor;\n  var isHorizontal = ctx.isHorizontal;\n  var labelTag = isLegend ? 'legend' : 'label';\n\n  if (!content && !isHorizontal) {\n    return h(false);\n  } else if (ctx.labelSrOnly) {\n    var label = h(false);\n\n    if (content) {\n      label = h(labelTag, {\n        class: 'sr-only',\n        attrs: {\n          id: ctx.labelId,\n          for: labelFor || null\n        }\n      }, [content]);\n    }\n\n    return h(isHorizontal ? _col.default : 'div', {\n      props: isHorizontal ? ctx.labelColProps : {}\n    }, [label]);\n  } else {\n    return h(isHorizontal ? _col.default : labelTag, {\n      on: isLegend ? {\n        click: ctx.legendClick\n      } : {},\n      props: isHorizontal ? _objectSpread({\n        tag: labelTag\n      }, ctx.labelColProps) : {},\n      attrs: {\n        id: ctx.labelId,\n        for: labelFor || null,\n        // We add a tab index to legend so that screen readers\n        // will properly read the aria-labelledby in IE.\n        tabindex: isLegend ? '-1' : null\n      },\n      class: [// When horizontal or if a legend is rendered, add col-form-label\n      // for correct sizing as Bootstrap has inconsistent font styling\n      // for legend in non-horizontal form-groups.\n      // See: https://github.com/twbs/bootstrap/issues/27805\n      isHorizontal || isLegend ? 'col-form-label' : '', // Emulate label padding top of 0 on legend when not horizontal\n      !isHorizontal && isLegend ? 'pt-0' : '', // If not horizontal and not a legend, we add d-block to label\n      // so that label-align works\n      !isHorizontal && !isLegend ? 'd-block' : '', ctx.labelSize ? \"col-form-label-\".concat(ctx.labelSize) : '', ctx.labelAlignClasses, ctx.labelClass]\n    }, [content]);\n  }\n}; // -- BFormGroup Prop factory -- used for lazy generation of props\n// Memoize this function to return cached values to\n// save time in computed functions\n\n\nvar makePropName = (0, _memoize.default)(function () {\n  var breakpoint = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var prefix = arguments.length > 1 ? arguments[1] : undefined;\n  return \"\".concat(prefix).concat((0, _upperFirst.default)(breakpoint));\n}); // BFormgroup prop generator for lazy generation of props\n\nvar generateProps = function generateProps() {\n  var BREAKPOINTS = (0, _config.getBreakpointsUpCached)(); // Generate the labelCol breakpoint props\n\n  var bpLabelColProps = BREAKPOINTS.reduce(function (props, breakpoint) {\n    // i.e. label-cols, label-cols-sm, label-cols-md, ...\n    props[makePropName(breakpoint, 'labelCols')] = {\n      type: [Number, String, Boolean],\n      default: breakpoint ? false : null\n    };\n    return props;\n  }, (0, _object.create)(null)); // Generate the labelAlign breakpoint props\n\n  var bpLabelAlignProps = BREAKPOINTS.reduce(function (props, breakpoint) {\n    // label-align, label-align-sm, label-align-md, ...\n    props[makePropName(breakpoint, 'labelAlign')] = {\n      type: String,\n      // left, right, center\n      default: null\n    };\n    return props;\n  }, (0, _object.create)(null));\n  return _objectSpread({\n    label: {\n      type: String,\n      default: null\n    },\n    labelFor: {\n      type: String,\n      default: null\n    },\n    labelSize: {\n      type: String,\n      default: null\n    },\n    labelSrOnly: {\n      type: Boolean,\n      default: false\n    }\n  }, bpLabelColProps, bpLabelAlignProps, {\n    labelClass: {\n      type: [String, Array, Object],\n      default: null\n    },\n    description: {\n      type: String,\n      default: null\n    },\n    invalidFeedback: {\n      type: String,\n      default: null\n    },\n    validFeedback: {\n      type: String,\n      default: null\n    },\n    tooltip: {\n      // Enable tooltip style feedback\n      type: Boolean,\n      default: false\n    },\n    feedbackAriaLive: {\n      type: String,\n      default: 'assertive'\n    },\n    validated: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    horizontal: {\n      // Deprecated\n      type: Boolean,\n      default: false,\n      deprecated: DEPRECATED_MSG\n    },\n    breakpoint: {\n      // Deprecated (ignored if horizontal is not true)\n      type: String,\n      default: null,\n      // legacy value 'sm',\n      deprecated: DEPRECATED_MSG\n    }\n  });\n}; // We do not use Vue.extend here as that would evaluate the props\n// immediately, which we do not want to happen\n// @vue/component\n\n\nvar _default = {\n  name: NAME,\n  mixins: [_id.default, _formState.default],\n\n  get props() {\n    // Allow props to be lazy evaled on first access and\n    // then they become a non-getter afterwards.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get#Smart_self-overwriting_lazy_getters\n    delete this.props; // eslint-disable-next-line no-return-assign\n\n    return this.props = generateProps();\n  },\n\n  computed: {\n    labelColProps: function labelColProps() {\n      var _this = this;\n\n      var props = {};\n      /* istanbul ignore next: deprecated */\n\n      if (this.horizontal) {\n        // Deprecated setting of horizontal/breakpoint props\n\n        /* istanbul ignore next */\n        (0, _warn.default)(\"b-form-group: \".concat(DEPRECATED_MSG)); // Legacy default is breakpoint sm and cols 3\n\n        var bp = this.breakpoint || (0, _config.getBreakpointsUpCached)()[1]; // 'sm'\n\n        var cols = parseInt(this.labelCols, 10) || 3;\n        props[bp] = cols > 0 ? cols : 3; // We then return the single breakpoint prop for legacy compatibility\n\n        return props;\n      }\n\n      (0, _config.getBreakpointsUpCached)().forEach(function (breakpoint) {\n        // Grab the value if the label column breakpoint prop\n        var propVal = _this[makePropName(breakpoint, 'labelCols')]; // Handle case where the prop's value is an empty string,\n        // which represents true\n\n\n        propVal = propVal === '' ? true : propVal || false;\n\n        if (!(0, _inspect.isBoolean)(propVal)) {\n          // Convert to column size to number\n          propVal = parseInt(propVal, 10) || 0; // Ensure column size is greater than 0\n\n          propVal = propVal > 0 ? propVal : false;\n        }\n\n        if (propVal) {\n          // Add the prop to the list of props to give to b-col\n          // If breakpoint is '' (labelCols=true), then we use the\n          // col prop to make equal width at xs\n          var bColPropName = breakpoint || ((0, _inspect.isBoolean)(propVal) ? 'col' : 'cols'); // Add it to the props\n\n          props[bColPropName] = propVal;\n        }\n      });\n      return props;\n    },\n    labelAlignClasses: function labelAlignClasses() {\n      var _this2 = this;\n\n      var classes = [];\n      (0, _config.getBreakpointsUpCached)().forEach(function (breakpoint) {\n        // Assemble the label column breakpoint align classes\n        var propVal = _this2[makePropName(breakpoint, 'labelAlign')] || null;\n\n        if (propVal) {\n          var className = breakpoint ? \"text-\".concat(breakpoint, \"-\").concat(propVal) : \"text-\".concat(propVal);\n          classes.push(className);\n        }\n      });\n      return classes;\n    },\n    isHorizontal: function isHorizontal() {\n      // Determine if the resultant form-group will be rendered\n      // horizontal (meaning it has label-col breakpoints)\n      return (0, _object.keys)(this.labelColProps).length > 0;\n    },\n    labelId: function labelId() {\n      return this.$slots['label'] || this.label ? this.safeId('_BV_label_') : null;\n    },\n    descriptionId: function descriptionId() {\n      return this.$slots['description'] || this.description ? this.safeId('_BV_description_') : null;\n    },\n    hasInvalidFeedback: function hasInvalidFeedback() {\n      // Used for computing aria-describedby\n      var $slots = this.$slots;\n      return this.computedState === false && ($slots['invalid-feedback'] || this.invalidFeedback);\n    },\n    invalidFeedbackId: function invalidFeedbackId() {\n      return this.hasInvalidFeedback ? this.safeId('_BV_feedback_invalid_') : null;\n    },\n    hasValidFeedback: function hasValidFeedback() {\n      // Used for computing aria-describedby\n      return this.computedState === true && (this.$slots['valid-feedback'] || this.validFeedback);\n    },\n    validFeedbackId: function validFeedbackId() {\n      return this.hasValidFeedback ? this.safeId('_BV_feedback_valid_') : null;\n    },\n    describedByIds: function describedByIds() {\n      // Screen readers will read out any content linked to by aria-describedby\n      // even if the content is hidden with `display: none;`, hence we only include\n      // feedback IDs if the form-group's state is explicitly valid or invalid.\n      return [this.descriptionId, this.invalidFeedbackId, this.validFeedbackId].filter(Boolean).join(' ') || null;\n    }\n  },\n  watch: {\n    describedByIds: function describedByIds(add, remove) {\n      if (add !== remove) {\n        this.setInputDescribedBy(add, remove);\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    this.$nextTick(function () {\n      // Set the aria-describedby IDs on the input specified by label-for\n      // We do this in a nextTick to ensure the children have finished rendering\n      _this3.setInputDescribedBy(_this3.describedByIds);\n    });\n  },\n  methods: {\n    legendClick: function legendClick(evt) {\n      if (this.labelFor) {\n        // Don't do anything if labelFor is set\n\n        /* istanbul ignore next: clicking a label will focus the input, so no need to test */\n        return;\n      }\n\n      var tagName = evt.target ? evt.target.tagName : '';\n\n      if (/^(input|select|textarea|label|button|a)$/i.test(tagName)) {\n        // If clicked an interactive element inside legend,\n        // we just let the default happen\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      var inputs = (0, _dom.selectAll)(SELECTOR, this.$refs.content).filter(_dom.isVisible);\n\n      if (inputs && inputs.length === 1 && inputs[0].focus) {\n        // if only a single input, focus it, emulating label behaviour\n        inputs[0].focus();\n      }\n    },\n    setInputDescribedBy: function setInputDescribedBy(add, remove) {\n      // Sets the `aria-describedby` attribute on the input if label-for is set.\n      // Optionally accepts a string of IDs to remove as the second parameter.\n      // Preserves any aria-describedby value(s) user may have on input.\n      if (this.labelFor && _env.isBrowser) {\n        var input = (0, _dom.select)(\"#\".concat(this.labelFor), this.$refs.content);\n\n        if (input) {\n          var adb = 'aria-describedby';\n          var ids = ((0, _dom.getAttr)(input, adb) || '').split(/\\s+/);\n          add = (add || '').split(/\\s+/);\n          remove = (remove || '').split(/\\s+/); // Update ID list, preserving any original IDs\n          // and ensuring the ID's are unique\n\n          ids = ids.filter(function (id) {\n            return !(0, _array.arrayIncludes)(remove, id);\n          }).concat(add).filter(Boolean);\n          ids = (0, _object.keys)(ids.reduce(function (memo, id) {\n            return _objectSpread({}, memo, _defineProperty({}, id, true));\n          }, {})).join(' ').trim();\n\n          if (ids) {\n            (0, _dom.setAttr)(input, adb, ids);\n          } else {\n            // No IDs, so remove the attribute\n            (0, _dom.removeAttr)(input, adb);\n          }\n        }\n      }\n    }\n  },\n  render: function render(h) {\n    var isFieldset = !this.labelFor;\n    var isHorizontal = this.isHorizontal; // Generate the label\n\n    var label = renderLabel(h, this); // Generate the content\n\n    var content = h(isHorizontal ? _col.default : 'div', {\n      ref: 'content',\n      attrs: {\n        tabindex: isFieldset ? '-1' : null,\n        role: isFieldset ? 'group' : null\n      }\n    }, [this.$slots['default'] || h(false), renderInvalidFeedback(h, this), renderValidFeedback(h, this), renderHelpText(h, this)]); // Create the form-group\n\n    var data = {\n      staticClass: 'form-group',\n      class: [this.validated ? 'was-validated' : null, this.stateClass],\n      attrs: {\n        id: this.safeId(),\n        disabled: isFieldset ? this.disabled : null,\n        role: isFieldset ? null : 'group',\n        'aria-invalid': this.computedState === false ? 'true' : null,\n        // Only apply aria-labelledby if we are a horizontal fieldset\n        // as the legend is no longer a direct child of fieldset\n        'aria-labelledby': isFieldset && isHorizontal ? this.labelId : null,\n        // Only apply aria-describedby IDs if we are a fieldset\n        // as the input will have the IDs when not a fieldset\n        'aria-describedby': isFieldset ? this.describedByIds : null\n      } // Return it wrapped in a form-group\n      // Note: Fieldsets do not support adding `row` or `form-row` directly\n      // to them due to browser specific render issues, so we move the `form-row`\n      // to an inner wrapper div when horizontal and using a fieldset\n\n    };\n    return h(isFieldset ? 'fieldset' : isHorizontal ? _formRow.default : 'div', data, isHorizontal && isFieldset ? [h(_formRow.default, {}, [label, content])] : [label, content]);\n  }\n};\nexports.default = _default;"],"sourceRoot":""}