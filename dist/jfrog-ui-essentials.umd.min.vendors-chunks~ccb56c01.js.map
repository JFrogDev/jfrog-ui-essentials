{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/mixins/dropdown.js"],"names":["exports","__esModule","default","_popper","_interopRequireDefault","__webpack_require__","_bvEvent","_keyCodes","_warn","_dom","_inspect","_clickOut","_focusIn","obj","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","filterVisible","els","isVisible","Selector","FORM_CHILD","NAVBAR_NAV","ITEM_SELECTOR","AttachmentMap","TOP","TOPEND","BOTTOM","BOTTOMEND","RIGHT","RIGHTEND","LEFT","LEFTEND","_default2","mixins","provide","bvDropdown","this","props","disabled","type","Boolean","text","String","html","dropup","dropright","dropleft","right","offset","Number","noFlip","popperOpts","data","visible","inNavbar","visibleChangePrevented","computed","toggler","toggle","$refs","$el","directionClass","watch","newValue","oldValue","evtName","bvEvt","cancelable","vueTarget","menu","relatedTarget","emitEvent","defaultPrevented","$off","focusToggler","showMenu","hideMenu","created","deactivated","whileOpenListen","removePopper","beforeDestroy","methods","$emit","$root","_this","isNull","isNav","closest","element","split","createPopper","$nextTick","focusMenu","getPopperConfig","destroy","placement","popperConfig","modifiers","flip","enabled","boundary","preventOverflow","boundariesElement","open","$on","rootCloseListener","listenForClickOut","listenForFocusIn","vm","show","hide","refocus","undefined","$once","evt","keyCode","ENTER","SPACE","DOWN","preventDefault","stopPropagation","click","onKeydown","ESC","onEsc","TAB","onTab","focusNext","UP","onMouseOver","clickOutHandler","focusInHandler","contains","up","_this2","items","getItems","index","indexOf","focusItem","idx","el","find","getAttr","focus","selectAll"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~ccb56c01.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _popper = _interopRequireDefault(require(\"popper.js\"));\n\nvar _bvEvent = _interopRequireDefault(require(\"../utils/bv-event.class\"));\n\nvar _keyCodes = _interopRequireDefault(require(\"../utils/key-codes\"));\n\nvar _warn = _interopRequireDefault(require(\"../utils/warn\"));\n\nvar _dom = require(\"../utils/dom\");\n\nvar _inspect = require(\"../utils/inspect\");\n\nvar _clickOut = _interopRequireDefault(require(\"./click-out\"));\n\nvar _focusIn = _interopRequireDefault(require(\"./focus-in\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Return an Array of visible items\nfunction filterVisible(els) {\n  return (els || []).filter(_dom.isVisible);\n} // Dropdown item CSS selectors\n// TODO: .dropdown-form handling\n\n\nvar Selector = {\n  FORM_CHILD: '.dropdown form',\n  NAVBAR_NAV: '.navbar-nav',\n  ITEM_SELECTOR: '.dropdown-item:not(.disabled):not([disabled])' // Popper attachment positions\n\n};\nvar AttachmentMap = {\n  // Dropup left align\n  TOP: 'top-start',\n  // Dropup right align\n  TOPEND: 'top-end',\n  // Dropdown left align\n  BOTTOM: 'bottom-start',\n  // Dropdown right align\n  BOTTOMEND: 'bottom-end',\n  // Dropright left align\n  RIGHT: 'right-start',\n  // Dropright right align\n  RIGHTEND: 'right-end',\n  // Dropleft left align\n  LEFT: 'left-start',\n  // Dropleft right align\n  LEFTEND: 'left-end' // @vue/component\n\n};\nvar _default2 = {\n  mixins: [_clickOut.default, _focusIn.default],\n  provide: function provide() {\n    return {\n      bvDropdown: this\n    };\n  },\n  props: {\n    disabled: {\n      type: Boolean,\n      default: false\n    },\n    text: {\n      // Button label\n      type: String,\n      default: ''\n    },\n    html: {\n      // Button label\n      type: String\n    },\n    dropup: {\n      // place on top if possible\n      type: Boolean,\n      default: false\n    },\n    dropright: {\n      // place right if possible\n      type: Boolean,\n      default: false\n    },\n    dropleft: {\n      // place left if possible\n      type: Boolean,\n      default: false\n    },\n    right: {\n      // Right align menu (default is left align)\n      type: Boolean,\n      default: false\n    },\n    offset: {\n      // Number of pixels to offset menu, or a CSS unit value (i.e. 1px, 1rem, etc)\n      type: [Number, String],\n      default: 0\n    },\n    noFlip: {\n      // Disable auto-flipping of menu from bottom<=>top\n      type: Boolean,\n      default: false\n    },\n    popperOpts: {\n      // type: Object,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      visible: false,\n      inNavbar: null,\n      visibleChangePrevented: false\n    };\n  },\n  computed: {\n    toggler: function toggler() {\n      var toggle = this.$refs.toggle;\n      return toggle ? toggle.$el || toggle : null;\n    },\n    directionClass: function directionClass() {\n      if (this.dropup) {\n        return 'dropup';\n      } else if (this.dropright) {\n        return 'dropright';\n      } else if (this.dropleft) {\n        return 'dropleft';\n      }\n\n      return '';\n    }\n  },\n  watch: {\n    visible: function visible(newValue, oldValue) {\n      if (this.visibleChangePrevented) {\n        this.visibleChangePrevented = false;\n        return;\n      }\n\n      if (newValue !== oldValue) {\n        var evtName = newValue ? 'show' : 'hide';\n        var bvEvt = new _bvEvent.default(evtName, {\n          cancelable: true,\n          vueTarget: this,\n          target: this.$refs.menu,\n          relatedTarget: null\n        });\n        this.emitEvent(bvEvt);\n\n        if (bvEvt.defaultPrevented) {\n          // Reset value and exit if canceled\n          this.visibleChangePrevented = true;\n          this.visible = oldValue; // Just in case a child element triggereded this.hide(true)\n\n          this.$off('hidden', this.focusToggler);\n          return;\n        }\n\n        if (evtName === 'show') {\n          this.showMenu();\n        } else {\n          this.hideMenu();\n        }\n      }\n    },\n    disabled: function disabled(newValue, oldValue) {\n      if (newValue !== oldValue && newValue && this.visible) {\n        // Hide dropdown if disabled changes to true\n        this.visible = false;\n      }\n    }\n  },\n  created: function created() {\n    // Create non-reactive property\n    this._popper = null;\n  },\n  deactivated: function deactivated()\n  /* istanbul ignore next: not easy to test */\n  {\n    // In case we are inside a `<keep-alive>`\n    this.visible = false;\n    this.whileOpenListen(false);\n    this.removePopper();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.visible = false;\n    this.whileOpenListen(false);\n    this.removePopper();\n  },\n  methods: {\n    // Event emitter\n    emitEvent: function emitEvent(bvEvt) {\n      var type = bvEvt.type;\n      this.$emit(type, bvEvt);\n      this.$root.$emit(\"bv::dropdown::\".concat(type), bvEvt);\n    },\n    showMenu: function showMenu() {\n      var _this = this;\n\n      if (this.disabled) {\n        /* istanbul ignore next */\n        return;\n      } // Ensure other menus are closed\n\n\n      this.$root.$emit('bv::dropdown::shown', this); // Are we in a navbar ?\n\n      if ((0, _inspect.isNull)(this.inNavbar) && this.isNav) {\n        /* istanbul ignore next */\n        this.inNavbar = Boolean((0, _dom.closest)('.navbar', this.$el));\n      } // Disable totally Popper.js for Dropdown in Navbar\n\n\n      if (!this.inNavbar) {\n        if (typeof _popper.default === 'undefined') {\n          /* istanbul ignore next */\n          (0, _warn.default)('b-dropdown: Popper.js not found. Falling back to CSS positioning.');\n        } else {\n          // for dropup with alignment we use the parent element as popper container\n          var element = this.dropup && this.right || this.split ? this.$el : this.$refs.toggle; // Make sure we have a reference to an element, not a component!\n\n          element = element.$el || element; // Instantiate popper.js\n\n          this.createPopper(element);\n        }\n      }\n\n      this.whileOpenListen(true); // Wrap in nextTick to ensure menu is fully rendered/shown\n\n      this.$nextTick(function () {\n        // Focus on the menu container on show\n        _this.focusMenu(); // Emit the shown event\n\n\n        _this.$emit('shown');\n      });\n    },\n    hideMenu: function hideMenu() {\n      this.whileOpenListen(false);\n      this.$root.$emit('bv::dropdown::hidden', this);\n      this.$emit('hidden');\n      this.removePopper();\n    },\n    createPopper: function createPopper(element) {\n      this.removePopper();\n      this._popper = new _popper.default(element, this.$refs.menu, this.getPopperConfig());\n    },\n    removePopper: function removePopper() {\n      if (this._popper) {\n        // Ensure popper event listeners are removed cleanly\n        this._popper.destroy();\n      }\n\n      this._popper = null;\n    },\n    getPopperConfig: function getPopperConfig() {\n      var placement = AttachmentMap.BOTTOM;\n\n      if (this.dropup) {\n        placement = this.right ? AttachmentMap.TOPEND : AttachmentMap.TOP;\n      } else if (this.dropright) {\n        placement = AttachmentMap.RIGHT;\n      } else if (this.dropleft) {\n        placement = AttachmentMap.LEFT;\n      } else if (this.right) {\n        placement = AttachmentMap.BOTTOMEND;\n      }\n\n      var popperConfig = {\n        placement: placement,\n        modifiers: {\n          offset: {\n            offset: this.offset || 0\n          },\n          flip: {\n            enabled: !this.noFlip\n          }\n        }\n      };\n\n      if (this.boundary) {\n        popperConfig.modifiers.preventOverflow = {\n          boundariesElement: this.boundary\n        };\n      }\n\n      return _objectSpread({}, popperConfig, this.popperOpts || {});\n    },\n    whileOpenListen: function whileOpenListen(open) {\n      // turn listeners on/off while open\n      if (open) {\n        // If another dropdown is opened\n        this.$root.$on('bv::dropdown::shown', this.rootCloseListener); // Hide the dropdown when clicked outside\n\n        this.listenForClickOut = true; // Hide the dropdown when it loses focus\n\n        this.listenForFocusIn = true;\n      } else {\n        this.$root.$off('bv::dropdown::shown', this.rootCloseListener);\n        this.listenForClickOut = false;\n        this.listenForFocusIn = false;\n      }\n    },\n    rootCloseListener: function rootCloseListener(vm) {\n      if (vm !== this) {\n        this.visible = false;\n      }\n    },\n    show: function show() {\n      // Public method to show dropdown\n      if (this.disabled) {\n        return;\n      }\n\n      this.visible = true;\n    },\n    hide: function hide() {\n      var refocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      // Public method to hide dropdown\n      if (this.disabled) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      this.visible = false;\n\n      if (refocus) {\n        // Child element is closing the dropdown on click\n        this.$once('hidden', this.focusToggler);\n      }\n    },\n    toggle: function toggle(evt) {\n      // Called only by a button that toggles the menu\n      evt = evt || {};\n      var type = evt.type;\n      var key = evt.keyCode;\n\n      if (type !== 'click' && !(type === 'keydown' && (key === _keyCodes.default.ENTER || key === _keyCodes.default.SPACE || key === _keyCodes.default.DOWN))) {\n        // We only toggle on Click, Enter, Space, and Arrow Down\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      if (this.disabled) {\n        /* istanbul ignore next */\n        this.visible = false;\n        /* istanbul ignore next */\n\n        return;\n      }\n\n      this.$emit('toggle', evt);\n\n      if (evt.defaultPrevented) {\n        // Exit if canceled\n        return;\n      }\n\n      evt.preventDefault();\n      evt.stopPropagation(); // Toggle visibility\n\n      this.visible = !this.visible;\n    },\n    click: function click(evt) {\n      // Called only in split button mode, for the split button\n      if (this.disabled) {\n        /* istanbul ignore next */\n        this.visible = false;\n        /* istanbul ignore next */\n\n        return;\n      }\n\n      this.$emit('click', evt);\n    },\n    onKeydown: function onKeydown(evt) {\n      // Called from dropdown menu context\n      var key = evt.keyCode;\n\n      if (key === _keyCodes.default.ESC) {\n        // Close on ESC\n        this.onEsc(evt);\n      } else if (key === _keyCodes.default.TAB) {\n        // Close on tab out\n\n        /* istanbul ignore next: not used and should be removed */\n        this.onTab(evt);\n      } else if (key === _keyCodes.default.DOWN) {\n        // Down Arrow\n        this.focusNext(evt, false);\n      } else if (key === _keyCodes.default.UP) {\n        // Up Arrow\n        this.focusNext(evt, true);\n      }\n    },\n    onEsc: function onEsc(evt) {\n      if (this.visible) {\n        this.visible = false;\n        evt.preventDefault();\n        evt.stopPropagation(); // Return focus to original trigger button\n\n        this.$once('hidden', this.focusToggler);\n      }\n    },\n    onTab: function onTab(evt)\n    /* istanbul ignore next: not easy to test */\n    {// TODO: Need special handler for dealing with form inputs\n      // Tab, if in a text-like input, we should just focus next item in the dropdown\n      // Note: Inputs are in a special .dropdown-form container\n    },\n    onMouseOver: function onMouseOver(evt)\n    /* istanbul ignore next: not easy to test */\n    {// Removed mouseover focus handler\n    },\n    // Document click out listener\n    clickOutHandler: function clickOutHandler() {\n      if (this.visible) {\n        this.visible = false;\n      }\n    },\n    // Document focusin listener\n    focusInHandler: function focusInHandler(evt) {\n      // If focus leaves dropdown, hide it\n      if (this.visible && !(0, _dom.contains)(this.$refs.menu, evt.target) && !(0, _dom.contains)(this.$refs.toggle, evt.target)) {\n        this.visible = false;\n      }\n    },\n    // Keyboard nav\n    focusNext: function focusNext(evt, up) {\n      var _this2 = this;\n\n      if (!this.visible) {\n        /* istanbul ignore next: should never happen */\n        return;\n      }\n\n      evt.preventDefault();\n      evt.stopPropagation();\n      this.$nextTick(function () {\n        var items = _this2.getItems();\n\n        if (items.length < 1) {\n          /* istanbul ignore next: should never happen */\n          return;\n        }\n\n        var index = items.indexOf(evt.target);\n\n        if (up && index > 0) {\n          index--;\n        } else if (!up && index < items.length - 1) {\n          index++;\n        }\n\n        if (index < 0) {\n          /* istanbul ignore next: should never happen */\n          index = 0;\n        }\n\n        _this2.focusItem(index, items);\n      });\n    },\n    focusItem: function focusItem(idx, items) {\n      var el = items.find(function (el, i) {\n        return i === idx;\n      });\n\n      if (el && (0, _dom.getAttr)(el, 'tabindex') !== '-1') {\n        el.focus();\n      }\n    },\n    getItems: function getItems() {\n      // Get all items\n      return filterVisible((0, _dom.selectAll)(Selector.ITEM_SELECTOR, this.$refs.menu));\n    },\n    focusMenu: function focusMenu() {\n      this.$refs.menu.focus && this.$refs.menu.focus();\n    },\n    focusToggler: function focusToggler() {\n      var toggler = this.toggler;\n\n      if (toggler && toggler.focus) {\n        toggler.focus();\n      }\n    }\n  }\n};\nexports.default = _default2;"],"sourceRoot":""}