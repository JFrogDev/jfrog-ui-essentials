{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/components/modal/helpers/bv-modal.js"],"names":[],"mappings":";;;;;;AAAa;;AAEb;AACA;;AAEA,kCAAkC,mBAAO,CAAC,MAAoB;;AAE9D,qCAAqC,mBAAO,CAAC,MAAU;;AAEvD,cAAc,mBAAO,CAAC,MAAuB;;AAE7C,eAAe,mBAAO,CAAC,MAAwB;;AAE/C,cAAc,mBAAO,CAAC,MAAuB;;AAE7C,YAAY,mBAAO,CAAC,MAAqB;;AAEzC,uCAAuC,6BAA6B,YAAY,EAAE,OAAO,iBAAiB,mBAAmB,uBAAuB,sDAAsD,sHAAsH,4BAA4B,0CAA0C,EAAE,OAAO,wBAAwB,EAAE,EAAE,EAAE,EAAE,sBAAsB,eAAe,EAAE;;AAEtd,sCAAsC,uCAAuC,gBAAgB;;AAE7F,iDAAiD,0CAA0C,0DAA0D,EAAE;;AAEvJ,2CAA2C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE;;AAE3T,6DAA6D,sEAAsE,8DAA8D,oBAAoB;;AAErN,gCAAgC,gBAAgB,sBAAsB,OAAO,uDAAuD,mCAAmC,0DAA0D,sFAAsF,gEAAgE,EAAE,GAAG,EAAE,iCAAiC,2CAA2C,EAAE,EAAE,EAAE,eAAe;;AAE/d,2CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M,kCAAkC,iFAAiF;;AAEnH,+BAA+B,wEAAwE;;AAEvG,iCAAiC,+HAA+H;;AAEhK,kCAAkC,0BAA0B,8CAA8C,gBAAgB,OAAO,kBAAkB,EAAE,aAAa,EAAE;;AAEpK;AACA,2BAA2B;AAC3B;AACA;AACA;;AAEA,kJAAkJ;;AAElJ,8DAA8D;;;AAG9D;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG,IAAI;AACP,EAAE;AACF;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,MAAM;;;AAGN,wDAAwD;;AAExD,wCAAwC;;AAExC;;AAEA;AACA;AACA;AACA,KAAK;AACL;;;AAGA;AACA;AACA,CAAC,EAAE;AACH;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,+DAA+D;AAC9F;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG,EAAE;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;;AAEL;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,0CAA0C;;AAE1C;AACA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA,GAAG;AACH,EAAE;;;AAGF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA,8FAA8F,aAAa;AAC3G;AACA;;AAEA;AACA;AACA,KAAK;;AAEL,GAAG;AACH;AACA;AACA;AACA;;AAEA,kGAAkG,eAAe;AACjH;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC;AAClC;AACA,OAAO;;AAEP;AACA,KAAK;;AAEL,GAAG;AACH;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;;AAEH;AACA,CAAC,GAAG;;;AAGJ;AACA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,EAAE;AACL;;;AAGA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA,2B","file":"jfrog-ui-essentials.umd.vendors-chunks~72226e02.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _vue = _interopRequireDefault(require(\"../../../utils/vue\"));\n\nvar _modal = _interopRequireWildcard(require(\"../modal\"));\n\nvar _config = require(\"../../../utils/config\");\n\nvar _inspect = require(\"../../../utils/inspect\");\n\nvar _object = require(\"../../../utils/object\");\n\nvar _warn = require(\"../../../utils/warn\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n// --- Constants ---\nvar PROP_NAME = '$bvModal'; // Base modal props that are allowed\n// Some may be ignored or overridden on some message boxes\n// Prop ID is allowed, but really only should be used for testing\n// We need to add it in explicitly as it comes from the `idMixin`\n\nvar BASE_PROPS = ['id'].concat(_toConsumableArray((0, _object.keys)((0, _object.omit)(_modal.props, ['busy', 'lazy', 'noStacking', 'visible'])))); // Fallback event resolver (returns undefined)\n\nvar defaultResolver = function defaultResolver(bvModalEvt) {}; // Map prop names to modal slot names\n\n\nvar propsToSlots = {\n  msgBoxContent: 'default',\n  title: 'modal-title',\n  okTitle: 'modal-ok',\n  cancelTitle: 'modal-cancel' // --- Utility methods ---\n  // Method to filter only recognized props that are not undefined\n\n};\n\nvar filterOptions = function filterOptions(options) {\n  return BASE_PROPS.reduce(function (memo, key) {\n    if (!(0, _inspect.isUndefined)(options[key])) {\n      memo[key] = options[key];\n    }\n\n    return memo;\n  }, {});\n}; // Create a private sub-component that extends BModal\n// which self-destructs after hidden\n// @vue/component\n\n\nvar MsgBox = _vue.default.extend({\n  name: 'BMsgBox',\n  extends: _modal.default,\n  destroyed: function destroyed() {\n    // Make sure we not in document any more\n    if (this.$el && this.$el.parentNode) {\n      this.$el.parentNode.removeChild(this.$el);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // Self destruct handler\n    var handleDestroy = function handleDestroy() {\n      var self = _this;\n\n      _this.$nextTick(function () {\n        // In a `setTimeout()` to release control back to application\n        setTimeout(function () {\n          return self.$destroy();\n        }, 0);\n      });\n    }; // Self destruct if parent destroyed\n\n\n    this.$parent.$once('hook:destroyed', handleDestroy); // Self destruct after hidden\n\n    this.$once('hidden', handleDestroy); // Self destruct on route change\n\n    /* istanbul ignore if */\n\n    if (this.$router && this.$route) {\n      var unwatch = this.$watch('$router', handleDestroy);\n      this.$once('hook:beforeDestroy', unwatch);\n    } // Should we also self destruct on parent deactivation?\n    // Show the `MsgBox`\n\n\n    this.show();\n  }\n}); // Method to generate the on-demand modal message box\n// Returns a promise that resolves to a value returned by the resolve\n\n\nvar asyncMsgBox = function asyncMsgBox(props, $parent) {\n  var resolver = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultResolver;\n\n  if ((0, _warn.warnNotClient)(PROP_NAME) || (0, _warn.warnNoPromiseSupport)(PROP_NAME)) {\n    // Should this throw an error?\n\n    /* istanbul ignore next */\n    return;\n  } // Create an instance of `MsgBox` component\n\n\n  var msgBox = new MsgBox({\n    // We set parent as the local VM so these modals can emit events on\n    // the app `$root`, as needed by things like tooltips and popovers\n    // And it helps to ensure `MsgBox` is destroyed when parent is destroyed\n    parent: $parent,\n    // Preset the prop values\n    propsData: _objectSpread({}, filterOptions((0, _config.getComponentConfig)('BModal') || {}), {\n      // Defaults that user can override\n      hideHeaderClose: true,\n      hideHeader: !(props.title || props.titleHtml)\n    }, (0, _object.omit)(props, ['msgBoxContent']), {\n      // Props that can't be overridden\n      lazy: false,\n      busy: false,\n      visible: false,\n      noStacking: false,\n      noEnforceFocus: false\n    })\n  }); // Convert certain props to scoped slots\n\n  (0, _object.keys)(propsToSlots).forEach(function (prop) {\n    if (!(0, _inspect.isUndefined)(props[prop])) {\n      // Can be a string, or array of VNodes.\n      // Alternatively, user can use HTML version of prop to pass an HTML string.\n      msgBox.$slots[propsToSlots[prop]] = props[prop];\n    }\n  }); // Create a mount point (a DIV)\n\n  var div = document.createElement('div');\n  document.body.appendChild(div); // Return a promise that resolves when hidden, or rejects on destroyed\n\n  return new Promise(function (resolve, reject) {\n    var resolved = false;\n    msgBox.$once('hook:destroyed', function () {\n      if (!resolved) {\n        /* istanbul ignore next */\n        reject(new Error('BootstrapVue MsgBox destroyed before resolve'));\n      }\n    });\n    msgBox.$on('hide', function (bvModalEvt) {\n      if (!bvModalEvt.defaultPrevented) {\n        var result = resolver(bvModalEvt); // If resolver didn't cancel hide, we resolve\n\n        if (!bvModalEvt.defaultPrevented) {\n          resolved = true;\n          resolve(result);\n        }\n      }\n    }); // Mount the `MsgBox`, which will auto-trigger it to show\n\n    msgBox.$mount(div);\n  });\n}; // BvModal instance property class\n\n\nvar BvModal =\n/*#__PURE__*/\nfunction () {\n  function BvModal(vm) {\n    _classCallCheck(this, BvModal);\n\n    // Assign the new properties to this instance\n    (0, _object.assign)(this, {\n      _vm: vm,\n      _root: vm.$root\n    }); // Set these properties as read-only and non-enumerable\n\n    (0, _object.defineProperties)(this, {\n      _vm: (0, _object.readonlyDescriptor)(),\n      _root: (0, _object.readonlyDescriptor)()\n    });\n  } // --- Instance methods ---\n  // Show modal with the specified ID args are for future use\n\n\n  _createClass(BvModal, [{\n    key: \"show\",\n    value: function show(id) {\n      if (id && this._root) {\n        var _this$_root;\n\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        (_this$_root = this._root).$emit.apply(_this$_root, ['bv::show::modal', id].concat(args));\n      }\n    } // Hide modal with the specified ID args are for future use\n\n  }, {\n    key: \"hide\",\n    value: function hide(id) {\n      if (id && this._root) {\n        var _this$_root2;\n\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        (_this$_root2 = this._root).$emit.apply(_this$_root2, ['bv::hide::modal', id].concat(args));\n      }\n    } // TODO: Could make Promise versions of above that first checks\n    //       if modal is in document (by ID) and if not found reject\n    //       the Promise. Otherwise waits for hide/hidden event and\n    //       then resolves returning the `BvModalEvent` object\n    //       (which contains the details)\n    // The following methods require Promise support!\n    // IE 11 and others do not support Promise natively, so users\n    // should have a Polyfill loaded (which they need anyways for IE 11 support)\n    // Opens a user defined message box and returns a promise\n\n  }, {\n    key: \"msgBox\",\n    value: function msgBox(content) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var resolver = arguments.length > 2 ? arguments[2] : undefined;\n\n      if (!content || (0, _warn.warnNoPromiseSupport)(PROP_NAME) || (0, _warn.warnNotClient)(PROP_NAME) || !(0, _inspect.isFunction)(resolver)) {\n        // Should this throw an error?\n\n        /* istanbul ignore next */\n        return;\n      }\n\n      var props = _objectSpread({}, filterOptions(options), {\n        msgBoxContent: content\n      });\n\n      return asyncMsgBox(props, this._vm, resolver);\n    } // Open a message box with OK button only and returns a promise\n\n  }, {\n    key: \"msgBoxOk\",\n    value: function msgBoxOk(message) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      // Pick the modal props we support from options\n      var props = _objectSpread({}, options, {\n        // Add in overrides and our content prop\n        okOnly: true,\n        okDisabled: false,\n        hideFooter: false,\n        msgBoxContent: message\n      });\n\n      return this.msgBox(message, props, function (bvModalEvt) {\n        // Always resolve to true for OK\n        return true;\n      });\n    } // Open a message box modal with OK and CANCEL buttons\n    // and returns a promise\n\n  }, {\n    key: \"msgBoxConfirm\",\n    value: function msgBoxConfirm(message) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      // Set the modal props we support from options\n      var props = _objectSpread({}, options, {\n        // Add in overrides and our content prop\n        okOnly: false,\n        okDisabled: false,\n        cancelDisabled: false,\n        hideFooter: false\n      });\n\n      return this.msgBox(message, props, function (bvModalEvt) {\n        var trigger = bvModalEvt.trigger;\n        return trigger === 'ok' ? true : trigger === 'cancel' ? false : null;\n      });\n    }\n  }]);\n\n  return BvModal;\n}(); // Method to install `$bvModal` VM injection\n\n\nvar install = function install(_Vue) {\n  if (install._installed) {\n    // Only install once\n\n    /* istanbul ignore next */\n    return;\n  }\n\n  install._installed = true; // Add our instance mixin\n\n  _Vue.mixin({\n    beforeCreate: function beforeCreate() {\n      // Because we need access to `$root` for `$emits`, and VM for parenting,\n      // we have to create a fresh instance of `BvModal` for each VM\n      this._bv__modal = new BvModal(this);\n    }\n  }); // Define our read-only `$bvModal` instance property\n  // Placed in an if just in case in HMR mode\n\n\n  if (!_Vue.prototype.hasOwnProperty(PROP_NAME)) {\n    (0, _object.defineProperty)(_Vue.prototype, PROP_NAME, {\n      get: function get() {\n        return this._bv__modal;\n      }\n    });\n  }\n};\n\nvar _default = install;\nexports.default = _default;"],"sourceRoot":""}