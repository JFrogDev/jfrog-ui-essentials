{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/srcset/index.js"],"names":["numberIsNan","__webpack_require__","arrayUniq","reInt","deepUnique","arr","sort","filter","el","i","JSON","stringify","exports","parse","str","split","map","ret","trim","forEach","url","value","substring","length","postfix","intVal","parseInt","floatVal","parseFloat","test","width","height","Error","density","push","join"],"mappings":"sMACA,IAAAA,EAAkBC,EAAQ,QAC1BC,EAAgBD,EAAQ,QACxBE,EAAA,QAEA,SAAAC,EAAAC,GACA,OAAAA,EAAAC,OAAAC,OAAA,SAAAC,EAAAC,GACA,OAAAC,KAAAC,UAAAH,KAAAE,KAAAC,UAAAN,EAAAI,EAAA,MAIAG,EAAAC,MAAA,SAAAC,GACA,OAAAV,EAAAU,EAAAC,MAAA,KAAAC,IAAA,SAAAR,GACA,IAAAS,EAAA,GAuBA,OArBAT,EAAAU,OAAAH,MAAA,OAAAI,QAAA,SAAAX,EAAAC,GACA,OAAAA,EACA,OAAAQ,EAAAG,IAAAZ,EAGA,IAAAa,EAAAb,EAAAc,UAAA,EAAAd,EAAAe,OAAA,GACAC,EAAAhB,IAAAe,OAAA,GACAE,EAAAC,SAAAL,EAAA,IACAM,EAAAC,WAAAP,GAEA,SAAAG,GAAArB,EAAA0B,KAAAR,GACAJ,EAAAa,MAAAL,OACI,SAAAD,GAAArB,EAAA0B,KAAAR,GACJJ,EAAAc,OAAAN,MACI,UAAAD,GAAAxB,EAAA2B,GAGJ,UAAAK,MAAA,8BAAAxB,EAAA,KAFAS,EAAAgB,QAAAN,KAMAV,MAIAL,EAAAD,UAAA,SAAAN,GACA,OAAAH,EAAAG,EAAAW,IAAA,SAAAR,GACA,IAAAA,EAAAY,IACA,UAAAY,MAAA,oBAGA,IAAAf,EAAA,CAAAT,EAAAY,KAcA,OAZAZ,EAAAsB,OACAb,EAAAiB,KAAA1B,EAAAsB,MAAA,KAGAtB,EAAAuB,QACAd,EAAAiB,KAAA1B,EAAAuB,OAAA,KAGAvB,EAAAyB,SACAhB,EAAAiB,KAAA1B,EAAAyB,QAAA,KAGAhB,EAAAkB,KAAA,QACEA,KAAA","file":"jfrog-ui-essentials.umd.min.vendors-chunks~339ced25.js","sourcesContent":["'use strict';\nvar numberIsNan = require('number-is-nan');\nvar arrayUniq = require('array-uniq');\nvar reInt = /^\\d+$/;\n\nfunction deepUnique(arr) {\n\treturn arr.sort().filter(function (el, i) {\n\t\treturn JSON.stringify(el) !== JSON.stringify(arr[i - 1]);\n\t});\n}\n\nexports.parse = function (str) {\n\treturn deepUnique(str.split(',').map(function (el) {\n\t\tvar ret = {};\n\n\t\tel.trim().split(/\\s+/).forEach(function (el, i) {\n\t\t\tif (i === 0) {\n\t\t\t\treturn ret.url = el;\n\t\t\t}\n\n\t\t\tvar value = el.substring(0, el.length - 1);\n\t\t\tvar postfix = el[el.length - 1];\n\t\t\tvar intVal = parseInt(value, 10);\n\t\t\tvar floatVal = parseFloat(value);\n\n\t\t\tif (postfix === 'w' && reInt.test(value)) {\n\t\t\t\tret.width = intVal;\n\t\t\t} else if (postfix === 'h' && reInt.test(value)) {\n\t\t\t\tret.height = intVal;\n\t\t\t} else if (postfix === 'x' && !numberIsNan(floatVal)) {\n\t\t\t\tret.density = floatVal;\n\t\t\t} else {\n\t\t\t\tthrow new Error('Invalid srcset descriptor: ' + el + '.');\n\t\t\t}\n\t\t});\n\n\t\treturn ret;\n\t}));\n}\n\nexports.stringify = function (arr) {\n\treturn arrayUniq(arr.map(function (el) {\n\t\tif (!el.url) {\n\t\t\tthrow new Error('URL is required.');\n\t\t}\n\n\t\tvar ret = [el.url];\n\n\t\tif (el.width) {\n\t\t\tret.push(el.width + 'w');\n\t\t}\n\n\t\tif (el.height) {\n\t\t\tret.push(el.height + 'h');\n\t\t}\n\n\t\tif (el.density) {\n\t\t\tret.push(el.density + 'x');\n\t\t}\n\n\t\treturn ret.join(' ');\n\t})).join(', ');\n}\n"],"sourceRoot":""}