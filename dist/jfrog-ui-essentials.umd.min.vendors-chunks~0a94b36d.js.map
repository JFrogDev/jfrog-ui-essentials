{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/d3-array/src/threshold/sturges.js","webpack://jfrog-ui-essentials/./node_modules/d3-array/src/threshold/scott.js","webpack://jfrog-ui-essentials/./node_modules/d3-array/src/transpose.js","webpack://jfrog-ui-essentials/./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack://jfrog-ui-essentials/./node_modules/d3-array/src/variance.js","webpack://jfrog-ui-essentials/./node_modules/d3-array/src/ticks.js","webpack://jfrog-ui-essentials/./node_modules/d3-array/src/zip.js"],"names":["__webpack_exports__","values","Math","ceil","log","length","LN2","__webpack_require__","_min__WEBPACK_IMPORTED_MODULE_0__","d","matrix","n","i","m","Object","transpose","Array","j","row","_number__WEBPACK_IMPORTED_MODULE_0__","valueof","value","delta","mean","sum","isNaN","tickIncrement","tickStep","e10","sqrt","e5","e2","start","stop","count","step","max","power","floor","LN10","error","pow","step0","abs","step1","reverse","ticks","isFinite"],"mappings":"wMAAeA,EAAA,cAAAC,GACf,OAAAC,KAAAC,KAAAD,KAAAE,IAAAH,EAAAI,QAAAH,KAAAI,KAAA,yCCDAC,EAAA,2CCAA,IAAAC,EAAAD,EAAA,QAYA,SAAAF,EAAAI,GACA,OAAAA,EAAAJ,OAXeL,EAAA,cAAAU,GACf,KAAAC,EAAAD,EAAAL,QAAA,SACA,QAAAO,GAAA,EAAAC,EAAuBC,OAAAN,EAAA,KAAAM,CAAGJ,EAAAL,GAAAU,EAAA,IAAAC,MAAAH,KAA2CD,EAAAC,GACrE,QAAAF,EAAAM,GAAA,EAAAC,EAAAH,EAAAH,GAAA,IAAAI,MAAAL,KAA0DM,EAAAN,GAC1DO,EAAAD,GAAAP,EAAAO,GAAAL,GAGA,OAAAG,sCCTAR,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,2CCAA,IAAAY,EAAAZ,EAAA,QAEeP,EAAA,cAAAC,EAAAmB,GACf,IAIAC,EACAC,EALAX,EAAAV,EAAAI,OACAQ,EAAA,EACAD,GAAA,EACAW,EAAA,EAGAC,EAAA,EAEA,SAAAJ,EACA,QAAAR,EAAAD,EACAc,MAAAJ,EAAyBP,OAAAK,EAAA,KAAAL,CAAMb,EAAAW,OAC/BU,EAAAD,EAAAE,EACAA,GAAAD,IAAAT,EACAW,GAAAF,GAAAD,EAAAE,SAMA,QAAAX,EAAAD,EACAc,MAAAJ,EAAyBP,OAAAK,EAAA,KAAAL,CAAMM,EAAAnB,EAAAW,KAAAX,OAC/BqB,EAAAD,EAAAE,EACAA,GAAAD,IAAAT,EACAW,GAAAF,GAAAD,EAAAE,IAKA,GAAAV,EAAA,SAAAW,GAAAX,EAAA,uCC/BAN,EAAAE,EAAAT,EAAA,sBAAA0B,IAAAnB,EAAAE,EAAAT,EAAA,sBAAA2B,IAAA,IAAAC,EAAA1B,KAAA2B,KAAA,IACAC,EAAA5B,KAAA2B,KAAA,IACAE,EAAA7B,KAAA2B,KAAA,GA+BO,SAAAH,EAAAM,EAAAC,EAAAC,GACP,IAAAC,GAAAF,EAAAD,GAAA9B,KAAAkC,IAAA,EAAAF,GACAG,EAAAnC,KAAAoC,MAAApC,KAAAE,IAAA+B,GAAAjC,KAAAqC,MACAC,EAAAL,EAAAjC,KAAAuC,IAAA,GAAAJ,GACA,OAAAA,GAAA,GACAG,GAAAZ,EAAA,GAAAY,GAAAV,EAAA,EAAAU,GAAAT,EAAA,KAAA7B,KAAAuC,IAAA,GAAAJ,IACAnC,KAAAuC,IAAA,IAAAJ,IAAAG,GAAAZ,EAAA,GAAAY,GAAAV,EAAA,EAAAU,GAAAT,EAAA,KAGO,SAAAJ,EAAAK,EAAAC,EAAAC,GACP,IAAAQ,EAAAxC,KAAAyC,IAAAV,EAAAD,GAAA9B,KAAAkC,IAAA,EAAAF,GACAU,EAAA1C,KAAAuC,IAAA,GAAAvC,KAAAoC,MAAApC,KAAAE,IAAAsC,GAAAxC,KAAAqC,OACAC,EAAAE,EAAAE,EAIA,OAHAJ,GAAAZ,EAAAgB,GAAA,GACAJ,GAAAV,EAAAc,GAAA,EACAJ,GAAAT,IAAAa,GAAA,GACAX,EAAAD,GAAAY,IA7Ce5C,EAAA,cAAAgC,EAAAC,EAAAC,GACf,IAAAW,EAEAlC,EACAmC,EACAX,EAHAvB,GAAA,EAMA,GADAqB,KAAAD,KAAAE,KACAF,IAAAC,GAAAC,EAAA,SAAAF,GAEA,IADAa,EAAAZ,EAAAD,KAAArB,EAAAqB,IAAAC,IAAAtB,GACA,KAAAwB,EAAAT,EAAAM,EAAAC,EAAAC,MAAAa,SAAAZ,GAAA,SAEA,GAAAA,EAAA,GACAH,EAAA9B,KAAAC,KAAA6B,EAAAG,GACAF,EAAA/B,KAAAoC,MAAAL,EAAAE,GACAW,EAAA,IAAA9B,MAAAL,EAAAT,KAAAC,KAAA8B,EAAAD,EAAA,IACA,QAAApB,EAAAD,EAAAmC,EAAAlC,IAAAoB,EAAApB,GAAAuB,MACG,CACHH,EAAA9B,KAAAoC,MAAAN,EAAAG,GACAF,EAAA/B,KAAAC,KAAA8B,EAAAE,GACAW,EAAA,IAAA9B,MAAAL,EAAAT,KAAAC,KAAA6B,EAAAC,EAAA,IACA,QAAArB,EAAAD,EAAAmC,EAAAlC,IAAAoB,EAAApB,GAAAuB,EAKA,OAFAU,GAAAC,EAAAD,UAEAC,sCC9BAvC,EAAA","file":"jfrog-ui-essentials.umd.min.vendors-chunks~0a94b36d.js","sourcesContent":["export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n"],"sourceRoot":""}