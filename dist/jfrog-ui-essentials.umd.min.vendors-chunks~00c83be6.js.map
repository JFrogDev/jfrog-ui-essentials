{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/d3-zoom/src/zoom.js"],"names":["d3_dispatch__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d3_drag__WEBPACK_IMPORTED_MODULE_1__","d3_interpolate__WEBPACK_IMPORTED_MODULE_2__","d3_selection__WEBPACK_IMPORTED_MODULE_3__","d3_transition__WEBPACK_IMPORTED_MODULE_4__","_constant__WEBPACK_IMPORTED_MODULE_5__","_event__WEBPACK_IMPORTED_MODULE_6__","_transform__WEBPACK_IMPORTED_MODULE_7__","_noevent__WEBPACK_IMPORTED_MODULE_8__","defaultFilter","button","defaultExtent","w","h","e","this","SVGElement","ownerSVGElement","width","baseVal","value","height","clientWidth","clientHeight","defaultTransform","__zoom","defaultWheelDelta","deltaY","deltaMode","defaultTouchable","defaultConstrain","transform","extent","translateExtent","dx0","invertX","dx1","dy0","invertY","dy1","translate","Math","min","max","__webpack_exports__","touchstarting","touchending","filter","constrain","wheelDelta","touchable","scaleExtent","Infinity","duration","interpolate","gestures","listeners","Object","touchDelay","wheelDelay","clickDistance2","zoom","selection","property","on","wheeled","mousedowned","dblclicked","touchstarted","touchmoved","touchended","style","scale","k","x","y","p0","p1","centroid","schedule","transition","center","gesture","arguments","start","end","tween","that","args","g","apply","p","a","b","i","invert","concat","t","l","n","length","Gesture","index","active","pow","wheel","mouse","clearTimeout","setTimeout","wheelidled","v","view","mousemoved","mouseupped","x0","clientX","y0","clientY","moved","dx","dy","t0","k1","shiftKey","t1","call","started","touches","changedTouches","identifier","touch0","touch1","l0","l1","dp","dl","sqrt","collection","interrupt","each","scaleBy","scaleTo","k0","translateBy","translateTo","prototype","push","emit","key","splice","type","_","clickDistance"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~00c83be6.js","sourcesContent":["import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n"],"sourceRoot":""}