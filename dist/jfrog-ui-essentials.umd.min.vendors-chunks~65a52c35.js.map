{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/d3-selection/src/selection/data.js","webpack://jfrog-ui-essentials/./node_modules/d3-selection/src/selection/dispatch.js","webpack://jfrog-ui-essentials/./node_modules/d3-selection/src/selection/classed.js","webpack://jfrog-ui-essentials/./node_modules/d3-selection/src/selection/datum.js","webpack://jfrog-ui-essentials/./node_modules/d3-selection/src/selection/empty.js","webpack://jfrog-ui-essentials/./node_modules/d3-selection/src/selection/each.js","webpack://jfrog-ui-essentials/./node_modules/d3-selection/src/selection/clone.js","webpack://jfrog-ui-essentials/./node_modules/d3-selection/src/selection/enter.js"],"names":["_index__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_enter__WEBPACK_IMPORTED_MODULE_1__","_constant__WEBPACK_IMPORTED_MODULE_2__","keyPrefix","bindIndex","parent","group","enter","update","exit","data","node","i","groupLength","length","dataLength","__data__","bindKey","key","keyValue","nodeByKeyValue","keyValues","Array","call","__webpack_exports__","value","this","size","j","each","d","bind","parents","_parents","groups","_groups","Object","m","enterGroup","updateGroup","exitGroup","previous","next","i0","i1","_next","_enter","_exit","_window__WEBPACK_IMPORTED_MODULE_0__","dispatchEvent","type","params","window","event","CustomEvent","document","createEvent","initEvent","bubbles","cancelable","detail","dispatchConstant","dispatchFunction","apply","arguments","classArray","string","trim","split","classList","ClassList","_node","_names","getAttribute","classedAdd","names","list","n","add","classedRemove","remove","classedTrue","classedFalse","classedFunction","prototype","name","indexOf","push","setAttribute","join","splice","contains","property","callback","selection_cloneShallow","parentNode","insertBefore","cloneNode","nextSibling","selection_cloneDeep","deep","select","EnterNode","_sparse__WEBPACK_IMPORTED_MODULE_0__","_index__WEBPACK_IMPORTED_MODULE_1__","datum","ownerDocument","namespaceURI","_parent","map","constructor","appendChild","child","querySelector","selector","querySelectorAll"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~65a52c35.js","sourcesContent":["import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n"],"sourceRoot":""}