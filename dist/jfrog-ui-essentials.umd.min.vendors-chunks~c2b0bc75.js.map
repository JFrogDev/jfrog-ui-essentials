{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/directives/popover/popover.js","webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/directives/scrollspy/scrollspy.js","webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/directives/scrollspy/index.js"],"names":["exports","__esModule","default","_popper","_interopRequireDefault","__webpack_require__","_popover","_warn","_env","_inspect","_object","obj","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","BV_POPOVER","validTriggers","focus","hover","click","blur","parseBindings","bindings","config","isString","content","isFunction","isObject","arg","container","modifiers","mod","test","html","animation","placement","boundary","delay","parseInt","slice","offset","selectedTriggers","triggers","trigger","trim","split","join","applyPopover","el","vnode","isBrowser","updateConfig","context","$root","removePopover","destroy","_default","bind","inserted","update","oldValue","componentUpdated","unbind","_scrollspy","BV_SCROLLSPY","element","method","isNumber","Math","round","k","Boolean","DefaultType","applyScrollspy","removeScrollspy","dispose","_plugins","directives","BScrollspy","install","installFactory"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~c2b0bc75.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _popper = _interopRequireDefault(require(\"popper.js\"));\n\nvar _popover = _interopRequireDefault(require(\"../../utils/popover.class\"));\n\nvar _warn = _interopRequireDefault(require(\"../../utils/warn\"));\n\nvar _env = require(\"../../utils/env\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _object = require(\"../../utils/object\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Key which we use to store tooltip object on element\nvar BV_POPOVER = '__BV_PopOver__'; // Valid event triggers\n\nvar validTriggers = {\n  focus: true,\n  hover: true,\n  click: true,\n  blur: true // Build a PopOver config based on bindings (if any)\n  // Arguments and modifiers take precedence over passed value config object\n\n  /* istanbul ignore next: not easy to test */\n\n};\n\nvar parseBindings = function parseBindings(bindings)\n/* istanbul ignore next: not easy to test */\n{\n  // We start out with a blank config\n  var config = {}; // Process bindings.value\n\n  if ((0, _inspect.isString)(bindings.value)) {\n    // Value is popover content (html optionally supported)\n    config.content = bindings.value;\n  } else if ((0, _inspect.isFunction)(bindings.value)) {\n    // Content generator function\n    config.content = bindings.value;\n  } else if ((0, _inspect.isObject)(bindings.value)) {\n    // Value is config object, so merge\n    config = _objectSpread({}, config, bindings.value);\n  } // If argument, assume element ID of container element\n\n\n  if (bindings.arg) {\n    // Element ID specified as arg\n    // We must prepend '#' to become a CSS selector\n    config.container = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {\n    if (/^html$/.test(mod)) {\n      // Title allows HTML\n      config.html = true;\n    } else if (/^nofade$/.test(mod)) {\n      // no animation\n      config.animation = false;\n    } else if (/^(auto|top(left|right)?|bottom(left|right)?|left(top|bottom)?|right(top|bottom)?)$/.test(mod)) {\n      // placement of popover\n      config.placement = mod;\n    } else if (/^(window|viewport)$/.test(mod)) {\n      // Boundary of popover\n      config.boundary = mod;\n    } else if (/^d\\d+$/.test(mod)) {\n      // Delay value\n      var delay = parseInt(mod.slice(1), 10) || 0;\n\n      if (delay) {\n        config.delay = delay;\n      }\n    } else if (/^o-?\\d+$/.test(mod)) {\n      // Offset value (negative allowed)\n      var offset = parseInt(mod.slice(1), 10) || 0;\n\n      if (offset) {\n        config.offset = offset;\n      }\n    }\n  }); // Special handling of event trigger modifiers trigger is\n  // a space separated list\n\n  var selectedTriggers = {}; // Parse current config object trigger\n\n  var triggers = (0, _inspect.isString)(config.trigger) ? config.trigger.trim().split(/\\s+/) : [];\n  triggers.forEach(function (trigger) {\n    if (validTriggers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Parse modifiers for triggers\n\n  (0, _object.keys)(validTriggers).forEach(function (trigger) {\n    if (bindings.modifiers[trigger]) {\n      selectedTriggers[trigger] = true;\n    }\n  }); // Sanitize triggers\n\n  config.trigger = (0, _object.keys)(selectedTriggers).join(' ');\n\n  if (config.trigger === 'blur') {\n    // Blur by itself is useless, so convert it to focus\n    config.trigger = 'focus';\n  }\n\n  if (!config.trigger) {\n    // Remove trigger config\n    delete config.trigger;\n  }\n\n  return config;\n}; // Add or update PopOver on our element\n\n\nvar applyPopover = function applyPopover(el, bindings, vnode) {\n  if (!_env.isBrowser) {\n    /* istanbul ignore next */\n    return;\n  } // Popper is required for PopOvers to work\n\n\n  if (!_popper.default) {\n    /* istanbul ignore next */\n    (0, _warn.default)('v-b-popover: Popper.js is required for PopOvers to work');\n    /* istanbul ignore next */\n\n    return;\n  }\n\n  var config = parseBindings(bindings);\n\n  if (el[BV_POPOVER]) {\n    el[BV_POPOVER].updateConfig(config);\n  } else {\n    el[BV_POPOVER] = new _popover.default(el, config, vnode.context.$root);\n  }\n}; // Remove PopOver on our element\n\n\nvar removePopover = function removePopover(el) {\n  if (el[BV_POPOVER]) {\n    el[BV_POPOVER].destroy();\n    el[BV_POPOVER] = null;\n    delete el[BV_POPOVER];\n  }\n};\n/*\n * Export our directive\n */\n\n\nvar _default = {\n  bind: function bind(el, bindings, vnode) {\n    applyPopover(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode) {\n    applyPopover(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyPopover(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyPopover(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el) {\n    removePopover(el);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _scrollspy = _interopRequireDefault(require(\"./scrollspy.class\"));\n\nvar _env = require(\"../../utils/env\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Key we use to store our instance\nvar BV_SCROLLSPY = '__BV_ScrollSpy__'; // Build a ScrollSpy config based on bindings (if any)\n// Arguments and modifiers take precedence over passed value config object\n\n/* istanbul ignore next: not easy to test */\n\nvar parseBindings = function parseBindings(bindings)\n/* istanbul ignore next: not easy to test */\n{\n  var config = {}; // If argument, assume element ID\n\n  if (bindings.arg) {\n    // Element ID specified as arg\n    // We must prepend '#' to become a CSS selector\n    config.element = \"#\".concat(bindings.arg);\n  } // Process modifiers\n\n\n  (0, _object.keys)(bindings.modifiers).forEach(function (mod) {\n    if (/^\\d+$/.test(mod)) {\n      // Offset value\n      config.offset = parseInt(mod, 10);\n    } else if (/^(auto|position|offset)$/.test(mod)) {\n      // Offset method\n      config.method = mod;\n    }\n  }); // Process value\n\n  if ((0, _inspect.isString)(bindings.value)) {\n    // Value is a CSS ID or selector\n    config.element = bindings.value;\n  } else if ((0, _inspect.isNumber)(bindings.value)) {\n    // Value is offset\n    config.offset = Math.round(bindings.value);\n  } else if ((0, _inspect.isObject)(bindings.value)) {\n    // Value is config object\n    // Filter the object based on our supported config options\n    (0, _object.keys)(bindings.value).filter(function (k) {\n      return Boolean(_scrollspy.default.DefaultType[k]);\n    }).forEach(function (k) {\n      config[k] = bindings.value[k];\n    });\n  }\n\n  return config;\n}; // Add or update ScrollSpy on our element\n\n\nvar applyScrollspy = function applyScrollspy(el, bindings, vnode)\n/* istanbul ignore next: not easy to test */\n{\n  if (!_env.isBrowser) {\n    /* istanbul ignore next */\n    return;\n  }\n\n  var config = parseBindings(bindings);\n\n  if (el[BV_SCROLLSPY]) {\n    el[BV_SCROLLSPY].updateConfig(config, vnode.context.$root);\n  } else {\n    el[BV_SCROLLSPY] = new _scrollspy.default(el, config, vnode.context.$root);\n  }\n}; // Remove ScrollSpy on our element\n\n/* istanbul ignore next: not easy to test */\n\n\nvar removeScrollspy = function removeScrollspy(el)\n/* istanbul ignore next: not easy to test */\n{\n  if (el[BV_SCROLLSPY]) {\n    el[BV_SCROLLSPY].dispose();\n    el[BV_SCROLLSPY] = null;\n    delete el[BV_SCROLLSPY];\n  }\n};\n/*\n * Export our directive\n */\n\n\nvar _default = {\n  bind: function bind(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    applyScrollspy(el, bindings, vnode);\n  },\n  inserted: function inserted(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    applyScrollspy(el, bindings, vnode);\n  },\n  update: function update(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyScrollspy(el, bindings, vnode);\n    }\n  },\n  componentUpdated: function componentUpdated(el, bindings, vnode)\n  /* istanbul ignore next: not easy to test */\n  {\n    if (bindings.value !== bindings.oldValue) {\n      applyScrollspy(el, bindings, vnode);\n    }\n  },\n  unbind: function unbind(el)\n  /* istanbul ignore next: not easy to test */\n  {\n    removeScrollspy(el);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _scrollspy = _interopRequireDefault(require(\"./scrollspy\"));\n\nvar _plugins = require(\"../../utils/plugins\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar directives = {\n  BScrollspy: _scrollspy.default\n};\nvar _default = {\n  install: (0, _plugins.installFactory)({\n    directives: directives\n  })\n};\nexports.default = _default;"],"sourceRoot":""}