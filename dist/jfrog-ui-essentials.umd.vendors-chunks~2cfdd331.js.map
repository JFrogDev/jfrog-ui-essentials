{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/components/toast/toast.js"],"names":[],"mappings":";;;;;;AAAa;;AAEb;AACA;;AAEA,kCAAkC,mBAAO,CAAC,MAAiB;;AAE3D,iBAAiB,mBAAO,CAAC,MAAY;;AAErC,sCAAsC,mBAAO,CAAC,MAA4B;;AAE1E,cAAc,mBAAO,CAAC,MAAoB;;AAE1C,WAAW,mBAAO,CAAC,MAAiB;;AAEpC,2CAA2C,mBAAO,CAAC,MAA6B;;AAEhF,4CAA4C,mBAAO,CAAC,MAA6B;;AAEjF,0CAA0C,mBAAO,CAAC,MAAwB;;AAE1E,sCAAsC,mBAAO,CAAC,MAAW;;AAEzD,mCAAmC,mBAAO,CAAC,MAAc;;AAEzD,sCAAsC,uCAAuC,gBAAgB;;AAE7F,gCAAgC,gBAAgB,sBAAsB,OAAO,uDAAuD,mCAAmC,0DAA0D,sFAAsF,gEAAgE,EAAE,GAAG,EAAE,iCAAiC,2CAA2C,EAAE,EAAE,EAAE,eAAe;;AAE/d,2CAA2C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAE/M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA,KAAK,EAAE;;AAEP;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;;AAGP;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,KAAK;AACd;AACA;AACA,SAAS;AACT,OAAO,+DAA+D;;AAEtE;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,CAAC;;AAED,4B","file":"jfrog-ui-essentials.umd.vendors-chunks~2cfdd331.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = exports.props = void 0;\n\nvar _vue = _interopRequireDefault(require(\"../../utils/vue\"));\n\nvar _portalVue = require(\"portal-vue\");\n\nvar _bvEvent = _interopRequireDefault(require(\"../../utils/bv-event.class\"));\n\nvar _config = require(\"../../utils/config\");\n\nvar _dom = require(\"../../utils/dom\");\n\nvar _listenOnRoot = _interopRequireDefault(require(\"../../mixins/listen-on-root\"));\n\nvar _normalizeSlot = _interopRequireDefault(require(\"../../mixins/normalize-slot\"));\n\nvar _buttonClose = _interopRequireDefault(require(\"../button/button-close\"));\n\nvar _toaster = _interopRequireDefault(require(\"./toaster\"));\n\nvar _link = _interopRequireDefault(require(\"../link/link\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* istanbul ignore file: for now until ready for testing */\n// --- Constants ---\nvar NAME = 'BToast';\nvar MIN_DURATION = 1000;\nvar props = {\n  id: {\n    type: String,\n    default: null\n  },\n  visible: {\n    type: Boolean,\n    default: false\n  },\n  title: {\n    type: String,\n    default: null\n  },\n  variant: {\n    type: String,\n    default: null\n  },\n  toaster: {\n    type: String,\n    default: function _default() {\n      return (0, _config.getComponentConfig)(NAME, 'toaster') || 'b-toaster-top-right';\n    }\n  },\n  isStatus: {\n    // Switches role to 'status' and aria-live to 'polite'\n    type: Boolean,\n    default: false\n  },\n  appendToast: {\n    type: Boolean,\n    default: false\n  },\n  noAutoHide: {\n    type: Boolean,\n    default: false\n  },\n  autoHideDelay: {\n    type: [Number, String],\n    default: 5000\n  },\n  noCloseButton: {\n    type: Boolean,\n    default: false\n  },\n  noFade: {\n    type: Boolean,\n    default: false\n  },\n  noHoverPause: {\n    type: Boolean,\n    default: false\n  },\n  solid: {\n    type: Boolean,\n    default: false\n  },\n  toastClass: {\n    type: [String, Object, Array],\n    default: ''\n  },\n  headerClass: {\n    type: [String, Object, Array],\n    default: ''\n  },\n  bodyClass: {\n    type: [String, Object, Array],\n    default: ''\n  },\n  href: {\n    type: String,\n    default: null\n  },\n  to: {\n    type: [String, Object],\n    default: null\n  },\n  static: {\n    // Render the toast in place, rather than in a portal-target\n    type: Boolean,\n    default: false\n  } // Transition props defaults\n\n};\nexports.props = props;\nvar DEFAULT_TRANSITION_PROPS = {\n  name: '',\n  enterClass: '',\n  enterActiveClass: '',\n  enterToClass: '',\n  leaveClass: 'show',\n  leaveActiveClass: '',\n  leaveToClass: '' // @vue/component\n\n};\n\nvar _default2 = _vue.default.extend({\n  name: NAME,\n  mixins: [_listenOnRoot.default, _normalizeSlot.default],\n  inheritAttrs: false,\n  model: {\n    prop: 'visible',\n    event: 'change'\n  },\n  props: props,\n  data: function data() {\n    return {\n      isMounted: false,\n      doRender: false,\n      localShow: false,\n      showClass: false,\n      isTransitioning: false,\n      order: 0,\n      timer: null,\n      dismissStarted: 0,\n      resumeDismiss: 0\n    };\n  },\n  computed: {\n    toastClasses: function toastClasses() {\n      return [this.toastClass, {\n        show: this.showClass,\n        fade: !this.noFade\n      }];\n    },\n    bToastClasses: function bToastClasses() {\n      return _defineProperty({\n        'b-toast-solid': this.solid,\n        'b-toast-append': this.appendToast,\n        'b-toast-prepend': !this.appendToast\n      }, \"b-toast-\".concat(this.variant), this.variant);\n    },\n    slotScope: function slotScope() {\n      return {\n        hide: this.hide\n      };\n    },\n    computedDuration: function computedDuration() {\n      // Minimum supported duration is 1 second\n      return Math.max(parseInt(this.autoHideDelay, 10) || 0, MIN_DURATION);\n    },\n    transitionHandlers: function transitionHandlers() {\n      return {\n        beforeEnter: this.onBeforeEnter,\n        afterEnter: this.onAfterEnter,\n        beforeLeave: this.onBeforeLeave,\n        afterLeave: this.onAfterLeave\n      };\n    }\n  },\n  watch: {\n    visible: function visible(newVal) {\n      newVal ? this.show() : this.hide();\n    },\n    localShow: function localShow(newVal) {\n      if (newVal !== this.visible) {\n        this.$emit('change', newVal);\n      }\n    },\n    toaster: function toaster(newVal) {\n      var _this = this;\n\n      // If toaster target changed, make sure toaster exists\n      this.$nextTick(function () {\n        return _this.ensureToaster;\n      });\n    },\n    static: function _static(newVal) {\n      // If static changes to true, and the toast is showing,\n      // ensure the toaster target exists\n      if (newVal && this.localShow) {\n        this.ensureToaster();\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.isMounted = true;\n    this.$nextTick(function () {\n      if (_this2.visible) {\n        (0, _dom.requestAF)(function () {\n          _this2.show();\n        });\n      }\n    }); // Listen for global $root show events\n\n    this.listenOnRoot('bv::show::toast', function (id) {\n      if (id === _this2.id) {\n        _this2.show();\n      }\n    }); // Listen for global $root hide events\n\n    this.listenOnRoot('bv::hide::toast', function (id) {\n      if (!id || id === _this2.id) {\n        _this2.hide();\n      }\n    }); // Make sure we hide when toaster is destroyed\n\n    this.listenOnRoot('bv::toaster::destroyed', function (toaster) {\n      if (toaster === _this2.toaster) {\n        _this2.hide();\n      }\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.clearDismissTimer();\n  },\n  methods: {\n    show: function show() {\n      var _this3 = this;\n\n      if (!this.localShow) {\n        this.ensureToaster();\n        var showEvt = this.buildEvent('show');\n        this.emitEvent(showEvt);\n        this.dismissStarted = this.resumeDismiss = 0;\n        this.order = Date.now() * (this.appendToast ? 1 : -1);\n        this.doRender = true;\n        this.$nextTick(function () {\n          // we show the toast after we have rendered the portal\n          _this3.localShow = true;\n        });\n      }\n    },\n    hide: function hide() {\n      if (this.localShow) {\n        var hideEvt = this.buildEvent('hide');\n        this.emitEvent(hideEvt);\n        this.setHoverHandler(false);\n        this.dismissStarted = this.resumeDismiss = 0;\n        this.clearDismissTimer();\n        this.localShow = false;\n      }\n    },\n    buildEvent: function buildEvent(type) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return new _bvEvent.default(type, _objectSpread({\n        cancelable: false,\n        target: this.$el,\n        relatedTarget: null\n      }, opts, {\n        vueTarget: this,\n        componentId: this.id || null,\n        toastId: this.id || null\n      }));\n    },\n    emitEvent: function emitEvent(bvEvt) {\n      var type = bvEvt.type;\n      this.$root.$emit(\"bv::toast:\".concat(type), bvEvt);\n      this.$emit(type, bvEvt);\n    },\n    ensureToaster: function ensureToaster() {\n      if (this.static) {\n        return;\n      }\n\n      if (!_portalVue.Wormhole.hasTarget(this.toaster)) {\n        var div = document.createElement('div');\n        document.body.append(div);\n        var toaster = new _toaster.default({\n          parent: this.$root,\n          propsData: {\n            name: this.toaster\n          }\n        });\n        toaster.$mount(div);\n      }\n    },\n    startDismissTimer: function startDismissTimer() {\n      this.clearDismissTimer();\n\n      if (!this.noAutoHide) {\n        this.timer = setTimeout(this.hide, this.resumeDismiss || this.computedDuration);\n        this.dismissStarted = Date.now();\n        this.resumeDismiss = 0;\n      }\n    },\n    clearDismissTimer: function clearDismissTimer() {\n      clearTimeout(this.timer);\n      this.timer = null;\n    },\n    setHoverHandler: function setHoverHandler(on) {\n      var method = on ? _dom.eventOn : _dom.eventOff;\n      method(this.$refs.btoast, 'mouseenter', this.onPause, {\n        passive: true,\n        capture: false\n      });\n      method(this.$refs.btoast, 'mouseleave', this.onUnPause, {\n        passive: true,\n        capture: false\n      });\n    },\n    onPause: function onPause(evt) {\n      // Determine time remaining, and then pause timer\n      if (this.noAutoHide || this.noHoverPause || !this.timer || this.resumeDismiss) {\n        return;\n      }\n\n      var passed = Date.now() - this.dismissStarted;\n\n      if (passed > 0) {\n        this.clearDismissTimer();\n        this.resumeDismiss = Math.max(this.computedDuration - passed, MIN_DURATION);\n      }\n    },\n    onUnPause: function onUnPause(evt) {\n      // Restart with max of time remaining or 1 second\n      if (this.noAutoHide || this.noHoverPause || !this.resumeDismiss) {\n        this.resumeDismiss = this.dismissStarted = 0;\n        return;\n      }\n\n      this.startDismissTimer();\n    },\n    onLinkClick: function onLinkClick() {\n      var _this4 = this;\n\n      // We delay the close to allow time for the\n      // browser to process the link click\n      this.$nextTick(function () {\n        (0, _dom.requestAF)(function () {\n          _this4.hide();\n        });\n      });\n    },\n    onBeforeEnter: function onBeforeEnter() {\n      var _this5 = this;\n\n      this.isTransitioning = true;\n      (0, _dom.requestAF)(function () {\n        _this5.showClass = true;\n      });\n    },\n    onAfterEnter: function onAfterEnter() {\n      this.isTransitioning = false;\n      var hiddenEvt = this.buildEvent('shown');\n      this.emitEvent(hiddenEvt);\n      this.startDismissTimer();\n      this.setHoverHandler(true);\n    },\n    onBeforeLeave: function onBeforeLeave() {\n      var _this6 = this;\n\n      this.isTransitioning = true;\n      (0, _dom.requestAF)(function () {\n        _this6.showClass = false;\n      });\n    },\n    onAfterLeave: function onAfterLeave() {\n      this.isTransitioning = false;\n      this.order = 0;\n      this.resumeDismiss = this.dismissStarted = 0;\n      var hiddenEvt = this.buildEvent('hidden');\n      this.emitEvent(hiddenEvt);\n      this.doRender = false;\n    },\n    makeToast: function makeToast(h) {\n      var _this7 = this;\n\n      // Render helper for generating the toast\n      // Assemble the header content\n      var $headerContent = [];\n      var $title = this.normalizeSlot('toast-title', this.slotScope);\n\n      if ($title) {\n        $headerContent.push($title);\n      } else if (this.title) {\n        $headerContent.push(h('strong', {\n          staticClass: 'mr-2'\n        }, this.title));\n      }\n\n      if (!this.noCloseButton) {\n        $headerContent.push(h(_buttonClose.default, {\n          staticClass: 'ml-auto mb-1',\n          on: {\n            click: function click(evt) {\n              _this7.hide();\n            }\n          }\n        }));\n      } // Assemble the header (if needed)\n\n\n      var $header = h(false);\n\n      if ($headerContent.length > 0) {\n        $header = h('header', {\n          staticClass: 'toast-header',\n          class: this.headerClass\n        }, $headerContent);\n      } // Toast body\n\n\n      var isLink = this.href || this.to;\n      var $body = h(isLink ? _link.default : 'div', {\n        staticClass: 'toast-body',\n        class: this.bodyClass,\n        props: isLink ? {\n          to: this.to,\n          href: this.href\n        } : {},\n        on: isLink ? {\n          click: this.onLinkClick\n        } : {}\n      }, [this.normalizeSlot('default', this.slotScope) || h(false)]); // Build the toast\n\n      var $toast = h('div', {\n        key: 'toast',\n        ref: 'toast',\n        staticClass: 'toast',\n        class: this.toastClasses,\n        attrs: _objectSpread({}, this.$attrs, {\n          id: this.id || null,\n          tabindex: '-1',\n          role: this.isStatus ? 'status' : 'alert',\n          'aria-live': this.isStatus ? 'polite' : 'assertive',\n          'aria-atomic': 'true'\n        })\n      }, [$header, $body]);\n      return $toast;\n    }\n  },\n  render: function render(h) {\n    if (!this.doRender || !this.isMounted) {\n      return h(false);\n    }\n\n    var name = \"b-toast-\".concat(this._uid);\n    return h(_portalVue.Portal, {\n      props: {\n        name: name,\n        to: this.toaster,\n        order: this.order,\n        slim: true,\n        disabled: this.static\n      }\n    }, [h('div', {\n      key: name,\n      ref: 'btoast',\n      staticClass: 'b-toast',\n      class: this.bToastClasses\n    }, [h('transition', {\n      props: DEFAULT_TRANSITION_PROPS,\n      on: this.transitionHandlers\n    }, [this.localShow ? this.makeToast(h) : null])])]);\n  }\n});\n\nexports.default = _default2;"],"sourceRoot":""}