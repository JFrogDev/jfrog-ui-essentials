{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/portal-vue/dist/portal-vue.common.js"],"names":["_interopDefault","ex","Object","defineProperty","exports","value","Vue","__webpack_require__","_typeof","obj","Symbol","iterator","constructor","prototype","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","Array","isArray","i","arr2","length","iter","toString","call","from","TypeError","inBrowser","window","freeze","item","combinePassengers","transports","slotProps","arguments","undefined","reduce","passengers","transport","temp","newPassengers","concat","stableSort","array","compareFn","map","v","idx","sort","a","b","c","pick","keys","acc","key","hasOwnProperty","targets","sources","Wormhole","extend","data","trackInstances","methods","open","to","_transport$order","order","Infinity","newTransport","this","indexOf","set","currentIndex","$_getTransportIndex","newTransports","slice","push","close","force","index","splice","registerTarget","target","vm","console","warn","$set","unregisterTarget","$delete","registerSource","source","unregisterSource","hasTarget","hasSource","hasContentFor","_ref","wormhole","_id","Portal","name","props","disabled","type","Boolean","String","default","Number","slim","tag","Math","round","random","created","mounted","sendUpdate","updated","clear","beforeDestroy","watch","newValue","oldValue","closer","normalizeSlots","$scopedSlots","$slots","normalizeOwnChildren","children","slotContent","render","h","Tag","class","v-portal","style","display","PortalTarget","multiple","required","transition","Function","firstRender","ownTransports","$emit","newVal","oldVal","_this","$nextTick","computed","noWrapper","vue-portal-target","_id$1","portalProps","targetProps","MountingPortal","inheritAttrs","append","bail","mountTo","targetSlim","targetSlotProps","targetTag","document","el","querySelector","$props","portalTarget","mountEl","createElement","appendChild","_props","parent","$parent","propsData","error","$el","parentNode","removeChild","$destroy","manual","attrs","$attrs","on","$listeners","scopedSlots","content","install","Vue$$1","options","component","portalName","portalTargetName","MountingPortalName"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~c214cc92.js","sourcesContent":["\n /*! \n  * portal-vue © Thorsten Lünborg, 2019 \n  * \n  * Version: 2.1.3\n  * \n  * LICENCE: MIT \n  * \n  * https://github.com/linusborg/portal-vue\n  * \n */\n\n'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Vue = _interopDefault(require('vue'));\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar inBrowser = typeof window !== 'undefined';\nfunction freeze(item) {\n  if (Array.isArray(item) || _typeof(item) === 'object') {\n    return Object.freeze(item);\n  }\n\n  return item;\n}\nfunction combinePassengers(transports) {\n  var slotProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return transports.reduce(function (passengers, transport) {\n    var temp = transport.passengers[0];\n    var newPassengers = typeof temp === 'function' ? temp(slotProps) : transport.passengers;\n    return passengers.concat(newPassengers);\n  }, []);\n}\nfunction stableSort(array, compareFn) {\n  return array.map(function (v, idx) {\n    return [idx, v];\n  }).sort(function (a, b) {\n    return compareFn(a[1], b[1]) || a[0] - b[0];\n  }).map(function (c) {\n    return c[1];\n  });\n}\nfunction pick(obj, keys) {\n  return keys.reduce(function (acc, key) {\n    if (obj.hasOwnProperty(key)) {\n      acc[key] = obj[key];\n    }\n\n    return acc;\n  }, {});\n}\n\nvar transports = {};\nvar targets = {};\nvar sources = {};\nvar Wormhole = Vue.extend({\n  data: function data() {\n    return {\n      transports: transports,\n      targets: targets,\n      sources: sources,\n      trackInstances: inBrowser\n    };\n  },\n  methods: {\n    open: function open(transport) {\n      if (!inBrowser) return;\n      var to = transport.to,\n          from = transport.from,\n          passengers = transport.passengers,\n          _transport$order = transport.order,\n          order = _transport$order === void 0 ? Infinity : _transport$order;\n      if (!to || !from || !passengers) return;\n      var newTransport = {\n        to: to,\n        from: from,\n        passengers: freeze(passengers),\n        order: order\n      };\n      var keys = Object.keys(this.transports);\n\n      if (keys.indexOf(to) === -1) {\n        Vue.set(this.transports, to, []);\n      }\n\n      var currentIndex = this.$_getTransportIndex(newTransport); // Copying the array here so that the PortalTarget change event will actually contain two distinct arrays\n\n      var newTransports = this.transports[to].slice(0);\n\n      if (currentIndex === -1) {\n        newTransports.push(newTransport);\n      } else {\n        newTransports[currentIndex] = newTransport;\n      }\n\n      this.transports[to] = stableSort(newTransports, function (a, b) {\n        return a.order - b.order;\n      });\n    },\n    close: function close(transport) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var to = transport.to,\n          from = transport.from;\n      if (!to || !from) return;\n\n      if (!this.transports[to]) {\n        return;\n      }\n\n      if (force) {\n        this.transports[to] = [];\n      } else {\n        var index = this.$_getTransportIndex(transport);\n\n        if (index >= 0) {\n          // Copying the array here so that the PortalTarget change event will actually contain two distinct arrays\n          var newTransports = this.transports[to].slice(0);\n          newTransports.splice(index, 1);\n          this.transports[to] = newTransports;\n        }\n      }\n    },\n    registerTarget: function registerTarget(target, vm, force) {\n      if (!inBrowser) return;\n\n      if (this.trackInstances && !force && this.targets[target]) {\n        console.warn(\"[portal-vue]: Target \".concat(target, \" already exists\"));\n      }\n\n      this.$set(this.targets, target, Object.freeze([vm]));\n    },\n    unregisterTarget: function unregisterTarget(target) {\n      this.$delete(this.targets, target);\n    },\n    registerSource: function registerSource(source, vm, force) {\n      if (!inBrowser) return;\n\n      if (this.trackInstances && !force && this.sources[source]) {\n        console.warn(\"[portal-vue]: source \".concat(source, \" already exists\"));\n      }\n\n      this.$set(this.sources, source, Object.freeze([vm]));\n    },\n    unregisterSource: function unregisterSource(source) {\n      this.$delete(this.sources, source);\n    },\n    hasTarget: function hasTarget(to) {\n      return !!(this.targets[to] && this.targets[to][0]);\n    },\n    hasSource: function hasSource(to) {\n      return !!(this.sources[to] && this.sources[to][0]);\n    },\n    hasContentFor: function hasContentFor(to) {\n      return !!this.transports[to] && !!this.transports[to].length;\n    },\n    // Internal\n    $_getTransportIndex: function $_getTransportIndex(_ref) {\n      var to = _ref.to,\n          from = _ref.from;\n\n      for (var i in this.transports[to]) {\n        if (this.transports[to][i].from === from) {\n          return +i;\n        }\n      }\n\n      return -1;\n    }\n  }\n});\nvar wormhole = new Wormhole(transports);\n\nvar _id = 1;\nvar Portal = Vue.extend({\n  name: 'portal',\n  props: {\n    disabled: {\n      type: Boolean\n    },\n    name: {\n      type: String,\n      default: function _default() {\n        return String(_id++);\n      }\n    },\n    order: {\n      type: Number,\n      default: 0\n    },\n    slim: {\n      type: Boolean\n    },\n    slotProps: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    tag: {\n      type: String,\n      default: 'DIV'\n    },\n    to: {\n      type: String,\n      default: function _default() {\n        return String(Math.round(Math.random() * 10000000));\n      }\n    }\n  },\n  created: function created() {\n    wormhole.registerSource(this.name, this);\n  },\n  mounted: function mounted() {\n    if (!this.disabled) {\n      this.sendUpdate();\n    }\n  },\n  updated: function updated() {\n    if (this.disabled) {\n      this.clear();\n    } else {\n      this.sendUpdate();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    wormhole.unregisterSource(this.name);\n    this.clear();\n  },\n  watch: {\n    to: function to(newValue, oldValue) {\n      oldValue && oldValue !== newValue && this.clear(oldValue);\n      this.sendUpdate();\n    }\n  },\n  methods: {\n    clear: function clear(target) {\n      var closer = {\n        from: this.name,\n        to: target || this.to\n      };\n      wormhole.close(closer);\n    },\n    normalizeSlots: function normalizeSlots() {\n      return this.$scopedSlots.default ? [this.$scopedSlots.default] : this.$slots.default;\n    },\n    normalizeOwnChildren: function normalizeOwnChildren(children) {\n      return typeof children === 'function' ? children(this.slotProps) : children;\n    },\n    sendUpdate: function sendUpdate() {\n      var slotContent = this.normalizeSlots();\n\n      if (slotContent) {\n        var transport = {\n          from: this.name,\n          to: this.to,\n          passengers: _toConsumableArray(slotContent),\n          order: this.order\n        };\n        wormhole.open(transport);\n      } else {\n        this.clear();\n      }\n    }\n  },\n  render: function render(h) {\n    var children = this.$slots.default || this.$scopedSlots.default || [];\n    var Tag = this.tag;\n\n    if (children && this.disabled) {\n      return children.length <= 1 && this.slim ? this.normalizeOwnChildren(children)[0] : h(Tag, [this.normalizeOwnChildren(children)]);\n    } else {\n      return this.slim ? h() : h(Tag, {\n        class: {\n          'v-portal': true\n        },\n        style: {\n          display: 'none'\n        },\n        key: 'v-portal-placeholder'\n      });\n    }\n  }\n});\n\nvar PortalTarget = Vue.extend({\n  name: 'portalTarget',\n  props: {\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    name: {\n      type: String,\n      required: true\n    },\n    slim: {\n      type: Boolean,\n      default: false\n    },\n    slotProps: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    tag: {\n      type: String,\n      default: 'div'\n    },\n    transition: {\n      type: [String, Object, Function]\n    }\n  },\n  data: function data() {\n    return {\n      transports: wormhole.transports,\n      firstRender: true\n    };\n  },\n  created: function created() {\n    wormhole.registerTarget(this.name, this);\n  },\n  watch: {\n    ownTransports: function ownTransports() {\n      this.$emit('change', this.children().length > 0);\n    },\n    name: function name(newVal, oldVal) {\n      /**\r\n       * TODO\r\n       * This should warn as well ...\r\n       */\n      wormhole.unregisterTarget(oldVal);\n      wormhole.registerTarget(newVal, this);\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    if (this.transition) {\n      this.$nextTick(function () {\n        // only when we have a transition, because it causes a re-render\n        _this.firstRender = false;\n      });\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    wormhole.unregisterTarget(this.name);\n  },\n  computed: {\n    ownTransports: function ownTransports() {\n      var transports = this.transports[this.name] || [];\n\n      if (this.multiple) {\n        return transports;\n      }\n\n      return transports.length === 0 ? [] : [transports[transports.length - 1]];\n    },\n    passengers: function passengers() {\n      return combinePassengers(this.ownTransports, this.slotProps);\n    }\n  },\n  methods: {\n    // can't be a computed prop because it has to \"react\" to $slot changes.\n    children: function children() {\n      return this.passengers.length !== 0 ? this.passengers : this.$scopedSlots.default ? this.$scopedSlots.default(this.slotProps) : this.$slots.default || [];\n    },\n    // can't be a computed prop because it has to \"react\" to this.children().\n    noWrapper: function noWrapper() {\n      var noWrapper = this.slim && !this.transition;\n\n      if (noWrapper && this.children().length > 1) {\n        console.warn('[portal-vue]: PortalTarget with `slim` option received more than one child element.');\n      }\n\n      return noWrapper;\n    }\n  },\n  render: function render(h) {\n    var noWrapper = this.noWrapper();\n    var children = this.children();\n    var Tag = this.transition || this.tag;\n    return noWrapper ? children[0] : this.slim && !Tag ? h() : h(Tag, {\n      props: {\n        // if we have a transition component, pass the tag if it exists\n        tag: this.transition && this.tag ? this.tag : undefined\n      },\n      class: {\n        'vue-portal-target': true\n      }\n    }, children);\n  }\n});\n\nvar _id$1 = 0;\nvar portalProps = ['disabled', 'name', 'order', 'slim', 'slotProps', 'tag', 'to'];\nvar targetProps = ['multiple', 'transition'];\nvar MountingPortal = Vue.extend({\n  name: 'MountingPortal',\n  inheritAttrs: false,\n  props: {\n    append: {\n      type: [Boolean, String]\n    },\n    bail: {\n      type: Boolean\n    },\n    mountTo: {\n      type: String,\n      required: true\n    },\n    // Portal\n    disabled: {\n      type: Boolean\n    },\n    // name for the portal\n    name: {\n      type: String,\n      default: function _default() {\n        return 'mounted_' + String(_id$1++);\n      }\n    },\n    order: {\n      type: Number,\n      default: 0\n    },\n    slim: {\n      type: Boolean\n    },\n    slotProps: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    tag: {\n      type: String,\n      default: 'DIV'\n    },\n    // name for the target\n    to: {\n      type: String,\n      default: function _default() {\n        return String(Math.round(Math.random() * 10000000));\n      }\n    },\n    // Target\n    multiple: {\n      type: Boolean,\n      default: false\n    },\n    targetSlim: {\n      type: Boolean\n    },\n    targetSlotProps: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    targetTag: {\n      type: String,\n      default: 'div'\n    },\n    transition: {\n      type: [String, Object, Function]\n    }\n  },\n  created: function created() {\n    if (typeof document === 'undefined') return;\n    var el = document.querySelector(this.mountTo);\n\n    if (!el) {\n      console.error(\"[portal-vue]: Mount Point '\".concat(this.mountTo, \"' not found in document\"));\n      return;\n    }\n\n    var props = this.$props; // Target already exists\n\n    if (wormhole.targets[props.name]) {\n      if (props.bail) {\n        console.warn(\"[portal-vue]: Target \".concat(props.name, \" is already mounted.\\n        Aborting because 'bail: true' is set\"));\n      } else {\n        this.portalTarget = wormhole.targets[props.name];\n      }\n\n      return;\n    }\n\n    var append = props.append;\n\n    if (append) {\n      var type = typeof append === 'string' ? append : 'DIV';\n      var mountEl = document.createElement(type);\n      el.appendChild(mountEl);\n      el = mountEl;\n    } // get props for target from $props\n    // we have to rename a few of them\n\n\n    var _props = pick(this.$props, targetProps);\n\n    _props.slim = this.targetSlim;\n    _props.tag = this.targetTag;\n    _props.slotProps = this.targetSlotProps;\n    _props.name = this.to;\n    this.portalTarget = new PortalTarget({\n      el: el,\n      parent: this.$parent || this,\n      propsData: _props\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    var target = this.portalTarget;\n\n    if (this.append) {\n      var el = target.$el;\n      el.parentNode.removeChild(el);\n    }\n\n    target.$destroy();\n  },\n  render: function render(h) {\n    if (!this.portalTarget) {\n      console.warn(\"[portal-vue] Target wasn't mounted\");\n      return h();\n    } // if there's no \"manual\" scoped slot, so we create a <Portal> ourselves\n\n\n    if (!this.$scopedSlots.manual) {\n      var props = pick(this.$props, portalProps);\n      return h(Portal, {\n        props: props,\n        attrs: this.$attrs,\n        on: this.$listeners,\n        scopedSlots: this.$scopedSlots\n      }, this.$slots.default);\n    } // else, we render the scoped slot\n\n\n    var content = this.$scopedSlots.manual({\n      to: this.to\n    }); // if user used <template> for the scoped slot\n    // content will be an array\n\n    if (Array.isArray(content)) {\n      content = content[0];\n    }\n\n    if (!content) return h();\n    return content;\n  }\n});\n\nfunction install(Vue$$1) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  Vue$$1.component(options.portalName || 'Portal', Portal);\n  Vue$$1.component(options.portalTargetName || 'PortalTarget', PortalTarget);\n  Vue$$1.component(options.MountingPortalName || 'MountingPortal', MountingPortal);\n}\n\nvar index = {\n  install: install\n};\n\nexports.default = index;\nexports.Portal = Portal;\nexports.PortalTarget = PortalTarget;\nexports.MountingPortal = MountingPortal;\nexports.Wormhole = wormhole;\n//# sourceMappingURL=portal-vue.common.js.map\n"],"sourceRoot":""}