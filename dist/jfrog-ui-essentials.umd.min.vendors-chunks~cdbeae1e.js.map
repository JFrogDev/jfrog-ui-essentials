{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/bootstrap-vue/es/mixins/toolpop.js"],"names":["exports","__esModule","default","_observeDom","_interopRequireDefault","__webpack_require__","_dom","_inspect","_safeTypes","obj","_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","value","defineProperty","configurable","writable","PLACEMENTS","top","topleft","topright","right","righttop","rightbottom","bottom","bottomleft","bottomright","left","lefttop","leftbottom","auto","OBSERVER_CONFIG","subtree","childList","characterData","attributes","attributeFilter","_default","props","type","String","HTMLElement","Function","delay","Number","offset","noFade","Boolean","container","boundary","boundaryPadding","show","disabled","data","localShow","computed","baseConfig","cont","this","isObject","parseInt","title","trim","content","placement","test","animation","trigger","isArray","triggers","join","callbacks","onShow","shown","onShown","hide","onHide","hidden","onHidden","enabled","onEnabled","onDisabled","watch","_show","old","onOpen","onClose","_disabled","onDisable","onEnable","$emit","created","_toolpop","_obs_title","_obs_content","mounted","_this","$nextTick","createToolpop","$on","setObservers","updated","updateConfig","getConfig","activated","deactivated","beforeDestroy","$off","bringItBack","destroy","methods","cfg","$refs","innerHTML","html","callback","isFunction","disable","enable","updatePosition","update","getTarget","isString","getById","isElement","$el","evt","defaultPrevented","appendChild","on","bind","disconnect"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~cdbeae1e.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _observeDom = _interopRequireDefault(require(\"../utils/observe-dom\"));\n\nvar _dom = require(\"../utils/dom\");\n\nvar _inspect = require(\"../utils/inspect\");\n\nvar _safeTypes = require(\"../utils/safe-types\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// --- Constants ---\nvar PLACEMENTS = {\n  top: 'top',\n  topleft: 'topleft',\n  topright: 'topright',\n  right: 'right',\n  righttop: 'righttop',\n  rightbottom: 'rightbottom',\n  bottom: 'bottom',\n  bottomleft: 'bottomleft',\n  bottomright: 'bottomright',\n  left: 'left',\n  lefttop: 'lefttop',\n  leftbottom: 'leftbottom',\n  auto: 'auto'\n};\nvar OBSERVER_CONFIG = {\n  subtree: true,\n  childList: true,\n  characterData: true,\n  attributes: true,\n  attributeFilter: ['class', 'style'] // @vue/component\n\n};\nvar _default = {\n  props: {\n    target: {\n      // String ID of element, or element/component reference\n      type: [String, Object, _safeTypes.HTMLElement, Function] // default: undefined\n\n    },\n    delay: {\n      type: [Number, Object, String],\n      default: 0\n    },\n    offset: {\n      type: [Number, String],\n      default: 0\n    },\n    noFade: {\n      type: Boolean,\n      default: false\n    },\n    container: {\n      // String ID of container, if null body is used (default)\n      type: String,\n      default: null\n    },\n    boundary: {\n      // String: scrollParent, window, or viewport\n      // Element: element reference\n      type: [String, _safeTypes.HTMLElement],\n      default: 'scrollParent'\n    },\n    boundaryPadding: {\n      type: Number,\n      default: 5\n    },\n    show: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      // semaphore for preventing multiple show events\n      localShow: false\n    };\n  },\n  computed: {\n    baseConfig: function baseConfig() {\n      var cont = this.container;\n      var delay = (0, _inspect.isObject)(this.delay) ? this.delay : parseInt(this.delay, 10) || 0;\n      return {\n        // Title prop\n        title: (this.title || '').trim() || '',\n        // Content prop (if popover)\n        content: (this.content || '').trim() || '',\n        // Tooltip/Popover placement\n        placement: PLACEMENTS[this.placement] || 'auto',\n        // Container currently needs to be an ID with '#' prepended, if null then body is used\n        container: cont ? /^#/.test(cont) ? cont : \"#\".concat(cont) : false,\n        // boundariesElement passed to popper\n        boundary: this.boundary,\n        // boundariesElement padding passed to popper\n        boundaryPadding: this.boundaryPadding,\n        // Show/Hide delay\n        delay: delay || 0,\n        // Offset can be css distance. if no units, pixels are assumed\n        offset: this.offset || 0,\n        // Disable fade Animation?\n        animation: !this.noFade,\n        // Open/Close Trigger(s)\n        trigger: (0, _inspect.isArray)(this.triggers) ? this.triggers.join(' ') : this.triggers,\n        // Callbacks so we can trigger events on component\n        callbacks: {\n          show: this.onShow,\n          shown: this.onShown,\n          hide: this.onHide,\n          hidden: this.onHidden,\n          enabled: this.onEnabled,\n          disabled: this.onDisabled\n        }\n      };\n    }\n  },\n  watch: {\n    show: function show(_show, old) {\n      if (_show !== old) {\n        _show ? this.onOpen() : this.onClose();\n      }\n    },\n    disabled: function disabled(_disabled, old) {\n      if (_disabled !== old) {\n        _disabled ? this.onDisable() : this.onEnable();\n      }\n    },\n    localShow: function localShow(show, old) {\n      if (show !== this.show) {\n        this.$emit('update:show', show);\n      }\n    }\n  },\n  created: function created() {\n    // Create non-reactive property\n    this._toolpop = null;\n    this._obs_title = null;\n    this._obs_content = null;\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // We do this in a next tick to ensure DOM has rendered first\n    this.$nextTick(function () {\n      // Instantiate ToolTip/PopOver on target\n      // The createToolpop method must exist in main component\n      if (_this.createToolpop()) {\n        if (_this.disabled) {\n          // Initially disabled\n          _this.onDisable();\n        } // Listen to open signals from others\n\n\n        _this.$on('open', _this.onOpen); // Listen to close signals from others\n\n\n        _this.$on('close', _this.onClose); // Listen to disable signals from others\n\n\n        _this.$on('disable', _this.onDisable); // Listen to enable signals from others\n\n\n        _this.$on('enable', _this.onEnable); // Observe content Child changes so we can notify popper of possible size change\n\n\n        _this.setObservers(true); // Set initially open state\n\n\n        if (_this.show) {\n          _this.onOpen();\n        }\n      }\n    });\n  },\n  updated: function updated() {\n    // If content/props changes, etc\n    if (this._toolpop) {\n      this._toolpop.updateConfig(this.getConfig());\n    }\n  },\n  activated: function activated()\n  /* istanbul ignore next: can't easily test in JSDOM */\n  {\n    // Called when component is inside a <keep-alive> and component brought offline\n    this.setObservers(true);\n  },\n  deactivated: function deactivated()\n  /* istanbul ignore next: can't easily test in JSDOM */\n  {\n    // Called when component is inside a <keep-alive> and component taken offline\n    if (this._toolpop) {\n      this.setObservers(false);\n\n      this._toolpop.hide();\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Shutdown our local event listeners\n    this.$off('open', this.onOpen);\n    this.$off('close', this.onClose);\n    this.$off('disable', this.onDisable);\n    this.$off('enable', this.onEnable);\n    this.setObservers(false); // bring our content back if needed\n\n    this.bringItBack();\n\n    if (this._toolpop) {\n      this._toolpop.destroy();\n\n      this._toolpop = null;\n    }\n  },\n  methods: {\n    getConfig: function getConfig() {\n      var cfg = _objectSpread({}, this.baseConfig);\n\n      if (this.$refs.title && this.$refs.title.innerHTML.trim()) {\n        // If slot has content, it overrides 'title' prop\n        // We use the DOM node as content to allow components!\n        cfg.title = this.$refs.title;\n        cfg.html = true;\n      }\n\n      if (this.$refs.content && this.$refs.content.innerHTML.trim()) {\n        // If slot has content, it overrides 'content' prop\n        // We use the DOM node as content to allow components!\n        cfg.content = this.$refs.content;\n        cfg.html = true;\n      }\n\n      return cfg;\n    },\n    onOpen: function onOpen() {\n      if (this._toolpop && !this.localShow) {\n        this.localShow = true;\n\n        this._toolpop.show();\n      }\n    },\n    onClose: function onClose(callback) {\n      // What is callback for ? it is not documented\n\n      /* istanbul ignore else */\n      if (this._toolpop && this.localShow) {\n        this._toolpop.hide(callback);\n      } else if ((0, _inspect.isFunction)(callback)) {\n        // Is this even used?\n        callback();\n      }\n    },\n    onDisable: function onDisable() {\n      if (this._toolpop) {\n        this._toolpop.disable();\n      }\n    },\n    onEnable: function onEnable() {\n      if (this._toolpop) {\n        this._toolpop.enable();\n      }\n    },\n    updatePosition: function updatePosition() {\n      /* istanbul ignore next: can't test in JSDOM until mutation observer is implemented */\n      if (this._toolpop) {\n        // Instruct popper to reposition popover if necessary\n        this._toolpop.update();\n      }\n    },\n    getTarget: function getTarget() {\n      var target = this.target;\n\n      if ((0, _inspect.isFunction)(target)) {\n        /* istanbul ignore next */\n        target = target();\n      }\n      /* istanbul ignore else */\n\n\n      if ((0, _inspect.isString)(target)) {\n        // Assume ID of element\n        return (0, _dom.getById)(target);\n      } else if ((0, _inspect.isObject)(target) && (0, _dom.isElement)(target.$el)) {\n        // Component reference\n\n        /* istanbul ignore next */\n        return target.$el;\n      } else if ((0, _inspect.isObject)(target) && (0, _dom.isElement)(target)) {\n        // Element reference\n\n        /* istanbul ignore next */\n        return target;\n      }\n      /* istanbul ignore next */\n\n\n      return null;\n    },\n    // Callbacks called by Tooltip/Popover class instance\n    onShow: function onShow(evt) {\n      this.$emit('show', evt);\n      this.localShow = !(evt && evt.defaultPrevented);\n    },\n    onShown: function onShown(evt) {\n      this.setObservers(true);\n      this.$emit('shown', evt);\n      this.localShow = true;\n    },\n    onHide: function onHide(evt) {\n      this.$emit('hide', evt);\n      this.localShow = !!(evt && evt.defaultPrevented);\n    },\n    onHidden: function onHidden(evt) {\n      this.setObservers(false); // bring our content back if needed to keep Vue happy\n      // Tooltip class will move it back to tip when shown again\n\n      this.bringItBack();\n      this.$emit('hidden', evt);\n      this.localShow = false;\n    },\n    onEnabled: function onEnabled(evt) {\n      /* istanbul ignore next */\n      if (!evt || evt.type !== 'enabled') {\n        // Prevent possible endless loop if user mistakenly fires enabled instead of enable\n        return;\n      }\n\n      this.$emit('update:disabled', false);\n      this.$emit('disabled');\n    },\n    onDisabled: function onDisabled(evt) {\n      /* istanbul ignore next */\n      if (!evt || evt.type !== 'disabled') {\n        // Prevent possible endless loop if user mistakenly fires disabled instead of disable\n        return;\n      }\n\n      this.$emit('update:disabled', true);\n      this.$emit('enabled');\n    },\n    bringItBack: function bringItBack() {\n      // bring our content back if needed to keep Vue happy\n      if (this.$el && this.$refs.title) {\n        this.$el.appendChild(this.$refs.title);\n      }\n\n      if (this.$el && this.$refs.content) {\n        this.$el.appendChild(this.$refs.content);\n      }\n    },\n    setObservers: function setObservers(on) {\n      if (on) {\n        if (this.$refs.title) {\n          this._obs_title = (0, _observeDom.default)(this.$refs.title, this.updatePosition.bind(this), OBSERVER_CONFIG);\n        }\n\n        if (this.$refs.content) {\n          this._obs_content = (0, _observeDom.default)(this.$refs.content, this.updatePosition.bind(this), OBSERVER_CONFIG);\n        }\n      } else {\n        if (this._obs_title) {\n          this._obs_title.disconnect();\n\n          this._obs_title = null;\n        }\n\n        if (this._obs_content) {\n          this._obs_content.disconnect();\n\n          this._obs_content = null;\n        }\n      }\n    }\n  }\n};\nexports.default = _default;"],"sourceRoot":""}