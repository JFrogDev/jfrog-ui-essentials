{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/js-beautify/js/lib/beautify-html.js"],"names":["__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","legacy_beautify_html","modules","installedModules","__webpack_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","OutputLine","parent","this","__parent","__character_count","__indent_count","__alignment_count","__wrap_point_index","__wrap_point_character_count","__wrap_point_indent_count","__wrap_point_alignment_count","__items","IndentStringCache","options","baseIndentString","__cache","__indent_size","indent_size","__indent_string","indent_char","indent_with_tabs","Array","join","indent_level","__base_string","__base_string_length","length","Output","__indent_cache","raw","_end_with_newline","end_with_newline","wrap_line_length","__lines","previous_line","current_line","next_line","space_before_token","non_breaking_space","previous_token_wrapped","__add_outputline","clone_empty","line","set_indent","item","index","has_match","pattern","lastCheckedOutput","match","indent","alignment","is_empty","get_indent_size","_set_wrap_point","_should_wrap","_allow_wrap","add_new_line","next","slice","splice","last","push","last_newline_index","lastIndexOf","pop","_remove_indent","_remove_wrap_indent","trim","toString","result","get_indent_string","column","__ensure_cache","__add_column","Math","floor","get_line_number","force_newline","just_added_newline","get_code","eol","last_item","replace","sweet_code","set_wrap_point","add_raw_token","token","x","newlines","whitespace_before","text","add_token","printable_token","__add_space_before_token","remove_indent","output_length","eat_newlines","undefined","just_added_blankline","ensure_empty_line_above","starts_with","ends_with","potentialEmptyLine","indexOf","Token","type","comments_before","previous","opened","closed","directives","Options","merge_child_field","raw_options","_mergeOpts","disabled","_get_boolean","_get_characters","_get_number","preserve_newlines","max_preserve_newlines","allOptions","childFieldName","finalOpts","_normalizeOpts","convertedOpts","newKey","_get_array","default_value","option_value","concat","split","parseInt","isNaN","_get_selection","selection_list","_get_selection_list","Error","_is_valid_selection","some","normalizeOpts","mergeOpts","regexp_has_sticky","RegExp","InputScanner","input_string","__input","__input_length","__position","restart","back","hasNext","val","charAt","peek","__match","lastIndex","pattern_match","exec","sticky","test","testChar","read","starting_pattern","until_pattern","until_after","readUntil","match_index","substring","readUntilAfter","get_regexp","match_from","flags","source","get_literal_regexp","literal_string","peekUntilAfter","start","lookBack","testVal","toLowerCase","TokenStream","WhitespacePattern","TOKEN","START","RAW","EOF","Tokenizer","_input","_options","__tokens","_patterns","whitespace","tokenize","current","_reset","open_token","open_stack","comments","_get_next_token","_is_comment","add","isEmpty","_is_opening","_is_closing","_is_first_token","previous_token","_readWhitespace","resulting_string","_create_token","current_token","newline_count","whitespace_before_token","parent_token","__tokens_length","__parent_token","Pattern","input_scanner","_line_regexp","__set_whitespace_patterns","whitespace_chars","newline_chars","_match_pattern","_newline_regexp","matches","__split","matching","_create","_update","regexp","start_index","next_match","_starting_pattern","_until_pattern","_until_after","read_match","until","starting_with","Directives","start_block_pattern","end_block_pattern","__directives_block_pattern","__directive_pattern","__directives_end_ignore_pattern","get_directives","directive_match","readIgnored","input","template_names","django","erb","handlebars","php","TemplatablePattern","__template_pattern","_disabled","assign","_excluded","__patterns","handlebars_comment","django_value","django_comment","__set_templated_pattern","disable","language","exclude","_read_template","items","peek1","Beautifier","style_html","html_source","js_beautify","css_beautify","beautifier","beautify","defaultOptions","lineBreak","allLineBreaks","Printer","base_indent_string","alignment_size","_output","current_line_has_match","set_space_before_token","non_breaking","print_preserved_newlines","raw_token","TEXT","print_newline","traverse_whitespace","force","print_token","get_full_indent","level","get_type_attribute","start_token","ATTRIBUTE","EQUALS","VALUE","get_custom_beautifier_name","tag_check","typeAttribute","search","in_array","what","arr","TagFrame","parser_token","tag","tag_name","TagStack","printer","_printer","_current_frame","source_text","_source_text","_js_beautify","_css_beautify","_tag_stack","optionHtml","_is_wrap_attributes_force","wrap_attributes","substr","_is_wrap_attributes_force_expand_multiline","_is_wrap_attributes_force_aligned","_is_wrap_attributes_aligned_multiple","_is_wrap_attributes_preserve","_is_wrap_attributes_preserve_aligned","get_parser_token","record_tag","new_frame","_try_pop_frame","frame","_get_frame","tag_list","stop_list","try_pop","indent_to_tag","last_token","last_tag_token","TagOpenParserToken","tokens","TAG_OPEN","COMMENT","_handle_tag_open","tag_complete","_handle_inside_tag","TAG_CLOSE","_handle_tag_close","_handle_text","is_unformatted","tag_start_char","has_wrapped_attrs","indent_content","is_content_unformatted","is_inline_element","wrapped","attr_count","force_attr_wrap","peek_token","is_only_attribute","peek_index","custom_beautifier_name","_print_custom_beatifier_text","local","_beautifier","script_indent_level","indent_scripts","indentation","Child_options","child_options","white","_get_tag_open_token","_set_tag_position","tag_check_match","is_empty_element","is_start_tag","is_end_tag","multiline_content","start_tag_token","wrap_attributes_indent_size","void_elements","unformatted","content_unformatted","inline","_do_optional_end_element","extra_liners","foundIfOnCurrentLine","indent_inner_html","indent_head_inner_html","indent_body_inner_html","BaseOptions","indent_handlebars","unformatted_content_delimiter","BaseTokenizer","BASETOKEN","UNKNOWN","directives_core","_current_tag_name","templatable_reader","pattern_reader","word","single_quote","double_quote","attribute","element_name","handlebars_open","handlebars_raw_close","comment","cdata","conditional_comment","processing","_unformatted_content_delimiter","literal_regexp","_read_open_handlebars","_read_attribute","_read_raw_content","_read_close","_read_content_word","_read_comment","_read_open","ignore","content","_is_content_unformatted","requireamd","html_beautify","apply"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~f9fd7b66.js","sourcesContent":["/* AUTO-GENERATED. DO NOT MODIFY. */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n\n\n Style HTML\n---------------\n\n  Written by Nochum Sossonko, (nsossonko@hotmail.com)\n\n  Based on code initially developed by: Einar Lielmanis, <einar@beautifier.io>\n    https://beautifier.io/\n\n  Usage:\n    style_html(html_source);\n\n    style_html(html_source, options);\n\n  The options are:\n    indent_inner_html (default false)  — indent <head> and <body> sections,\n    indent_size (default 4)          — indentation size,\n    indent_char (default space)      — character to indent with,\n    wrap_line_length (default 250)            -  maximum amount of characters per line (0 = disable)\n    brace_style (default \"collapse\") - \"collapse\" | \"expand\" | \"end-expand\" | \"none\"\n            put braces on the same line as control statements (default), or put braces on own line (Allman / ANSI style), or just put end braces on own line, or attempt to keep them where they are.\n    inline (defaults to inline tags) - list of tags to be considered inline tags\n    unformatted (defaults to inline tags) - list of tags, that shouldn't be reformatted\n    content_unformatted (defaults to [\"pre\", \"textarea\"] tags) - list of tags, whose content shouldn't be reformatted\n    indent_scripts (default normal)  - \"keep\"|\"separate\"|\"normal\"\n    preserve_newlines (default true) - whether existing line breaks before elements should be preserved\n                                        Only works before elements, not inside tags or for text.\n    max_preserve_newlines (default unlimited) - maximum number of line breaks to be preserved in one chunk\n    indent_handlebars (default false) - format and indent {{#foo}} and {{/foo}}\n    end_with_newline (false)          - end with a newline\n    extra_liners (default [head,body,/html]) -List of tags that should have an extra newline before them.\n\n    e.g.\n\n    style_html(html_source, {\n      'indent_inner_html': false,\n      'indent_size': 2,\n      'indent_char': ' ',\n      'wrap_line_length': 78,\n      'brace_style': 'expand',\n      'preserve_newlines': true,\n      'max_preserve_newlines': 5,\n      'indent_handlebars': false,\n      'extra_liners': ['/html']\n    });\n*/\n\n(function() {\n\n/* GENERATED_BUILD_OUTPUT */\nvar legacy_beautify_html =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// define __esModule on exports\n/******/ \t__webpack_require__.r = function(exports) {\n/******/ \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n/******/ \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n/******/ \t\t}\n/******/ \t\tObject.defineProperty(exports, '__esModule', { value: true });\n/******/ \t};\n/******/\n/******/ \t// create a fake namespace object\n/******/ \t// mode & 1: value is a module id, require it\n/******/ \t// mode & 2: merge all properties of value into the ns\n/******/ \t// mode & 4: return value when already ns object\n/******/ \t// mode & 8|1: behave like require\n/******/ \t__webpack_require__.t = function(value, mode) {\n/******/ \t\tif(mode & 1) value = __webpack_require__(value);\n/******/ \t\tif(mode & 8) return value;\n/******/ \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n/******/ \t\tvar ns = Object.create(null);\n/******/ \t\t__webpack_require__.r(ns);\n/******/ \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n/******/ \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n/******/ \t\treturn ns;\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 18);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */,\n/* 1 */,\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction OutputLine(parent) {\n  this.__parent = parent;\n  this.__character_count = 0;\n  // use indent_count as a marker for this.__lines that have preserved indentation\n  this.__indent_count = -1;\n  this.__alignment_count = 0;\n  this.__wrap_point_index = 0;\n  this.__wrap_point_character_count = 0;\n  this.__wrap_point_indent_count = -1;\n  this.__wrap_point_alignment_count = 0;\n\n  this.__items = [];\n}\n\nOutputLine.prototype.clone_empty = function() {\n  var line = new OutputLine(this.__parent);\n  line.set_indent(this.__indent_count, this.__alignment_count);\n  return line;\n};\n\nOutputLine.prototype.item = function(index) {\n  if (index < 0) {\n    return this.__items[this.__items.length + index];\n  } else {\n    return this.__items[index];\n  }\n};\n\nOutputLine.prototype.has_match = function(pattern) {\n  for (var lastCheckedOutput = this.__items.length - 1; lastCheckedOutput >= 0; lastCheckedOutput--) {\n    if (this.__items[lastCheckedOutput].match(pattern)) {\n      return true;\n    }\n  }\n  return false;\n};\n\nOutputLine.prototype.set_indent = function(indent, alignment) {\n  if (this.is_empty()) {\n    this.__indent_count = indent || 0;\n    this.__alignment_count = alignment || 0;\n    this.__character_count = this.__parent.get_indent_size(this.__indent_count, this.__alignment_count);\n  }\n};\n\nOutputLine.prototype._set_wrap_point = function() {\n  if (this.__parent.wrap_line_length) {\n    this.__wrap_point_index = this.__items.length;\n    this.__wrap_point_character_count = this.__character_count;\n    this.__wrap_point_indent_count = this.__parent.next_line.__indent_count;\n    this.__wrap_point_alignment_count = this.__parent.next_line.__alignment_count;\n  }\n};\n\nOutputLine.prototype._should_wrap = function() {\n  return this.__wrap_point_index &&\n    this.__character_count > this.__parent.wrap_line_length &&\n    this.__wrap_point_character_count > this.__parent.next_line.__character_count;\n};\n\nOutputLine.prototype._allow_wrap = function() {\n  if (this._should_wrap()) {\n    this.__parent.add_new_line();\n    var next = this.__parent.current_line;\n    next.set_indent(this.__wrap_point_indent_count, this.__wrap_point_alignment_count);\n    next.__items = this.__items.slice(this.__wrap_point_index);\n    this.__items = this.__items.slice(0, this.__wrap_point_index);\n\n    next.__character_count += this.__character_count - this.__wrap_point_character_count;\n    this.__character_count = this.__wrap_point_character_count;\n\n    if (next.__items[0] === \" \") {\n      next.__items.splice(0, 1);\n      next.__character_count -= 1;\n    }\n    return true;\n  }\n  return false;\n};\n\nOutputLine.prototype.is_empty = function() {\n  return this.__items.length === 0;\n};\n\nOutputLine.prototype.last = function() {\n  if (!this.is_empty()) {\n    return this.__items[this.__items.length - 1];\n  } else {\n    return null;\n  }\n};\n\nOutputLine.prototype.push = function(item) {\n  this.__items.push(item);\n  var last_newline_index = item.lastIndexOf('\\n');\n  if (last_newline_index !== -1) {\n    this.__character_count = item.length - last_newline_index;\n  } else {\n    this.__character_count += item.length;\n  }\n};\n\nOutputLine.prototype.pop = function() {\n  var item = null;\n  if (!this.is_empty()) {\n    item = this.__items.pop();\n    this.__character_count -= item.length;\n  }\n  return item;\n};\n\n\nOutputLine.prototype._remove_indent = function() {\n  if (this.__indent_count > 0) {\n    this.__indent_count -= 1;\n    this.__character_count -= this.__parent.indent_size;\n  }\n};\n\nOutputLine.prototype._remove_wrap_indent = function() {\n  if (this.__wrap_point_indent_count > 0) {\n    this.__wrap_point_indent_count -= 1;\n  }\n};\nOutputLine.prototype.trim = function() {\n  while (this.last() === ' ') {\n    this.__items.pop();\n    this.__character_count -= 1;\n  }\n};\n\nOutputLine.prototype.toString = function() {\n  var result = '';\n  if (!this.is_empty()) {\n    result = this.__parent.get_indent_string(this.__indent_count, this.__alignment_count);\n    result += this.__items.join('');\n  }\n  return result;\n};\n\nfunction IndentStringCache(options, baseIndentString) {\n  this.__cache = [''];\n  this.__indent_size = options.indent_size;\n  this.__indent_string = options.indent_char;\n  if (!options.indent_with_tabs) {\n    this.__indent_string = new Array(options.indent_size + 1).join(options.indent_char);\n  }\n\n  // Set to null to continue support for auto detection of base indent\n  baseIndentString = baseIndentString || '';\n  if (options.indent_level > 0) {\n    baseIndentString = new Array(options.indent_level + 1).join(this.__indent_string);\n  }\n\n  this.__base_string = baseIndentString;\n  this.__base_string_length = baseIndentString.length;\n}\n\nIndentStringCache.prototype.get_indent_size = function(indent, column) {\n  var result = this.__base_string_length;\n  column = column || 0;\n  if (indent < 0) {\n    result = 0;\n  }\n  result += indent * this.__indent_size;\n  result += column;\n  return result;\n};\n\nIndentStringCache.prototype.get_indent_string = function(indent_level, column) {\n  var result = this.__base_string;\n  column = column || 0;\n  if (indent_level < 0) {\n    indent_level = 0;\n    result = '';\n  }\n  column += indent_level * this.__indent_size;\n  this.__ensure_cache(column);\n  result += this.__cache[column];\n  return result;\n};\n\nIndentStringCache.prototype.__ensure_cache = function(column) {\n  while (column >= this.__cache.length) {\n    this.__add_column();\n  }\n};\n\nIndentStringCache.prototype.__add_column = function() {\n  var column = this.__cache.length;\n  var indent = 0;\n  var result = '';\n  if (this.__indent_size && column >= this.__indent_size) {\n    indent = Math.floor(column / this.__indent_size);\n    column -= indent * this.__indent_size;\n    result = new Array(indent + 1).join(this.__indent_string);\n  }\n  if (column) {\n    result += new Array(column + 1).join(' ');\n  }\n\n  this.__cache.push(result);\n};\n\nfunction Output(options, baseIndentString) {\n  this.__indent_cache = new IndentStringCache(options, baseIndentString);\n  this.raw = false;\n  this._end_with_newline = options.end_with_newline;\n  this.indent_size = options.indent_size;\n  this.wrap_line_length = options.wrap_line_length;\n  this.__lines = [];\n  this.previous_line = null;\n  this.current_line = null;\n  this.next_line = new OutputLine(this);\n  this.space_before_token = false;\n  this.non_breaking_space = false;\n  this.previous_token_wrapped = false;\n  // initialize\n  this.__add_outputline();\n}\n\nOutput.prototype.__add_outputline = function() {\n  this.previous_line = this.current_line;\n  this.current_line = this.next_line.clone_empty();\n  this.__lines.push(this.current_line);\n};\n\nOutput.prototype.get_line_number = function() {\n  return this.__lines.length;\n};\n\nOutput.prototype.get_indent_string = function(indent, column) {\n  return this.__indent_cache.get_indent_string(indent, column);\n};\n\nOutput.prototype.get_indent_size = function(indent, column) {\n  return this.__indent_cache.get_indent_size(indent, column);\n};\n\nOutput.prototype.is_empty = function() {\n  return !this.previous_line && this.current_line.is_empty();\n};\n\nOutput.prototype.add_new_line = function(force_newline) {\n  // never newline at the start of file\n  // otherwise, newline only if we didn't just add one or we're forced\n  if (this.is_empty() ||\n    (!force_newline && this.just_added_newline())) {\n    return false;\n  }\n\n  // if raw output is enabled, don't print additional newlines,\n  // but still return True as though you had\n  if (!this.raw) {\n    this.__add_outputline();\n  }\n  return true;\n};\n\nOutput.prototype.get_code = function(eol) {\n  this.trim(true);\n\n  // handle some edge cases where the last tokens\n  // has text that ends with newline(s)\n  var last_item = this.current_line.pop();\n  if (last_item) {\n    if (last_item[last_item.length - 1] === '\\n') {\n      last_item = last_item.replace(/\\n+$/g, '');\n    }\n    this.current_line.push(last_item);\n  }\n\n  if (this._end_with_newline) {\n    this.__add_outputline();\n  }\n\n  var sweet_code = this.__lines.join('\\n');\n\n  if (eol !== '\\n') {\n    sweet_code = sweet_code.replace(/[\\n]/g, eol);\n  }\n  return sweet_code;\n};\n\nOutput.prototype.set_wrap_point = function() {\n  this.current_line._set_wrap_point();\n};\n\nOutput.prototype.set_indent = function(indent, alignment) {\n  indent = indent || 0;\n  alignment = alignment || 0;\n\n  // Next line stores alignment values\n  this.next_line.set_indent(indent, alignment);\n\n  // Never indent your first output indent at the start of the file\n  if (this.__lines.length > 1) {\n    this.current_line.set_indent(indent, alignment);\n    return true;\n  }\n\n  this.current_line.set_indent();\n  return false;\n};\n\nOutput.prototype.add_raw_token = function(token) {\n  for (var x = 0; x < token.newlines; x++) {\n    this.__add_outputline();\n  }\n  this.current_line.set_indent(-1);\n  this.current_line.push(token.whitespace_before);\n  this.current_line.push(token.text);\n  this.space_before_token = false;\n  this.non_breaking_space = false;\n  this.previous_token_wrapped = false;\n};\n\nOutput.prototype.add_token = function(printable_token) {\n  this.__add_space_before_token();\n  this.current_line.push(printable_token);\n  this.space_before_token = false;\n  this.non_breaking_space = false;\n  this.previous_token_wrapped = this.current_line._allow_wrap();\n};\n\nOutput.prototype.__add_space_before_token = function() {\n  if (this.space_before_token && !this.just_added_newline()) {\n    if (!this.non_breaking_space) {\n      this.set_wrap_point();\n    }\n    this.current_line.push(' ');\n  }\n};\n\nOutput.prototype.remove_indent = function(index) {\n  var output_length = this.__lines.length;\n  while (index < output_length) {\n    this.__lines[index]._remove_indent();\n    index++;\n  }\n  this.current_line._remove_wrap_indent();\n};\n\nOutput.prototype.trim = function(eat_newlines) {\n  eat_newlines = (eat_newlines === undefined) ? false : eat_newlines;\n\n  this.current_line.trim();\n\n  while (eat_newlines && this.__lines.length > 1 &&\n    this.current_line.is_empty()) {\n    this.__lines.pop();\n    this.current_line = this.__lines[this.__lines.length - 1];\n    this.current_line.trim();\n  }\n\n  this.previous_line = this.__lines.length > 1 ?\n    this.__lines[this.__lines.length - 2] : null;\n};\n\nOutput.prototype.just_added_newline = function() {\n  return this.current_line.is_empty();\n};\n\nOutput.prototype.just_added_blankline = function() {\n  return this.is_empty() ||\n    (this.current_line.is_empty() && this.previous_line.is_empty());\n};\n\nOutput.prototype.ensure_empty_line_above = function(starts_with, ends_with) {\n  var index = this.__lines.length - 2;\n  while (index >= 0) {\n    var potentialEmptyLine = this.__lines[index];\n    if (potentialEmptyLine.is_empty()) {\n      break;\n    } else if (potentialEmptyLine.item(0).indexOf(starts_with) !== 0 &&\n      potentialEmptyLine.item(-1) !== ends_with) {\n      this.__lines.splice(index + 1, 0, new OutputLine(this));\n      this.previous_line = this.__lines[this.__lines.length - 2];\n      break;\n    }\n    index--;\n  }\n};\n\nmodule.exports.Output = Output;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction Token(type, text, newlines, whitespace_before) {\n  this.type = type;\n  this.text = text;\n\n  // comments_before are\n  // comments that have a new line before them\n  // and may or may not have a newline after\n  // this is a set of comments before\n  this.comments_before = null; /* inline comment*/\n\n\n  // this.comments_after =  new TokenStream(); // no new line before and newline after\n  this.newlines = newlines || 0;\n  this.whitespace_before = whitespace_before || '';\n  this.parent = null;\n  this.next = null;\n  this.previous = null;\n  this.opened = null;\n  this.closed = null;\n  this.directives = null;\n}\n\n\nmodule.exports.Token = Token;\n\n\n/***/ }),\n/* 4 */,\n/* 5 */,\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction Options(options, merge_child_field) {\n  this.raw_options = _mergeOpts(options, merge_child_field);\n\n  // Support passing the source text back with no change\n  this.disabled = this._get_boolean('disabled');\n\n  this.eol = this._get_characters('eol', 'auto');\n  this.end_with_newline = this._get_boolean('end_with_newline');\n  this.indent_size = this._get_number('indent_size', 4);\n  this.indent_char = this._get_characters('indent_char', ' ');\n  this.indent_level = this._get_number('indent_level');\n\n  this.preserve_newlines = this._get_boolean('preserve_newlines', true);\n  this.max_preserve_newlines = this._get_number('max_preserve_newlines', 32786);\n  if (!this.preserve_newlines) {\n    this.max_preserve_newlines = 0;\n  }\n\n  this.indent_with_tabs = this._get_boolean('indent_with_tabs', this.indent_char === '\\t');\n  if (this.indent_with_tabs) {\n    this.indent_char = '\\t';\n\n    // indent_size behavior changed after 1.8.6\n    // It used to be that indent_size would be\n    // set to 1 for indent_with_tabs. That is no longer needed and\n    // actually doesn't make sense - why not use spaces? Further,\n    // that might produce unexpected behavior - tabs being used\n    // for single-column alignment. So, when indent_with_tabs is true\n    // and indent_size is 1, reset indent_size to 4.\n    if (this.indent_size === 1) {\n      this.indent_size = 4;\n    }\n  }\n\n  // Backwards compat with 1.3.x\n  this.wrap_line_length = this._get_number('wrap_line_length', this._get_number('max_char'));\n\n}\n\nOptions.prototype._get_array = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  var result = default_value || [];\n  if (typeof option_value === 'object') {\n    if (option_value !== null && typeof option_value.concat === 'function') {\n      result = option_value.concat();\n    }\n  } else if (typeof option_value === 'string') {\n    result = option_value.split(/[^a-zA-Z0-9_\\/\\-]+/);\n  }\n  return result;\n};\n\nOptions.prototype._get_boolean = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  var result = option_value === undefined ? !!default_value : !!option_value;\n  return result;\n};\n\nOptions.prototype._get_characters = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  var result = default_value || '';\n  if (typeof option_value === 'string') {\n    result = option_value.replace(/\\\\r/, '\\r').replace(/\\\\n/, '\\n').replace(/\\\\t/, '\\t');\n  }\n  return result;\n};\n\nOptions.prototype._get_number = function(name, default_value) {\n  var option_value = this.raw_options[name];\n  default_value = parseInt(default_value, 10);\n  if (isNaN(default_value)) {\n    default_value = 0;\n  }\n  var result = parseInt(option_value, 10);\n  if (isNaN(result)) {\n    result = default_value;\n  }\n  return result;\n};\n\nOptions.prototype._get_selection = function(name, selection_list, default_value) {\n  var result = this._get_selection_list(name, selection_list, default_value);\n  if (result.length !== 1) {\n    throw new Error(\n      \"Invalid Option Value: The option '\" + name + \"' can only be one of the following values:\\n\" +\n      selection_list + \"\\nYou passed in: '\" + this.raw_options[name] + \"'\");\n  }\n\n  return result[0];\n};\n\n\nOptions.prototype._get_selection_list = function(name, selection_list, default_value) {\n  if (!selection_list || selection_list.length === 0) {\n    throw new Error(\"Selection list cannot be empty.\");\n  }\n\n  default_value = default_value || [selection_list[0]];\n  if (!this._is_valid_selection(default_value, selection_list)) {\n    throw new Error(\"Invalid Default Value!\");\n  }\n\n  var result = this._get_array(name, default_value);\n  if (!this._is_valid_selection(result, selection_list)) {\n    throw new Error(\n      \"Invalid Option Value: The option '\" + name + \"' can contain only the following values:\\n\" +\n      selection_list + \"\\nYou passed in: '\" + this.raw_options[name] + \"'\");\n  }\n\n  return result;\n};\n\nOptions.prototype._is_valid_selection = function(result, selection_list) {\n  return result.length && selection_list.length &&\n    !result.some(function(item) { return selection_list.indexOf(item) === -1; });\n};\n\n\n// merges child options up with the parent options object\n// Example: obj = {a: 1, b: {a: 2}}\n//          mergeOpts(obj, 'b')\n//\n//          Returns: {a: 2}\nfunction _mergeOpts(allOptions, childFieldName) {\n  var finalOpts = {};\n  allOptions = _normalizeOpts(allOptions);\n  var name;\n\n  for (name in allOptions) {\n    if (name !== childFieldName) {\n      finalOpts[name] = allOptions[name];\n    }\n  }\n\n  //merge in the per type settings for the childFieldName\n  if (childFieldName && allOptions[childFieldName]) {\n    for (name in allOptions[childFieldName]) {\n      finalOpts[name] = allOptions[childFieldName][name];\n    }\n  }\n  return finalOpts;\n}\n\nfunction _normalizeOpts(options) {\n  var convertedOpts = {};\n  var key;\n\n  for (key in options) {\n    var newKey = key.replace(/-/g, \"_\");\n    convertedOpts[newKey] = options[key];\n  }\n  return convertedOpts;\n}\n\nmodule.exports.Options = Options;\nmodule.exports.normalizeOpts = _normalizeOpts;\nmodule.exports.mergeOpts = _mergeOpts;\n\n\n/***/ }),\n/* 7 */,\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar regexp_has_sticky = RegExp.prototype.hasOwnProperty('sticky');\n\nfunction InputScanner(input_string) {\n  this.__input = input_string || '';\n  this.__input_length = this.__input.length;\n  this.__position = 0;\n}\n\nInputScanner.prototype.restart = function() {\n  this.__position = 0;\n};\n\nInputScanner.prototype.back = function() {\n  if (this.__position > 0) {\n    this.__position -= 1;\n  }\n};\n\nInputScanner.prototype.hasNext = function() {\n  return this.__position < this.__input_length;\n};\n\nInputScanner.prototype.next = function() {\n  var val = null;\n  if (this.hasNext()) {\n    val = this.__input.charAt(this.__position);\n    this.__position += 1;\n  }\n  return val;\n};\n\nInputScanner.prototype.peek = function(index) {\n  var val = null;\n  index = index || 0;\n  index += this.__position;\n  if (index >= 0 && index < this.__input_length) {\n    val = this.__input.charAt(index);\n  }\n  return val;\n};\n\n// This is a JavaScript only helper function (not in python)\n// Javascript doesn't have a match method\n// and not all implementation support \"sticky\" flag.\n// If they do not support sticky then both this.match() and this.test() method\n// must get the match and check the index of the match.\n// If sticky is supported and set, this method will use it.\n// Otherwise it will check that global is set, and fall back to the slower method.\nInputScanner.prototype.__match = function(pattern, index) {\n  pattern.lastIndex = index;\n  var pattern_match = pattern.exec(this.__input);\n\n  if (pattern_match && !(regexp_has_sticky && pattern.sticky)) {\n    if (pattern_match.index !== index) {\n      pattern_match = null;\n    }\n  }\n\n  return pattern_match;\n};\n\nInputScanner.prototype.test = function(pattern, index) {\n  index = index || 0;\n  index += this.__position;\n\n  if (index >= 0 && index < this.__input_length) {\n    return !!this.__match(pattern, index);\n  } else {\n    return false;\n  }\n};\n\nInputScanner.prototype.testChar = function(pattern, index) {\n  // test one character regex match\n  var val = this.peek(index);\n  pattern.lastIndex = 0;\n  return val !== null && pattern.test(val);\n};\n\nInputScanner.prototype.match = function(pattern) {\n  var pattern_match = this.__match(pattern, this.__position);\n  if (pattern_match) {\n    this.__position += pattern_match[0].length;\n  } else {\n    pattern_match = null;\n  }\n  return pattern_match;\n};\n\nInputScanner.prototype.read = function(starting_pattern, until_pattern, until_after) {\n  var val = '';\n  var match;\n  if (starting_pattern) {\n    match = this.match(starting_pattern);\n    if (match) {\n      val += match[0];\n    }\n  }\n  if (until_pattern && (match || !starting_pattern)) {\n    val += this.readUntil(until_pattern, until_after);\n  }\n  return val;\n};\n\nInputScanner.prototype.readUntil = function(pattern, until_after) {\n  var val = '';\n  var match_index = this.__position;\n  pattern.lastIndex = this.__position;\n  var pattern_match = pattern.exec(this.__input);\n  if (pattern_match) {\n    match_index = pattern_match.index;\n    if (until_after) {\n      match_index += pattern_match[0].length;\n    }\n  } else {\n    match_index = this.__input_length;\n  }\n\n  val = this.__input.substring(this.__position, match_index);\n  this.__position = match_index;\n  return val;\n};\n\nInputScanner.prototype.readUntilAfter = function(pattern) {\n  return this.readUntil(pattern, true);\n};\n\nInputScanner.prototype.get_regexp = function(pattern, match_from) {\n  var result = null;\n  var flags = 'g';\n  if (match_from && regexp_has_sticky) {\n    flags = 'y';\n  }\n  // strings are converted to regexp\n  if (typeof pattern === \"string\" && pattern !== '') {\n    // result = new RegExp(pattern.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'), flags);\n    result = new RegExp(pattern, flags);\n  } else if (pattern) {\n    result = new RegExp(pattern.source, flags);\n  }\n  return result;\n};\n\nInputScanner.prototype.get_literal_regexp = function(literal_string) {\n  return RegExp(literal_string.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&'));\n};\n\n/* css beautifier legacy helpers */\nInputScanner.prototype.peekUntilAfter = function(pattern) {\n  var start = this.__position;\n  var val = this.readUntilAfter(pattern);\n  this.__position = start;\n  return val;\n};\n\nInputScanner.prototype.lookBack = function(testVal) {\n  var start = this.__position - 1;\n  return start >= testVal.length && this.__input.substring(start - testVal.length, start)\n    .toLowerCase() === testVal;\n};\n\nmodule.exports.InputScanner = InputScanner;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar InputScanner = __webpack_require__(8).InputScanner;\nvar Token = __webpack_require__(3).Token;\nvar TokenStream = __webpack_require__(10).TokenStream;\nvar WhitespacePattern = __webpack_require__(11).WhitespacePattern;\n\nvar TOKEN = {\n  START: 'TK_START',\n  RAW: 'TK_RAW',\n  EOF: 'TK_EOF'\n};\n\nvar Tokenizer = function(input_string, options) {\n  this._input = new InputScanner(input_string);\n  this._options = options || {};\n  this.__tokens = null;\n\n  this._patterns = {};\n  this._patterns.whitespace = new WhitespacePattern(this._input);\n};\n\nTokenizer.prototype.tokenize = function() {\n  this._input.restart();\n  this.__tokens = new TokenStream();\n\n  this._reset();\n\n  var current;\n  var previous = new Token(TOKEN.START, '');\n  var open_token = null;\n  var open_stack = [];\n  var comments = new TokenStream();\n\n  while (previous.type !== TOKEN.EOF) {\n    current = this._get_next_token(previous, open_token);\n    while (this._is_comment(current)) {\n      comments.add(current);\n      current = this._get_next_token(previous, open_token);\n    }\n\n    if (!comments.isEmpty()) {\n      current.comments_before = comments;\n      comments = new TokenStream();\n    }\n\n    current.parent = open_token;\n\n    if (this._is_opening(current)) {\n      open_stack.push(open_token);\n      open_token = current;\n    } else if (open_token && this._is_closing(current, open_token)) {\n      current.opened = open_token;\n      open_token.closed = current;\n      open_token = open_stack.pop();\n      current.parent = open_token;\n    }\n\n    current.previous = previous;\n    previous.next = current;\n\n    this.__tokens.add(current);\n    previous = current;\n  }\n\n  return this.__tokens;\n};\n\n\nTokenizer.prototype._is_first_token = function() {\n  return this.__tokens.isEmpty();\n};\n\nTokenizer.prototype._reset = function() {};\n\nTokenizer.prototype._get_next_token = function(previous_token, open_token) { // jshint unused:false\n  this._readWhitespace();\n  var resulting_string = this._input.read(/.+/g);\n  if (resulting_string) {\n    return this._create_token(TOKEN.RAW, resulting_string);\n  } else {\n    return this._create_token(TOKEN.EOF, '');\n  }\n};\n\nTokenizer.prototype._is_comment = function(current_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._is_opening = function(current_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._is_closing = function(current_token, open_token) { // jshint unused:false\n  return false;\n};\n\nTokenizer.prototype._create_token = function(type, text) {\n  var token = new Token(type, text,\n    this._patterns.whitespace.newline_count,\n    this._patterns.whitespace.whitespace_before_token);\n  return token;\n};\n\nTokenizer.prototype._readWhitespace = function() {\n  return this._patterns.whitespace.read();\n};\n\n\n\nmodule.exports.Tokenizer = Tokenizer;\nmodule.exports.TOKEN = TOKEN;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction TokenStream(parent_token) {\n  // private\n  this.__tokens = [];\n  this.__tokens_length = this.__tokens.length;\n  this.__position = 0;\n  this.__parent_token = parent_token;\n}\n\nTokenStream.prototype.restart = function() {\n  this.__position = 0;\n};\n\nTokenStream.prototype.isEmpty = function() {\n  return this.__tokens_length === 0;\n};\n\nTokenStream.prototype.hasNext = function() {\n  return this.__position < this.__tokens_length;\n};\n\nTokenStream.prototype.next = function() {\n  var val = null;\n  if (this.hasNext()) {\n    val = this.__tokens[this.__position];\n    this.__position += 1;\n  }\n  return val;\n};\n\nTokenStream.prototype.peek = function(index) {\n  var val = null;\n  index = index || 0;\n  index += this.__position;\n  if (index >= 0 && index < this.__tokens_length) {\n    val = this.__tokens[index];\n  }\n  return val;\n};\n\nTokenStream.prototype.add = function(token) {\n  if (this.__parent_token) {\n    token.parent = this.__parent_token;\n  }\n  this.__tokens.push(token);\n  this.__tokens_length += 1;\n};\n\nmodule.exports.TokenStream = TokenStream;\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar Pattern = __webpack_require__(12).Pattern;\n\nfunction WhitespacePattern(input_scanner, parent) {\n  Pattern.call(this, input_scanner, parent);\n  if (parent) {\n    this._line_regexp = this._input.get_regexp(parent._line_regexp);\n  } else {\n    this.__set_whitespace_patterns('', '');\n  }\n\n  this.newline_count = 0;\n  this.whitespace_before_token = '';\n}\nWhitespacePattern.prototype = new Pattern();\n\nWhitespacePattern.prototype.__set_whitespace_patterns = function(whitespace_chars, newline_chars) {\n  whitespace_chars += '\\\\t ';\n  newline_chars += '\\\\n\\\\r';\n\n  this._match_pattern = this._input.get_regexp(\n    '[' + whitespace_chars + newline_chars + ']+', true);\n  this._newline_regexp = this._input.get_regexp(\n    '\\\\r\\\\n|[' + newline_chars + ']');\n};\n\nWhitespacePattern.prototype.read = function() {\n  this.newline_count = 0;\n  this.whitespace_before_token = '';\n\n  var resulting_string = this._input.read(this._match_pattern);\n  if (resulting_string === ' ') {\n    this.whitespace_before_token = ' ';\n  } else if (resulting_string) {\n    var matches = this.__split(this._newline_regexp, resulting_string);\n    this.newline_count = matches.length - 1;\n    this.whitespace_before_token = matches[this.newline_count];\n  }\n\n  return resulting_string;\n};\n\nWhitespacePattern.prototype.matching = function(whitespace_chars, newline_chars) {\n  var result = this._create();\n  result.__set_whitespace_patterns(whitespace_chars, newline_chars);\n  result._update();\n  return result;\n};\n\nWhitespacePattern.prototype._create = function() {\n  return new WhitespacePattern(this._input, this);\n};\n\nWhitespacePattern.prototype.__split = function(regexp, input_string) {\n  regexp.lastIndex = 0;\n  var start_index = 0;\n  var result = [];\n  var next_match = regexp.exec(input_string);\n  while (next_match) {\n    result.push(input_string.substring(start_index, next_match.index));\n    start_index = next_match.index + next_match[0].length;\n    next_match = regexp.exec(input_string);\n  }\n\n  if (start_index < input_string.length) {\n    result.push(input_string.substring(start_index, input_string.length));\n  } else {\n    result.push('');\n  }\n\n  return result;\n};\n\n\n\nmodule.exports.WhitespacePattern = WhitespacePattern;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction Pattern(input_scanner, parent) {\n  this._input = input_scanner;\n  this._starting_pattern = null;\n  this._match_pattern = null;\n  this._until_pattern = null;\n  this._until_after = false;\n\n  if (parent) {\n    this._starting_pattern = this._input.get_regexp(parent._starting_pattern, true);\n    this._match_pattern = this._input.get_regexp(parent._match_pattern, true);\n    this._until_pattern = this._input.get_regexp(parent._until_pattern);\n    this._until_after = parent._until_after;\n  }\n}\n\nPattern.prototype.read = function() {\n  var result = this._input.read(this._starting_pattern);\n  if (!this._starting_pattern || result) {\n    result += this._input.read(this._match_pattern, this._until_pattern, this._until_after);\n  }\n  return result;\n};\n\nPattern.prototype.read_match = function() {\n  return this._input.match(this._match_pattern);\n};\n\nPattern.prototype.until_after = function(pattern) {\n  var result = this._create();\n  result._until_after = true;\n  result._until_pattern = this._input.get_regexp(pattern);\n  result._update();\n  return result;\n};\n\nPattern.prototype.until = function(pattern) {\n  var result = this._create();\n  result._until_after = false;\n  result._until_pattern = this._input.get_regexp(pattern);\n  result._update();\n  return result;\n};\n\nPattern.prototype.starting_with = function(pattern) {\n  var result = this._create();\n  result._starting_pattern = this._input.get_regexp(pattern, true);\n  result._update();\n  return result;\n};\n\nPattern.prototype.matching = function(pattern) {\n  var result = this._create();\n  result._match_pattern = this._input.get_regexp(pattern, true);\n  result._update();\n  return result;\n};\n\nPattern.prototype._create = function() {\n  return new Pattern(this._input, this);\n};\n\nPattern.prototype._update = function() {};\n\nmodule.exports.Pattern = Pattern;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nfunction Directives(start_block_pattern, end_block_pattern) {\n  start_block_pattern = typeof start_block_pattern === 'string' ? start_block_pattern : start_block_pattern.source;\n  end_block_pattern = typeof end_block_pattern === 'string' ? end_block_pattern : end_block_pattern.source;\n  this.__directives_block_pattern = new RegExp(start_block_pattern + / beautify( \\w+[:]\\w+)+ /.source + end_block_pattern, 'g');\n  this.__directive_pattern = / (\\w+)[:](\\w+)/g;\n\n  this.__directives_end_ignore_pattern = new RegExp(start_block_pattern + /\\sbeautify\\signore:end\\s/.source + end_block_pattern, 'g');\n}\n\nDirectives.prototype.get_directives = function(text) {\n  if (!text.match(this.__directives_block_pattern)) {\n    return null;\n  }\n\n  var directives = {};\n  this.__directive_pattern.lastIndex = 0;\n  var directive_match = this.__directive_pattern.exec(text);\n\n  while (directive_match) {\n    directives[directive_match[1]] = directive_match[2];\n    directive_match = this.__directive_pattern.exec(text);\n  }\n\n  return directives;\n};\n\nDirectives.prototype.readIgnored = function(input) {\n  return input.readUntilAfter(this.__directives_end_ignore_pattern);\n};\n\n\nmodule.exports.Directives = Directives;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar Pattern = __webpack_require__(12).Pattern;\n\n\nvar template_names = {\n  django: false,\n  erb: false,\n  handlebars: false,\n  php: false\n};\n\n// This lets templates appear anywhere we would do a readUntil\n// The cost is higher but it is pay to play.\nfunction TemplatablePattern(input_scanner, parent) {\n  Pattern.call(this, input_scanner, parent);\n  this.__template_pattern = null;\n  this._disabled = Object.assign({}, template_names);\n  this._excluded = Object.assign({}, template_names);\n\n  if (parent) {\n    this.__template_pattern = this._input.get_regexp(parent.__template_pattern);\n    this._excluded = Object.assign(this._excluded, parent._excluded);\n    this._disabled = Object.assign(this._disabled, parent._disabled);\n  }\n  var pattern = new Pattern(input_scanner);\n  this.__patterns = {\n    handlebars_comment: pattern.starting_with(/{{!--/).until_after(/--}}/),\n    handlebars: pattern.starting_with(/{{/).until_after(/}}/),\n    php: pattern.starting_with(/<\\?(?:[=]|php)/).until_after(/\\?>/),\n    erb: pattern.starting_with(/<%[^%]/).until_after(/[^%]%>/),\n    // django coflicts with handlebars a bit.\n    django: pattern.starting_with(/{%/).until_after(/%}/),\n    django_value: pattern.starting_with(/{{/).until_after(/}}/),\n    django_comment: pattern.starting_with(/{#/).until_after(/#}/)\n  };\n}\nTemplatablePattern.prototype = new Pattern();\n\nTemplatablePattern.prototype._create = function() {\n  return new TemplatablePattern(this._input, this);\n};\n\nTemplatablePattern.prototype._update = function() {\n  this.__set_templated_pattern();\n};\n\nTemplatablePattern.prototype.disable = function(language) {\n  var result = this._create();\n  result._disabled[language] = true;\n  result._update();\n  return result;\n};\n\nTemplatablePattern.prototype.exclude = function(language) {\n  var result = this._create();\n  result._excluded[language] = true;\n  result._update();\n  return result;\n};\n\nTemplatablePattern.prototype.read = function() {\n  var result = '';\n  if (this._match_pattern) {\n    result = this._input.read(this._starting_pattern);\n  } else {\n    result = this._input.read(this._starting_pattern, this.__template_pattern);\n  }\n  var next = this._read_template();\n  while (next) {\n    if (this._match_pattern) {\n      next += this._input.read(this._match_pattern);\n    } else {\n      next += this._input.readUntil(this.__template_pattern);\n    }\n    result += next;\n    next = this._read_template();\n  }\n\n  if (this._until_after) {\n    result += this._input.readUntilAfter(this._until_pattern);\n  }\n  return result;\n};\n\nTemplatablePattern.prototype.__set_templated_pattern = function() {\n  var items = [];\n\n  if (!this._disabled.php) {\n    items.push(this.__patterns.php._starting_pattern.source);\n  }\n  if (!this._disabled.handlebars) {\n    items.push(this.__patterns.handlebars._starting_pattern.source);\n  }\n  if (!this._disabled.erb) {\n    items.push(this.__patterns.erb._starting_pattern.source);\n  }\n  if (!this._disabled.django) {\n    items.push(this.__patterns.django._starting_pattern.source);\n    items.push(this.__patterns.django_value._starting_pattern.source);\n    items.push(this.__patterns.django_comment._starting_pattern.source);\n  }\n\n  if (this._until_pattern) {\n    items.push(this._until_pattern.source);\n  }\n  this.__template_pattern = this._input.get_regexp('(?:' + items.join('|') + ')');\n};\n\nTemplatablePattern.prototype._read_template = function() {\n  var resulting_string = '';\n  var c = this._input.peek();\n  if (c === '<') {\n    var peek1 = this._input.peek(1);\n    //if we're in a comment, do something special\n    // We treat all comments as literals, even more than preformatted tags\n    // we just look for the appropriate close tag\n    if (!this._disabled.php && !this._excluded.php && peek1 === '?') {\n      resulting_string = resulting_string ||\n        this.__patterns.php.read();\n    }\n    if (!this._disabled.erb && !this._excluded.erb && peek1 === '%') {\n      resulting_string = resulting_string ||\n        this.__patterns.erb.read();\n    }\n  } else if (c === '{') {\n    if (!this._disabled.handlebars && !this._excluded.handlebars) {\n      resulting_string = resulting_string ||\n        this.__patterns.handlebars_comment.read();\n      resulting_string = resulting_string ||\n        this.__patterns.handlebars.read();\n    }\n    if (!this._disabled.django) {\n      // django coflicts with handlebars a bit.\n      if (!this._excluded.django && !this._excluded.handlebars) {\n        resulting_string = resulting_string ||\n          this.__patterns.django_value.read();\n      }\n      if (!this._excluded.django) {\n        resulting_string = resulting_string ||\n          this.__patterns.django_comment.read();\n        resulting_string = resulting_string ||\n          this.__patterns.django.read();\n      }\n    }\n  }\n  return resulting_string;\n};\n\n\nmodule.exports.TemplatablePattern = TemplatablePattern;\n\n\n/***/ }),\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar Beautifier = __webpack_require__(19).Beautifier,\n  Options = __webpack_require__(20).Options;\n\nfunction style_html(html_source, options, js_beautify, css_beautify) {\n  var beautifier = new Beautifier(html_source, options, js_beautify, css_beautify);\n  return beautifier.beautify();\n}\n\nmodule.exports = style_html;\nmodule.exports.defaultOptions = function() {\n  return new Options();\n};\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar Options = __webpack_require__(20).Options;\nvar Output = __webpack_require__(2).Output;\nvar Tokenizer = __webpack_require__(21).Tokenizer;\nvar TOKEN = __webpack_require__(21).TOKEN;\n\nvar lineBreak = /\\r\\n|[\\r\\n]/;\nvar allLineBreaks = /\\r\\n|[\\r\\n]/g;\n\nvar Printer = function(options, base_indent_string) { //handles input/output and some other printing functions\n\n  this.indent_level = 0;\n  this.alignment_size = 0;\n  this.max_preserve_newlines = options.max_preserve_newlines;\n  this.preserve_newlines = options.preserve_newlines;\n\n  this._output = new Output(options, base_indent_string);\n\n};\n\nPrinter.prototype.current_line_has_match = function(pattern) {\n  return this._output.current_line.has_match(pattern);\n};\n\nPrinter.prototype.set_space_before_token = function(value, non_breaking) {\n  this._output.space_before_token = value;\n  this._output.non_breaking_space = non_breaking;\n};\n\nPrinter.prototype.set_wrap_point = function() {\n  this._output.set_indent(this.indent_level, this.alignment_size);\n  this._output.set_wrap_point();\n};\n\n\nPrinter.prototype.add_raw_token = function(token) {\n  this._output.add_raw_token(token);\n};\n\nPrinter.prototype.print_preserved_newlines = function(raw_token) {\n  var newlines = 0;\n  if (raw_token.type !== TOKEN.TEXT && raw_token.previous.type !== TOKEN.TEXT) {\n    newlines = raw_token.newlines ? 1 : 0;\n  }\n\n  if (this.preserve_newlines) {\n    newlines = raw_token.newlines < this.max_preserve_newlines + 1 ? raw_token.newlines : this.max_preserve_newlines + 1;\n  }\n  for (var n = 0; n < newlines; n++) {\n    this.print_newline(n > 0);\n  }\n\n  return newlines !== 0;\n};\n\nPrinter.prototype.traverse_whitespace = function(raw_token) {\n  if (raw_token.whitespace_before || raw_token.newlines) {\n    if (!this.print_preserved_newlines(raw_token)) {\n      this._output.space_before_token = true;\n    }\n    return true;\n  }\n  return false;\n};\n\nPrinter.prototype.previous_token_wrapped = function() {\n  return this._output.previous_token_wrapped;\n};\n\nPrinter.prototype.print_newline = function(force) {\n  this._output.add_new_line(force);\n};\n\nPrinter.prototype.print_token = function(token) {\n  if (token.text) {\n    this._output.set_indent(this.indent_level, this.alignment_size);\n    this._output.add_token(token.text);\n  }\n};\n\nPrinter.prototype.indent = function() {\n  this.indent_level++;\n};\n\nPrinter.prototype.get_full_indent = function(level) {\n  level = this.indent_level + (level || 0);\n  if (level < 1) {\n    return '';\n  }\n\n  return this._output.get_indent_string(level);\n};\n\nvar get_type_attribute = function(start_token) {\n  var result = null;\n  var raw_token = start_token.next;\n\n  // Search attributes for a type attribute\n  while (raw_token.type !== TOKEN.EOF && start_token.closed !== raw_token) {\n    if (raw_token.type === TOKEN.ATTRIBUTE && raw_token.text === 'type') {\n      if (raw_token.next && raw_token.next.type === TOKEN.EQUALS &&\n        raw_token.next.next && raw_token.next.next.type === TOKEN.VALUE) {\n        result = raw_token.next.next.text;\n      }\n      break;\n    }\n    raw_token = raw_token.next;\n  }\n\n  return result;\n};\n\nvar get_custom_beautifier_name = function(tag_check, raw_token) {\n  var typeAttribute = null;\n  var result = null;\n\n  if (!raw_token.closed) {\n    return null;\n  }\n\n  if (tag_check === 'script') {\n    typeAttribute = 'text/javascript';\n  } else if (tag_check === 'style') {\n    typeAttribute = 'text/css';\n  }\n\n  typeAttribute = get_type_attribute(raw_token) || typeAttribute;\n\n  // For script and style tags that have a type attribute, only enable custom beautifiers for matching values\n  // For those without a type attribute use default;\n  if (typeAttribute.search('text/css') > -1) {\n    result = 'css';\n  } else if (typeAttribute.search(/(text|application|dojo)\\/(x-)?(javascript|ecmascript|jscript|livescript|(ld\\+)?json|method|aspect)/) > -1) {\n    result = 'javascript';\n  } else if (typeAttribute.search(/(text|application|dojo)\\/(x-)?(html)/) > -1) {\n    result = 'html';\n  } else if (typeAttribute.search(/test\\/null/) > -1) {\n    // Test only mime-type for testing the beautifier when null is passed as beautifing function\n    result = 'null';\n  }\n\n  return result;\n};\n\nfunction in_array(what, arr) {\n  return arr.indexOf(what) !== -1;\n}\n\nfunction TagFrame(parent, parser_token, indent_level) {\n  this.parent = parent || null;\n  this.tag = parser_token ? parser_token.tag_name : '';\n  this.indent_level = indent_level || 0;\n  this.parser_token = parser_token || null;\n}\n\nfunction TagStack(printer) {\n  this._printer = printer;\n  this._current_frame = null;\n}\n\nTagStack.prototype.get_parser_token = function() {\n  return this._current_frame ? this._current_frame.parser_token : null;\n};\n\nTagStack.prototype.record_tag = function(parser_token) { //function to record a tag and its parent in this.tags Object\n  var new_frame = new TagFrame(this._current_frame, parser_token, this._printer.indent_level);\n  this._current_frame = new_frame;\n};\n\nTagStack.prototype._try_pop_frame = function(frame) { //function to retrieve the opening tag to the corresponding closer\n  var parser_token = null;\n\n  if (frame) {\n    parser_token = frame.parser_token;\n    this._printer.indent_level = frame.indent_level;\n    this._current_frame = frame.parent;\n  }\n\n  return parser_token;\n};\n\nTagStack.prototype._get_frame = function(tag_list, stop_list) { //function to retrieve the opening tag to the corresponding closer\n  var frame = this._current_frame;\n\n  while (frame) { //till we reach '' (the initial value);\n    if (tag_list.indexOf(frame.tag) !== -1) { //if this is it use it\n      break;\n    } else if (stop_list && stop_list.indexOf(frame.tag) !== -1) {\n      frame = null;\n      break;\n    }\n    frame = frame.parent;\n  }\n\n  return frame;\n};\n\nTagStack.prototype.try_pop = function(tag, stop_list) { //function to retrieve the opening tag to the corresponding closer\n  var frame = this._get_frame([tag], stop_list);\n  return this._try_pop_frame(frame);\n};\n\nTagStack.prototype.indent_to_tag = function(tag_list) {\n  var frame = this._get_frame(tag_list);\n  if (frame) {\n    this._printer.indent_level = frame.indent_level;\n  }\n};\n\nfunction Beautifier(source_text, options, js_beautify, css_beautify) {\n  //Wrapper function to invoke all the necessary constructors and deal with the output.\n  this._source_text = source_text || '';\n  options = options || {};\n  this._js_beautify = js_beautify;\n  this._css_beautify = css_beautify;\n  this._tag_stack = null;\n\n  // Allow the setting of language/file-type specific options\n  // with inheritance of overall settings\n  var optionHtml = new Options(options, 'html');\n\n  this._options = optionHtml;\n\n  this._is_wrap_attributes_force = this._options.wrap_attributes.substr(0, 'force'.length) === 'force';\n  this._is_wrap_attributes_force_expand_multiline = (this._options.wrap_attributes === 'force-expand-multiline');\n  this._is_wrap_attributes_force_aligned = (this._options.wrap_attributes === 'force-aligned');\n  this._is_wrap_attributes_aligned_multiple = (this._options.wrap_attributes === 'aligned-multiple');\n  this._is_wrap_attributes_preserve = this._options.wrap_attributes.substr(0, 'preserve'.length) === 'preserve';\n  this._is_wrap_attributes_preserve_aligned = (this._options.wrap_attributes === 'preserve-aligned');\n}\n\nBeautifier.prototype.beautify = function() {\n\n  // if disabled, return the input unchanged.\n  if (this._options.disabled) {\n    return this._source_text;\n  }\n\n  var source_text = this._source_text;\n  var eol = this._options.eol;\n  if (this._options.eol === 'auto') {\n    eol = '\\n';\n    if (source_text && lineBreak.test(source_text)) {\n      eol = source_text.match(lineBreak)[0];\n    }\n  }\n\n  // HACK: newline parsing inconsistent. This brute force normalizes the input.\n  source_text = source_text.replace(allLineBreaks, '\\n');\n\n  var baseIndentString = source_text.match(/^[\\t ]*/)[0];\n\n  var last_token = {\n    text: '',\n    type: ''\n  };\n\n  var last_tag_token = new TagOpenParserToken();\n\n  var printer = new Printer(this._options, baseIndentString);\n  var tokens = new Tokenizer(source_text, this._options).tokenize();\n\n  this._tag_stack = new TagStack(printer);\n\n  var parser_token = null;\n  var raw_token = tokens.next();\n  while (raw_token.type !== TOKEN.EOF) {\n\n    if (raw_token.type === TOKEN.TAG_OPEN || raw_token.type === TOKEN.COMMENT) {\n      parser_token = this._handle_tag_open(printer, raw_token, last_tag_token, last_token);\n      last_tag_token = parser_token;\n    } else if ((raw_token.type === TOKEN.ATTRIBUTE || raw_token.type === TOKEN.EQUALS || raw_token.type === TOKEN.VALUE) ||\n      (raw_token.type === TOKEN.TEXT && !last_tag_token.tag_complete)) {\n      parser_token = this._handle_inside_tag(printer, raw_token, last_tag_token, tokens);\n    } else if (raw_token.type === TOKEN.TAG_CLOSE) {\n      parser_token = this._handle_tag_close(printer, raw_token, last_tag_token);\n    } else if (raw_token.type === TOKEN.TEXT) {\n      parser_token = this._handle_text(printer, raw_token, last_tag_token);\n    } else {\n      // This should never happen, but if it does. Print the raw token\n      printer.add_raw_token(raw_token);\n    }\n\n    last_token = parser_token;\n\n    raw_token = tokens.next();\n  }\n  var sweet_code = printer._output.get_code(eol);\n\n  return sweet_code;\n};\n\nBeautifier.prototype._handle_tag_close = function(printer, raw_token, last_tag_token) {\n  var parser_token = {\n    text: raw_token.text,\n    type: raw_token.type\n  };\n  printer.alignment_size = 0;\n  last_tag_token.tag_complete = true;\n\n  printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== '', true);\n  if (last_tag_token.is_unformatted) {\n    printer.add_raw_token(raw_token);\n  } else {\n    if (last_tag_token.tag_start_char === '<') {\n      printer.set_space_before_token(raw_token.text[0] === '/', true); // space before />, no space before >\n      if (this._is_wrap_attributes_force_expand_multiline && last_tag_token.has_wrapped_attrs) {\n        printer.print_newline(false);\n      }\n    }\n    printer.print_token(raw_token);\n\n  }\n\n  if (last_tag_token.indent_content &&\n    !(last_tag_token.is_unformatted || last_tag_token.is_content_unformatted)) {\n    printer.indent();\n\n    // only indent once per opened tag\n    last_tag_token.indent_content = false;\n  }\n\n  if (!last_tag_token.is_inline_element &&\n    !(last_tag_token.is_unformatted || last_tag_token.is_content_unformatted)) {\n    printer.set_wrap_point();\n  }\n\n  return parser_token;\n};\n\nBeautifier.prototype._handle_inside_tag = function(printer, raw_token, last_tag_token, tokens) {\n  var wrapped = last_tag_token.has_wrapped_attrs;\n  var parser_token = {\n    text: raw_token.text,\n    type: raw_token.type\n  };\n\n  printer.set_space_before_token(raw_token.newlines || raw_token.whitespace_before !== '', true);\n  if (last_tag_token.is_unformatted) {\n    printer.add_raw_token(raw_token);\n  } else if (last_tag_token.tag_start_char === '{' && raw_token.type === TOKEN.TEXT) {\n    // For the insides of handlebars allow newlines or a single space between open and contents\n    if (printer.print_preserved_newlines(raw_token)) {\n      raw_token.newlines = 0;\n      printer.add_raw_token(raw_token);\n    } else {\n      printer.print_token(raw_token);\n    }\n  } else {\n    if (raw_token.type === TOKEN.ATTRIBUTE) {\n      printer.set_space_before_token(true);\n      last_tag_token.attr_count += 1;\n    } else if (raw_token.type === TOKEN.EQUALS) { //no space before =\n      printer.set_space_before_token(false);\n    } else if (raw_token.type === TOKEN.VALUE && raw_token.previous.type === TOKEN.EQUALS) { //no space before value\n      printer.set_space_before_token(false);\n    }\n\n    if (raw_token.type === TOKEN.ATTRIBUTE && last_tag_token.tag_start_char === '<') {\n      if (this._is_wrap_attributes_preserve || this._is_wrap_attributes_preserve_aligned) {\n        printer.traverse_whitespace(raw_token);\n        wrapped = wrapped || raw_token.newlines !== 0;\n      }\n\n\n      if (this._is_wrap_attributes_force) {\n        var force_attr_wrap = last_tag_token.attr_count > 1;\n        if (this._is_wrap_attributes_force_expand_multiline && last_tag_token.attr_count === 1) {\n          var is_only_attribute = true;\n          var peek_index = 0;\n          var peek_token;\n          do {\n            peek_token = tokens.peek(peek_index);\n            if (peek_token.type === TOKEN.ATTRIBUTE) {\n              is_only_attribute = false;\n              break;\n            }\n            peek_index += 1;\n          } while (peek_index < 4 && peek_token.type !== TOKEN.EOF && peek_token.type !== TOKEN.TAG_CLOSE);\n\n          force_attr_wrap = !is_only_attribute;\n        }\n\n        if (force_attr_wrap) {\n          printer.print_newline(false);\n          wrapped = true;\n        }\n      }\n    }\n    printer.print_token(raw_token);\n    wrapped = wrapped || printer.previous_token_wrapped();\n    last_tag_token.has_wrapped_attrs = wrapped;\n  }\n  return parser_token;\n};\n\nBeautifier.prototype._handle_text = function(printer, raw_token, last_tag_token) {\n  var parser_token = {\n    text: raw_token.text,\n    type: 'TK_CONTENT'\n  };\n  if (last_tag_token.custom_beautifier_name) { //check if we need to format javascript\n    this._print_custom_beatifier_text(printer, raw_token, last_tag_token);\n  } else if (last_tag_token.is_unformatted || last_tag_token.is_content_unformatted) {\n    printer.add_raw_token(raw_token);\n  } else {\n    printer.traverse_whitespace(raw_token);\n    printer.print_token(raw_token);\n  }\n  return parser_token;\n};\n\nBeautifier.prototype._print_custom_beatifier_text = function(printer, raw_token, last_tag_token) {\n  var local = this;\n  if (raw_token.text !== '') {\n    printer.print_newline(false);\n    var text = raw_token.text,\n      _beautifier,\n      script_indent_level = 1;\n    if (last_tag_token.custom_beautifier_name === 'javascript' && typeof this._js_beautify === 'function') {\n      _beautifier = this._js_beautify;\n    } else if (last_tag_token.custom_beautifier_name === 'css' && typeof this._css_beautify === 'function') {\n      _beautifier = this._css_beautify;\n    } else if (last_tag_token.custom_beautifier_name === 'html') {\n      _beautifier = function(html_source, options) {\n        var beautifier = new Beautifier(html_source, options, local._js_beautify, local._css_beautify);\n        return beautifier.beautify();\n      };\n    }\n\n\n    if (this._options.indent_scripts === \"keep\") {\n      script_indent_level = 0;\n    } else if (this._options.indent_scripts === \"separate\") {\n      script_indent_level = -printer.indent_level;\n    }\n\n    var indentation = printer.get_full_indent(script_indent_level);\n\n    // if there is at least one empty line at the end of this text, strip it\n    // we'll be adding one back after the text but before the containing tag.\n    text = text.replace(/\\n[ \\t]*$/, '');\n\n    if (_beautifier) {\n\n      // call the Beautifier if avaliable\n      var Child_options = function() {\n        this.eol = '\\n';\n      };\n      Child_options.prototype = this._options.raw_options;\n      var child_options = new Child_options();\n      text = _beautifier(indentation + text, child_options);\n    } else {\n      // simply indent the string otherwise\n      var white = raw_token.whitespace_before;\n      if (white) {\n        text = text.replace(new RegExp('\\n(' + white + ')?', 'g'), '\\n');\n      }\n\n      text = indentation + text.replace(/\\n/g, '\\n' + indentation);\n    }\n    if (text) {\n      raw_token.text = text;\n      raw_token.whitespace_before = '';\n      raw_token.newlines = 0;\n      printer.add_raw_token(raw_token);\n      printer.print_newline(true);\n    }\n  }\n};\n\nBeautifier.prototype._handle_tag_open = function(printer, raw_token, last_tag_token, last_token) {\n  var parser_token = this._get_tag_open_token(raw_token);\n\n  if ((last_tag_token.is_unformatted || last_tag_token.is_content_unformatted) &&\n    raw_token.type === TOKEN.TAG_OPEN && raw_token.text.indexOf('</') === 0) {\n    // End element tags for unformatted or content_unformatted elements\n    // are printed raw to keep any newlines inside them exactly the same.\n    printer.add_raw_token(raw_token);\n  } else {\n    printer.traverse_whitespace(raw_token);\n    this._set_tag_position(printer, raw_token, parser_token, last_tag_token, last_token);\n    if (!parser_token.is_inline_element) {\n      printer.set_wrap_point();\n    }\n    printer.print_token(raw_token);\n  }\n\n  //indent attributes an auto, forced, aligned or forced-align line-wrap\n  if (this._is_wrap_attributes_force_aligned || this._is_wrap_attributes_aligned_multiple || this._is_wrap_attributes_preserve_aligned) {\n    parser_token.alignment_size = raw_token.text.length + 1;\n  }\n\n  if (!parser_token.tag_complete && !parser_token.is_unformatted) {\n    printer.alignment_size = parser_token.alignment_size;\n  }\n\n  return parser_token;\n};\n\nvar TagOpenParserToken = function(parent, raw_token) {\n  this.parent = parent || null;\n  this.text = '';\n  this.type = 'TK_TAG_OPEN';\n  this.tag_name = '';\n  this.is_inline_element = false;\n  this.is_unformatted = false;\n  this.is_content_unformatted = false;\n  this.is_empty_element = false;\n  this.is_start_tag = false;\n  this.is_end_tag = false;\n  this.indent_content = false;\n  this.multiline_content = false;\n  this.custom_beautifier_name = null;\n  this.start_tag_token = null;\n  this.attr_count = 0;\n  this.has_wrapped_attrs = false;\n  this.alignment_size = 0;\n  this.tag_complete = false;\n  this.tag_start_char = '';\n  this.tag_check = '';\n\n  if (!raw_token) {\n    this.tag_complete = true;\n  } else {\n    var tag_check_match;\n\n    this.tag_start_char = raw_token.text[0];\n    this.text = raw_token.text;\n\n    if (this.tag_start_char === '<') {\n      tag_check_match = raw_token.text.match(/^<([^\\s>]*)/);\n      this.tag_check = tag_check_match ? tag_check_match[1] : '';\n    } else {\n      tag_check_match = raw_token.text.match(/^{{[#\\^]?([^\\s}]+)/);\n      this.tag_check = tag_check_match ? tag_check_match[1] : '';\n    }\n    this.tag_check = this.tag_check.toLowerCase();\n\n    if (raw_token.type === TOKEN.COMMENT) {\n      this.tag_complete = true;\n    }\n\n    this.is_start_tag = this.tag_check.charAt(0) !== '/';\n    this.tag_name = !this.is_start_tag ? this.tag_check.substr(1) : this.tag_check;\n    this.is_end_tag = !this.is_start_tag ||\n      (raw_token.closed && raw_token.closed.text === '/>');\n\n    // handlebars tags that don't start with # or ^ are single_tags, and so also start and end.\n    this.is_end_tag = this.is_end_tag ||\n      (this.tag_start_char === '{' && (this.text.length < 3 || (/[^#\\^]/.test(this.text.charAt(2)))));\n  }\n};\n\nBeautifier.prototype._get_tag_open_token = function(raw_token) { //function to get a full tag and parse its type\n  var parser_token = new TagOpenParserToken(this._tag_stack.get_parser_token(), raw_token);\n\n  parser_token.alignment_size = this._options.wrap_attributes_indent_size;\n\n  parser_token.is_end_tag = parser_token.is_end_tag ||\n    in_array(parser_token.tag_check, this._options.void_elements);\n\n  parser_token.is_empty_element = parser_token.tag_complete ||\n    (parser_token.is_start_tag && parser_token.is_end_tag);\n\n  parser_token.is_unformatted = !parser_token.tag_complete && in_array(parser_token.tag_check, this._options.unformatted);\n  parser_token.is_content_unformatted = !parser_token.is_empty_element && in_array(parser_token.tag_check, this._options.content_unformatted);\n  parser_token.is_inline_element = in_array(parser_token.tag_name, this._options.inline) || parser_token.tag_start_char === '{';\n\n  return parser_token;\n};\n\nBeautifier.prototype._set_tag_position = function(printer, raw_token, parser_token, last_tag_token, last_token) {\n\n  if (!parser_token.is_empty_element) {\n    if (parser_token.is_end_tag) { //this tag is a double tag so check for tag-ending\n      parser_token.start_tag_token = this._tag_stack.try_pop(parser_token.tag_name); //remove it and all ancestors\n    } else { // it's a start-tag\n      // check if this tag is starting an element that has optional end element\n      // and do an ending needed\n      if (this._do_optional_end_element(parser_token)) {\n        if (!parser_token.is_inline_element) {\n          if (parser_token.parent) {\n            parser_token.parent.multiline_content = true;\n          }\n          printer.print_newline(false);\n        }\n\n      }\n\n      this._tag_stack.record_tag(parser_token); //push it on the tag stack\n\n      if ((parser_token.tag_name === 'script' || parser_token.tag_name === 'style') &&\n        !(parser_token.is_unformatted || parser_token.is_content_unformatted)) {\n        parser_token.custom_beautifier_name = get_custom_beautifier_name(parser_token.tag_check, raw_token);\n      }\n    }\n  }\n\n  if (in_array(parser_token.tag_check, this._options.extra_liners)) { //check if this double needs an extra line\n    printer.print_newline(false);\n    if (!printer._output.just_added_blankline()) {\n      printer.print_newline(true);\n    }\n  }\n\n  if (parser_token.is_empty_element) { //if this tag name is a single tag type (either in the list or has a closing /)\n\n    // if you hit an else case, reset the indent level if you are inside an:\n    // 'if', 'unless', or 'each' block.\n    if (parser_token.tag_start_char === '{' && parser_token.tag_check === 'else') {\n      this._tag_stack.indent_to_tag(['if', 'unless', 'each']);\n      parser_token.indent_content = true;\n      // Don't add a newline if opening {{#if}} tag is on the current line\n      var foundIfOnCurrentLine = printer.current_line_has_match(/{{#if/);\n      if (!foundIfOnCurrentLine) {\n        printer.print_newline(false);\n      }\n    }\n\n    // Don't add a newline before elements that should remain where they are.\n    if (parser_token.tag_name === '!--' && last_token.type === TOKEN.TAG_CLOSE &&\n      last_tag_token.is_end_tag && parser_token.text.indexOf('\\n') === -1) {\n      //Do nothing. Leave comments on same line.\n    } else if (!parser_token.is_inline_element && !parser_token.is_unformatted) {\n      printer.print_newline(false);\n    }\n  } else if (parser_token.is_unformatted || parser_token.is_content_unformatted) {\n    if (!parser_token.is_inline_element && !parser_token.is_unformatted) {\n      printer.print_newline(false);\n    }\n  } else if (parser_token.is_end_tag) { //this tag is a double tag so check for tag-ending\n    if ((parser_token.start_tag_token && parser_token.start_tag_token.multiline_content) ||\n      !(parser_token.is_inline_element ||\n        (last_tag_token.is_inline_element) ||\n        (last_token.type === TOKEN.TAG_CLOSE &&\n          parser_token.start_tag_token === last_tag_token) ||\n        (last_token.type === 'TK_CONTENT')\n      )) {\n      printer.print_newline(false);\n    }\n  } else { // it's a start-tag\n    parser_token.indent_content = !parser_token.custom_beautifier_name;\n\n    if (parser_token.tag_start_char === '<') {\n      if (parser_token.tag_name === 'html') {\n        parser_token.indent_content = this._options.indent_inner_html;\n      } else if (parser_token.tag_name === 'head') {\n        parser_token.indent_content = this._options.indent_head_inner_html;\n      } else if (parser_token.tag_name === 'body') {\n        parser_token.indent_content = this._options.indent_body_inner_html;\n      }\n    }\n\n    if (!parser_token.is_inline_element && last_token.type !== 'TK_CONTENT') {\n      if (parser_token.parent) {\n        parser_token.parent.multiline_content = true;\n      }\n      printer.print_newline(false);\n    }\n  }\n};\n\n//To be used for <p> tag special case:\n//var p_closers = ['address', 'article', 'aside', 'blockquote', 'details', 'div', 'dl', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hr', 'main', 'nav', 'ol', 'p', 'pre', 'section', 'table', 'ul'];\n\nBeautifier.prototype._do_optional_end_element = function(parser_token) {\n  var result = null;\n  // NOTE: cases of \"if there is no more content in the parent element\"\n  // are handled automatically by the beautifier.\n  // It assumes parent or ancestor close tag closes all children.\n  // https://www.w3.org/TR/html5/syntax.html#optional-tags\n  if (parser_token.is_empty_element || !parser_token.is_start_tag || !parser_token.parent) {\n    return;\n\n  } else if (parser_token.tag_name === 'body') {\n    // A head element’s end tag may be omitted if the head element is not immediately followed by a space character or a comment.\n    result = result || this._tag_stack.try_pop('head');\n\n    //} else if (parser_token.tag_name === 'body') {\n    // DONE: A body element’s end tag may be omitted if the body element is not immediately followed by a comment.\n\n  } else if (parser_token.tag_name === 'li') {\n    // An li element’s end tag may be omitted if the li element is immediately followed by another li element or if there is no more content in the parent element.\n    result = result || this._tag_stack.try_pop('li', ['ol', 'ul']);\n\n  } else if (parser_token.tag_name === 'dd' || parser_token.tag_name === 'dt') {\n    // A dd element’s end tag may be omitted if the dd element is immediately followed by another dd element or a dt element, or if there is no more content in the parent element.\n    // A dt element’s end tag may be omitted if the dt element is immediately followed by another dt element or a dd element.\n    result = result || this._tag_stack.try_pop('dt', ['dl']);\n    result = result || this._tag_stack.try_pop('dd', ['dl']);\n\n    //} else if (p_closers.indexOf(parser_token.tag_name) !== -1) {\n    //TODO: THIS IS A BUG FARM. We are not putting this into 1.8.0 as it is likely to blow up.\n    //A p element’s end tag may be omitted if the p element is immediately followed by an address, article, aside, blockquote, details, div, dl, fieldset, figcaption, figure, footer, form, h1, h2, h3, h4, h5, h6, header, hr, main, nav, ol, p, pre, section, table, or ul element, or if there is no more content in the parent element and the parent element is an HTML element that is not an a, audio, del, ins, map, noscript, or video element, or an autonomous custom element.\n    //result = result || this._tag_stack.try_pop('p', ['body']);\n\n  } else if (parser_token.tag_name === 'rp' || parser_token.tag_name === 'rt') {\n    // An rt element’s end tag may be omitted if the rt element is immediately followed by an rt or rp element, or if there is no more content in the parent element.\n    // An rp element’s end tag may be omitted if the rp element is immediately followed by an rt or rp element, or if there is no more content in the parent element.\n    result = result || this._tag_stack.try_pop('rt', ['ruby', 'rtc']);\n    result = result || this._tag_stack.try_pop('rp', ['ruby', 'rtc']);\n\n  } else if (parser_token.tag_name === 'optgroup') {\n    // An optgroup element’s end tag may be omitted if the optgroup element is immediately followed by another optgroup element, or if there is no more content in the parent element.\n    // An option element’s end tag may be omitted if the option element is immediately followed by another option element, or if it is immediately followed by an optgroup element, or if there is no more content in the parent element.\n    result = result || this._tag_stack.try_pop('optgroup', ['select']);\n    //result = result || this._tag_stack.try_pop('option', ['select']);\n\n  } else if (parser_token.tag_name === 'option') {\n    // An option element’s end tag may be omitted if the option element is immediately followed by another option element, or if it is immediately followed by an optgroup element, or if there is no more content in the parent element.\n    result = result || this._tag_stack.try_pop('option', ['select', 'datalist', 'optgroup']);\n\n  } else if (parser_token.tag_name === 'colgroup') {\n    // DONE: A colgroup element’s end tag may be omitted if the colgroup element is not immediately followed by a space character or a comment.\n    // A caption element's end tag may be ommitted if a colgroup, thead, tfoot, tbody, or tr element is started.\n    result = result || this._tag_stack.try_pop('caption', ['table']);\n\n  } else if (parser_token.tag_name === 'thead') {\n    // A colgroup element's end tag may be ommitted if a thead, tfoot, tbody, or tr element is started.\n    // A caption element's end tag may be ommitted if a colgroup, thead, tfoot, tbody, or tr element is started.\n    result = result || this._tag_stack.try_pop('caption', ['table']);\n    result = result || this._tag_stack.try_pop('colgroup', ['table']);\n\n    //} else if (parser_token.tag_name === 'caption') {\n    // DONE: A caption element’s end tag may be omitted if the caption element is not immediately followed by a space character or a comment.\n\n  } else if (parser_token.tag_name === 'tbody' || parser_token.tag_name === 'tfoot') {\n    // A thead element’s end tag may be omitted if the thead element is immediately followed by a tbody or tfoot element.\n    // A tbody element’s end tag may be omitted if the tbody element is immediately followed by a tbody or tfoot element, or if there is no more content in the parent element.\n    // A colgroup element's end tag may be ommitted if a thead, tfoot, tbody, or tr element is started.\n    // A caption element's end tag may be ommitted if a colgroup, thead, tfoot, tbody, or tr element is started.\n    result = result || this._tag_stack.try_pop('caption', ['table']);\n    result = result || this._tag_stack.try_pop('colgroup', ['table']);\n    result = result || this._tag_stack.try_pop('thead', ['table']);\n    result = result || this._tag_stack.try_pop('tbody', ['table']);\n\n    //} else if (parser_token.tag_name === 'tfoot') {\n    // DONE: A tfoot element’s end tag may be omitted if there is no more content in the parent element.\n\n  } else if (parser_token.tag_name === 'tr') {\n    // A tr element’s end tag may be omitted if the tr element is immediately followed by another tr element, or if there is no more content in the parent element.\n    // A colgroup element's end tag may be ommitted if a thead, tfoot, tbody, or tr element is started.\n    // A caption element's end tag may be ommitted if a colgroup, thead, tfoot, tbody, or tr element is started.\n    result = result || this._tag_stack.try_pop('caption', ['table']);\n    result = result || this._tag_stack.try_pop('colgroup', ['table']);\n    result = result || this._tag_stack.try_pop('tr', ['table', 'thead', 'tbody', 'tfoot']);\n\n  } else if (parser_token.tag_name === 'th' || parser_token.tag_name === 'td') {\n    // A td element’s end tag may be omitted if the td element is immediately followed by a td or th element, or if there is no more content in the parent element.\n    // A th element’s end tag may be omitted if the th element is immediately followed by a td or th element, or if there is no more content in the parent element.\n    result = result || this._tag_stack.try_pop('td', ['tr']);\n    result = result || this._tag_stack.try_pop('th', ['tr']);\n  }\n\n  // Start element omission not handled currently\n  // A head element’s start tag may be omitted if the element is empty, or if the first thing inside the head element is an element.\n  // A tbody element’s start tag may be omitted if the first thing inside the tbody element is a tr element, and if the element is not immediately preceded by a tbody, thead, or tfoot element whose end tag has been omitted. (It can’t be omitted if the element is empty.)\n  // A colgroup element’s start tag may be omitted if the first thing inside the colgroup element is a col element, and if the element is not immediately preceded by another colgroup element whose end tag has been omitted. (It can’t be omitted if the element is empty.)\n\n  // Fix up the parent of the parser token\n  parser_token.parent = this._tag_stack.get_parser_token();\n\n  return result;\n};\n\nmodule.exports.Beautifier = Beautifier;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar BaseOptions = __webpack_require__(6).Options;\n\nfunction Options(options) {\n  BaseOptions.call(this, options, 'html');\n\n  this.indent_inner_html = this._get_boolean('indent_inner_html');\n  this.indent_body_inner_html = this._get_boolean('indent_body_inner_html', true);\n  this.indent_head_inner_html = this._get_boolean('indent_head_inner_html', true);\n\n  this.indent_handlebars = this._get_boolean('indent_handlebars', true);\n  this.wrap_attributes = this._get_selection('wrap_attributes',\n    ['auto', 'force', 'force-aligned', 'force-expand-multiline', 'aligned-multiple', 'preserve', 'preserve-aligned']);\n  this.wrap_attributes_indent_size = this._get_number('wrap_attributes_indent_size', this.indent_size);\n  this.extra_liners = this._get_array('extra_liners', ['head', 'body', '/html']);\n\n  // Block vs inline elements\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements\n  // https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements\n  // https://www.w3.org/TR/html5/dom.html#phrasing-content\n  this.inline = this._get_array('inline', [\n    'a', 'abbr', 'area', 'audio', 'b', 'bdi', 'bdo', 'br', 'button', 'canvas', 'cite',\n    'code', 'data', 'datalist', 'del', 'dfn', 'em', 'embed', 'i', 'iframe', 'img',\n    'input', 'ins', 'kbd', 'keygen', 'label', 'map', 'mark', 'math', 'meter', 'noscript',\n    'object', 'output', 'progress', 'q', 'ruby', 's', 'samp', /* 'script', */ 'select', 'small',\n    'span', 'strong', 'sub', 'sup', 'svg', 'template', 'textarea', 'time', 'u', 'var',\n    'video', 'wbr', 'text',\n    // obsolete inline tags\n    'acronym', 'big', 'strike', 'tt'\n  ]);\n  this.void_elements = this._get_array('void_elements', [\n    // HTLM void elements - aka self-closing tags - aka singletons\n    // https://www.w3.org/html/wg/drafts/html/master/syntax.html#void-elements\n    'area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen',\n    'link', 'menuitem', 'meta', 'param', 'source', 'track', 'wbr',\n    // NOTE: Optional tags are too complex for a simple list\n    // they are hard coded in _do_optional_end_element\n\n    // Doctype and xml elements\n    '!doctype', '?xml',\n\n    // obsolete tags\n    // basefont: https://www.computerhope.com/jargon/h/html-basefont-tag.htm\n    // isndex: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/isindex\n    'basefont', 'isindex'\n  ]);\n  this.unformatted = this._get_array('unformatted', []);\n  this.content_unformatted = this._get_array('content_unformatted', [\n    'pre', 'textarea'\n  ]);\n  this.unformatted_content_delimiter = this._get_characters('unformatted_content_delimiter');\n  this.indent_scripts = this._get_selection('indent_scripts', ['normal', 'keep', 'separate']);\n}\nOptions.prototype = new BaseOptions();\n\n\n\nmodule.exports.Options = Options;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*jshint node:true */\n/*\n\n  The MIT License (MIT)\n\n  Copyright (c) 2007-2018 Einar Lielmanis, Liam Newman, and contributors.\n\n  Permission is hereby granted, free of charge, to any person\n  obtaining a copy of this software and associated documentation files\n  (the \"Software\"), to deal in the Software without restriction,\n  including without limitation the rights to use, copy, modify, merge,\n  publish, distribute, sublicense, and/or sell copies of the Software,\n  and to permit persons to whom the Software is furnished to do so,\n  subject to the following conditions:\n\n  The above copyright notice and this permission notice shall be\n  included in all copies or substantial portions of the Software.\n\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n  SOFTWARE.\n*/\n\n\n\nvar BaseTokenizer = __webpack_require__(9).Tokenizer;\nvar BASETOKEN = __webpack_require__(9).TOKEN;\nvar Directives = __webpack_require__(13).Directives;\nvar TemplatablePattern = __webpack_require__(14).TemplatablePattern;\nvar Pattern = __webpack_require__(12).Pattern;\n\nvar TOKEN = {\n  TAG_OPEN: 'TK_TAG_OPEN',\n  TAG_CLOSE: 'TK_TAG_CLOSE',\n  ATTRIBUTE: 'TK_ATTRIBUTE',\n  EQUALS: 'TK_EQUALS',\n  VALUE: 'TK_VALUE',\n  COMMENT: 'TK_COMMENT',\n  TEXT: 'TK_TEXT',\n  UNKNOWN: 'TK_UNKNOWN',\n  START: BASETOKEN.START,\n  RAW: BASETOKEN.RAW,\n  EOF: BASETOKEN.EOF\n};\n\nvar directives_core = new Directives(/<\\!--/, /-->/);\n\nvar Tokenizer = function(input_string, options) {\n  BaseTokenizer.call(this, input_string, options);\n  this._current_tag_name = '';\n\n  // Words end at whitespace or when a tag starts\n  // if we are indenting handlebars, they are considered tags\n  var templatable_reader = new TemplatablePattern(this._input);\n  var pattern_reader = new Pattern(this._input);\n\n  this.__patterns = {\n    word: templatable_reader.until(/[\\n\\r\\t <]/),\n    single_quote: templatable_reader.until_after(/'/),\n    double_quote: templatable_reader.until_after(/\"/),\n    attribute: templatable_reader.until(/[\\n\\r\\t =\\/>]/),\n    element_name: templatable_reader.until(/[\\n\\r\\t >\\/]/),\n\n    handlebars_comment: pattern_reader.starting_with(/{{!--/).until_after(/--}}/),\n    handlebars: pattern_reader.starting_with(/{{/).until_after(/}}/),\n    handlebars_open: pattern_reader.until(/[\\n\\r\\t }]/),\n    handlebars_raw_close: pattern_reader.until(/}}/),\n    comment: pattern_reader.starting_with(/<!--/).until_after(/-->/),\n    cdata: pattern_reader.starting_with(/<!\\[cdata\\[/).until_after(/]]>/),\n    // https://en.wikipedia.org/wiki/Conditional_comment\n    conditional_comment: pattern_reader.starting_with(/<!\\[/).until_after(/]>/),\n    processing: pattern_reader.starting_with(/<\\?/).until_after(/\\?>/)\n  };\n\n  if (this._options.indent_handlebars) {\n    this.__patterns.word = this.__patterns.word.exclude('handlebars');\n  }\n\n  this._unformatted_content_delimiter = null;\n\n  if (this._options.unformatted_content_delimiter) {\n    var literal_regexp = this._input.get_literal_regexp(this._options.unformatted_content_delimiter);\n    this.__patterns.unformatted_content_delimiter =\n      pattern_reader.matching(literal_regexp)\n      .until_after(literal_regexp);\n  }\n};\nTokenizer.prototype = new BaseTokenizer();\n\nTokenizer.prototype._is_comment = function(current_token) { // jshint unused:false\n  return false; //current_token.type === TOKEN.COMMENT || current_token.type === TOKEN.UNKNOWN;\n};\n\nTokenizer.prototype._is_opening = function(current_token) {\n  return current_token.type === TOKEN.TAG_OPEN;\n};\n\nTokenizer.prototype._is_closing = function(current_token, open_token) {\n  return current_token.type === TOKEN.TAG_CLOSE &&\n    (open_token && (\n      ((current_token.text === '>' || current_token.text === '/>') && open_token.text[0] === '<') ||\n      (current_token.text === '}}' && open_token.text[0] === '{' && open_token.text[1] === '{')));\n};\n\nTokenizer.prototype._reset = function() {\n  this._current_tag_name = '';\n};\n\nTokenizer.prototype._get_next_token = function(previous_token, open_token) { // jshint unused:false\n  var token = null;\n  this._readWhitespace();\n  var c = this._input.peek();\n\n  if (c === null) {\n    return this._create_token(TOKEN.EOF, '');\n  }\n\n  token = token || this._read_open_handlebars(c, open_token);\n  token = token || this._read_attribute(c, previous_token, open_token);\n  token = token || this._read_raw_content(previous_token, open_token);\n  token = token || this._read_close(c, open_token);\n  token = token || this._read_content_word(c);\n  token = token || this._read_comment(c);\n  token = token || this._read_open(c, open_token);\n  token = token || this._create_token(TOKEN.UNKNOWN, this._input.next());\n\n  return token;\n};\n\nTokenizer.prototype._read_comment = function(c) { // jshint unused:false\n  var token = null;\n  var resulting_string = null;\n  var directives = null;\n\n  if (c === '<') {\n    var peek1 = this._input.peek(1);\n    //if we're in a comment, do something special\n    // We treat all comments as literals, even more than preformatted tags\n    // we just look for the appropriate close tag\n    if (c === '<' && (peek1 === '!' || peek1 === '?')) {\n      resulting_string = this.__patterns.comment.read();\n\n      // only process directive on html comments\n      if (resulting_string) {\n        directives = directives_core.get_directives(resulting_string);\n        if (directives && directives.ignore === 'start') {\n          resulting_string += directives_core.readIgnored(this._input);\n        }\n      } else {\n        resulting_string = this.__patterns.cdata.read();\n        resulting_string = resulting_string || this.__patterns.conditional_comment.read();\n        resulting_string = resulting_string || this.__patterns.processing.read();\n      }\n    }\n\n    if (resulting_string) {\n      token = this._create_token(TOKEN.COMMENT, resulting_string);\n      token.directives = directives;\n    }\n  }\n\n  return token;\n};\n\nTokenizer.prototype._read_open = function(c, open_token) {\n  var resulting_string = null;\n  var token = null;\n  if (!open_token) {\n    if (c === '<') {\n\n      resulting_string = this._input.next();\n      if (this._input.peek() === '/') {\n        resulting_string += this._input.next();\n      }\n      resulting_string += this.__patterns.element_name.read();\n      token = this._create_token(TOKEN.TAG_OPEN, resulting_string);\n    }\n  }\n  return token;\n};\n\nTokenizer.prototype._read_open_handlebars = function(c, open_token) {\n  var resulting_string = null;\n  var token = null;\n  if (!open_token) {\n    if (this._options.indent_handlebars && c === '{' && this._input.peek(1) === '{') {\n      if (this._input.peek(2) === '!') {\n        resulting_string = this.__patterns.handlebars_comment.read();\n        resulting_string = resulting_string || this.__patterns.handlebars.read();\n        token = this._create_token(TOKEN.COMMENT, resulting_string);\n      } else {\n        resulting_string = this.__patterns.handlebars_open.read();\n        token = this._create_token(TOKEN.TAG_OPEN, resulting_string);\n      }\n    }\n  }\n  return token;\n};\n\n\nTokenizer.prototype._read_close = function(c, open_token) {\n  var resulting_string = null;\n  var token = null;\n  if (open_token) {\n    if (open_token.text[0] === '<' && (c === '>' || (c === '/' && this._input.peek(1) === '>'))) {\n      resulting_string = this._input.next();\n      if (c === '/') { //  for close tag \"/>\"\n        resulting_string += this._input.next();\n      }\n      token = this._create_token(TOKEN.TAG_CLOSE, resulting_string);\n    } else if (open_token.text[0] === '{' && c === '}' && this._input.peek(1) === '}') {\n      this._input.next();\n      this._input.next();\n      token = this._create_token(TOKEN.TAG_CLOSE, '}}');\n    }\n  }\n\n  return token;\n};\n\nTokenizer.prototype._read_attribute = function(c, previous_token, open_token) {\n  var token = null;\n  var resulting_string = '';\n  if (open_token && open_token.text[0] === '<') {\n\n    if (c === '=') {\n      token = this._create_token(TOKEN.EQUALS, this._input.next());\n    } else if (c === '\"' || c === \"'\") {\n      var content = this._input.next();\n      if (c === '\"') {\n        content += this.__patterns.double_quote.read();\n      } else {\n        content += this.__patterns.single_quote.read();\n      }\n      token = this._create_token(TOKEN.VALUE, content);\n    } else {\n      resulting_string = this.__patterns.attribute.read();\n\n      if (resulting_string) {\n        if (previous_token.type === TOKEN.EQUALS) {\n          token = this._create_token(TOKEN.VALUE, resulting_string);\n        } else {\n          token = this._create_token(TOKEN.ATTRIBUTE, resulting_string);\n        }\n      }\n    }\n  }\n  return token;\n};\n\nTokenizer.prototype._is_content_unformatted = function(tag_name) {\n  // void_elements have no content and so cannot have unformatted content\n  // script and style tags should always be read as unformatted content\n  // finally content_unformatted and unformatted element contents are unformatted\n  return this._options.void_elements.indexOf(tag_name) === -1 &&\n    (tag_name === 'script' || tag_name === 'style' ||\n      this._options.content_unformatted.indexOf(tag_name) !== -1 ||\n      this._options.unformatted.indexOf(tag_name) !== -1);\n};\n\n\nTokenizer.prototype._read_raw_content = function(previous_token, open_token) { // jshint unused:false\n  var resulting_string = '';\n  if (open_token && open_token.text[0] === '{') {\n    resulting_string = this.__patterns.handlebars_raw_close.read();\n  } else if (previous_token.type === TOKEN.TAG_CLOSE && (previous_token.opened.text[0] === '<')) {\n    var tag_name = previous_token.opened.text.substr(1).toLowerCase();\n    if (this._is_content_unformatted(tag_name)) {\n      resulting_string = this._input.readUntil(new RegExp('</' + tag_name + '[\\\\n\\\\r\\\\t ]*?>', 'ig'));\n    }\n  }\n\n  if (resulting_string) {\n    return this._create_token(TOKEN.TEXT, resulting_string);\n  }\n\n  return null;\n};\n\nTokenizer.prototype._read_content_word = function(c) {\n  var resulting_string = '';\n  if (this._options.unformatted_content_delimiter) {\n    if (c === this._options.unformatted_content_delimiter[0]) {\n      resulting_string = this.__patterns.unformatted_content_delimiter.read();\n    }\n  }\n\n  if (!resulting_string) {\n    resulting_string = this.__patterns.word.read();\n  }\n  if (resulting_string) {\n    return this._create_token(TOKEN.TEXT, resulting_string);\n  }\n};\n\nmodule.exports.Tokenizer = Tokenizer;\nmodule.exports.TOKEN = TOKEN;\n\n\n/***/ })\n/******/ ]);\nvar style_html = legacy_beautify_html;\n/* Footer */\nif (typeof define === \"function\" && define.amd) {\n    // Add support for AMD ( https://github.com/amdjs/amdjs-api/wiki/AMD#defineamd-property- )\n    define([\"require\", \"./beautify\", \"./beautify-css\"], function(requireamd) {\n        var js_beautify = requireamd(\"./beautify\");\n        var css_beautify = requireamd(\"./beautify-css\");\n\n        return {\n            html_beautify: function(html_source, options) {\n                return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);\n            }\n        };\n    });\n} else if (typeof exports !== \"undefined\") {\n    // Add support for CommonJS. Just put this file somewhere on your require.paths\n    // and you will be able to `var html_beautify = require(\"beautify\").html_beautify`.\n    var js_beautify = require('./beautify.js');\n    var css_beautify = require('./beautify-css.js');\n\n    exports.html_beautify = function(html_source, options) {\n        return style_html(html_source, options, js_beautify.js_beautify, css_beautify.css_beautify);\n    };\n} else if (typeof window !== \"undefined\") {\n    // If we're running a web page and don't have either of the above, add our one global\n    window.html_beautify = function(html_source, options) {\n        return style_html(html_source, options, window.js_beautify, window.css_beautify);\n    };\n} else if (typeof global !== \"undefined\") {\n    // If we don't even have window, try global.\n    global.html_beautify = function(html_source, options) {\n        return style_html(html_source, options, global.js_beautify, global.css_beautify);\n    };\n}\n\n}());\n"],"sourceRoot":""}