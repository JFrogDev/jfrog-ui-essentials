{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/d3-brush/src/brush.js"],"names":["__webpack_require__","d","__webpack_exports__","brushSelection","brushX","brushY","d3_dispatch__WEBPACK_IMPORTED_MODULE_0__","d3_drag__WEBPACK_IMPORTED_MODULE_1__","d3_interpolate__WEBPACK_IMPORTED_MODULE_2__","d3_selection__WEBPACK_IMPORTED_MODULE_3__","d3_transition__WEBPACK_IMPORTED_MODULE_4__","_constant__WEBPACK_IMPORTED_MODULE_5__","_event__WEBPACK_IMPORTED_MODULE_6__","_noevent__WEBPACK_IMPORTED_MODULE_7__","MODE_DRAG","name","MODE_SPACE","MODE_HANDLE","MODE_CENTER","X","handles","map","type","input","x","e","output","xy","Y","y","XY","cursors","overlay","selection","n","s","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","t","defaultFilter","button","defaultExtent","svg","this","ownerSVGElement","width","baseVal","value","height","local","node","__brush","parentNode","empty","extent","state","dim","brush","touchending","filter","listeners","Object","handleSize","group","property","initialize","selectAll","data","enter","append","attr","merge","each","handle","exit","remove","redraw","style","on","started","length","emitter","that","args","Emitter","active","touches","changedTouches","apply","arguments","w0","w1","n0","n1","e0","e1","s0","s1","dx","dy","moving","lockX","lockY","target","__data__","mode","metaKey","altKey","signX","signY","W","N","E","S","shifting","shiftKey","point0","point","emit","beforestart","moved","ended","view","keydowned","keyupped","call","start","point1","Math","abs","move","max","min","clearTimeout","setTimeout","end","keyCode","tween","selection0","selection1","i","prototype","starting","_"],"mappings":"sMAAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAA,IAAAC,EAAAN,EAAA,QAAAO,EAAAP,EAAA,QAAAQ,EAAAR,EAAA,QAAAS,EAAAT,EAAA,QAAAU,EAAAV,EAAA,QAAAW,EAAAX,EAAA,QAAAY,EAAAZ,EAAA,QAAAa,EAAAb,EAAA,QASAc,EAAA,CAAiBC,KAAA,QACjBC,EAAA,CAAkBD,KAAA,SAClBE,EAAA,CAAmBF,KAAA,UACnBG,EAAA,CAAmBH,KAAA,UAEnBI,EAAA,CACAJ,KAAA,IACAK,QAAA,UAAAC,IAAAC,GACAC,MAAA,SAAAC,EAAAC,GAAyB,OAAAD,GAAA,EAAAA,EAAA,GAAAC,EAAA,QAAAD,EAAA,GAAAC,EAAA,SACzBC,OAAA,SAAAC,GAAwB,OAAAA,GAAA,CAAAA,EAAA,MAAAA,EAAA,SAGxBC,EAAA,CACAb,KAAA,IACAK,QAAA,UAAAC,IAAAC,GACAC,MAAA,SAAAM,EAAAJ,GAAyB,OAAAI,GAAA,EAAAJ,EAAA,MAAAI,EAAA,KAAAJ,EAAA,MAAAI,EAAA,MACzBH,OAAA,SAAAC,GAAwB,OAAAA,GAAA,CAAAA,EAAA,MAAAA,EAAA,SAGxBG,EAAA,CACAf,KAAA,KACAK,QAAA,sCAAAC,IAAAC,GACAC,MAAA,SAAAI,GAAuB,OAAAA,GACvBD,OAAA,SAAAC,GAAwB,OAAAA,IAGxBI,EAAA,CACAC,QAAA,YACAC,UAAA,OACAC,EAAA,YACAT,EAAA,YACAU,EAAA,YACAC,EAAA,YACAC,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAGAC,EAAA,CACAhB,EAAA,IACAW,EAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGAE,EAAA,CACAR,EAAA,IACAC,EAAA,IACAE,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGAG,EAAA,CACAX,QAAA,EACAC,UAAA,EACAC,EAAA,KACAT,EAAA,EACAU,EAAA,KACAC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,GAGAI,EAAA,CACAZ,QAAA,EACAC,UAAA,EACAC,GAAA,EACAT,EAAA,KACAU,EAAA,EACAC,EAAA,KACAC,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,GAGA,SAAAlB,EAAAuB,GACA,OAAUvB,KAAAuB,GAIV,SAAAC,IACA,OAAUrC,EAAA,SAAKsC,OAGf,SAAAC,IACA,IAAAC,EAAAC,KAAAC,iBAAAD,KACA,cAAAD,EAAAG,MAAAC,QAAAC,MAAAL,EAAAM,OAAAF,QAAAC,QAIA,SAAAE,EAAAC,GACA,OAAAA,EAAAC,QAAA,KAAAD,IAAAE,YAAA,OACA,OAAAF,EAAAC,QAGA,SAAAE,EAAAC,GACA,OAAAA,EAAA,QAAAA,EAAA,OACAA,EAAA,QAAAA,EAAA,MAGO,SAAA1D,EAAAsD,GACP,IAAAK,EAAAL,EAAAC,QACA,OAAAI,IAAAC,IAAArC,OAAAoC,EAAA7B,WAAA,KAGO,SAAA7B,IACP,OAAA4D,EAAA7C,GAGO,SAAAd,IACP,OAAA2D,EAAApC,GAOA,SAAAoC,EAAAD,GACA,IAIAE,EAJAJ,EAAAb,EACAkB,EAAApB,EACAqB,EAAkBC,OAAA9D,EAAA,KAAA8D,CAAQJ,EAAA,uBAC1BK,EAAA,EAGA,SAAAL,EAAAM,GACA,IAAAtC,EAAAsC,EACAC,SAAA,UAAAC,GACAC,UAAA,YACAC,KAAA,CAAApD,EAAA,aAEAU,EAAA2C,QAAAC,OAAA,QACAC,KAAA,mBACAA,KAAA,wBACAA,KAAA,SAAA9C,EAAAC,SACA8C,MAAA9C,GACA+C,KAAA,WACA,IAAAlB,EAAAL,EAAAN,MAAAW,OACUO,OAAA3D,EAAA,UAAA2D,CAAMlB,MAChB2B,KAAA,IAAAhB,EAAA,OACAgB,KAAA,IAAAhB,EAAA,OACAgB,KAAA,QAAAhB,EAAA,MAAAA,EAAA,OACAgB,KAAA,SAAAhB,EAAA,MAAAA,EAAA,SAGAS,EAAAG,UAAA,cACAC,KAAA,CAAApD,EAAA,eACAqD,QAAAC,OAAA,QACAC,KAAA,qBACAA,KAAA,SAAA9C,EAAAE,WACA4C,KAAA,eACAA,KAAA,mBACAA,KAAA,iBACAA,KAAA,gCAEA,IAAAG,EAAAV,EAAAG,UAAA,WACAC,KAAAX,EAAA3C,QAAA,SAAAnB,GAAsC,OAAAA,EAAAqB,OAEtC0D,EAAAC,OAAAC,SAEAF,EAAAL,QAAAC,OAAA,QACAC,KAAA,iBAAA5E,GAAoC,wBAAAA,EAAAqB,OACpCuD,KAAA,kBAAA5E,GAAqC,OAAA8B,EAAA9B,EAAAqB,QAErCgD,EACAS,KAAAI,GACAN,KAAA,eACAA,KAAA,wBACAO,MAAA,+CACAC,GAAA,mCAAAC,GAyCA,SAAAH,IACA,IAAAb,EAAgBF,OAAA3D,EAAA,UAAA2D,CAAMlB,MACtBjB,EAAAuB,EAAAN,MAAAjB,UAEAA,GACAqC,EAAAG,UAAA,cACAW,MAAA,gBACAP,KAAA,IAAA5C,EAAA,OACA4C,KAAA,IAAA5C,EAAA,OACA4C,KAAA,QAAA5C,EAAA,MAAAA,EAAA,OACA4C,KAAA,SAAA5C,EAAA,MAAAA,EAAA,OAEAqC,EAAAG,UAAA,WACAW,MAAA,gBACAP,KAAA,aAAA5E,GAAkC,YAAAA,EAAAqB,KAAArB,EAAAqB,KAAAiE,OAAA,GAAAtD,EAAA,MAAAoC,EAAA,EAAApC,EAAA,MAAAoC,EAAA,IAClCQ,KAAA,aAAA5E,GAAkC,YAAAA,EAAAqB,KAAA,GAAAW,EAAA,MAAAoC,EAAA,EAAApC,EAAA,MAAAoC,EAAA,IAClCQ,KAAA,iBAAA5E,GAAsC,YAAAA,EAAAqB,MAAA,MAAArB,EAAAqB,KAAAW,EAAA,MAAAA,EAAA,MAAAoC,MACtCQ,KAAA,kBAAA5E,GAAuC,YAAAA,EAAAqB,MAAA,MAAArB,EAAAqB,KAAAW,EAAA,MAAAA,EAAA,MAAAoC,OAIvCC,EAAAG,UAAA,sBACAW,MAAA,kBACAP,KAAA,UACAA,KAAA,UACAA,KAAA,cACAA,KAAA,eAIA,SAAAW,EAAAC,EAAAC,GACA,OAAAD,EAAA/B,QAAA8B,SAAA,IAAAG,EAAAF,EAAAC,GAGA,SAAAC,EAAAF,EAAAC,GACAxC,KAAAuC,OACAvC,KAAAwC,OACAxC,KAAAY,MAAA2B,EAAA/B,QACAR,KAAA0C,OAAA,EAyBA,SAAAN,IACA,GAAQ7E,EAAA,SAAKoF,SAAW,GAAKpF,EAAA,SAAKqF,eAAAP,OAAyB9E,EAAA,SAAKoF,QAAAN,OAAA,OAAwBnB,OAAAvD,EAAA,KAAAuD,QACxF,GAAAH,EAAA,OACA,GAAAC,EAAA6B,MAAA7C,KAAA8C,WAAA,CAEA,IAQAC,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EACAC,EAAAC,EACAC,EACAC,EACAC,EAEAC,EACAC,EAjBApB,EAAAvC,KACA5B,EAAeb,EAAA,SAAKqG,OAAAC,SAAAzF,KACpB0F,EAAqB,eAALvG,EAAA,SAAKwG,QAAA3F,EAAA,UAAAA,GAAAR,EAAmEL,EAAA,SAAKyG,OAAAhG,EAAAD,EAC7FkG,EAAApD,IAAAnC,EAAA,KAAAe,EAAArB,GACA8F,EAAArD,IAAA5C,EAAA,KAAAyB,EAAAtB,GACAwC,EAAAN,EAAAiC,GACA5B,EAAAC,EAAAD,OACA5B,EAAA6B,EAAA7B,UACAoF,EAAAxD,EAAA,MACAyD,EAAAzD,EAAA,MACA0D,EAAA1D,EAAA,MACA2D,EAAA3D,EAAA,MAIA4D,EAAAN,GAAAC,GAAqC3G,EAAA,SAAKiH,SAG1CC,EAAiBvD,OAAA3D,EAAA,SAAA2D,CAAKqB,GACtBmC,EAAAD,EACAE,EAAArC,EAAAC,EAAAO,WAAA8B,cAEA,YAAAxG,EACAwC,EAAA7B,YAAA,CACA,CAAAgE,EAAAlC,IAAAnC,EAAAyF,EAAAM,EAAA,GAAAxB,EAAApC,IAAA5C,EAAAmG,EAAAK,EAAA,IACA,CAAAtB,EAAAtC,IAAAnC,EAAA2F,EAAAtB,EAAAM,EAAAxC,IAAA5C,EAAAqG,EAAArB,KAGAF,EAAAhE,EAAA,MACAkE,EAAAlE,EAAA,MACAoE,EAAApE,EAAA,MACAsE,EAAAtE,EAAA,OAGAiE,EAAAD,EACAG,EAAAD,EACAG,EAAAD,EACAG,EAAAD,EAEA,IAAAjC,EAAgBF,OAAA3D,EAAA,UAAA2D,CAAMqB,GACtBZ,KAAA,yBAEA7C,EAAAsC,EAAAG,UAAA,YACAI,KAAA,SAAA9C,EAAAT,IAEA,GAAQb,EAAA,SAAKoF,QACbvB,EACAe,GAAA,kBAAA0C,IAAA,GACA1C,GAAA,mCAAA2C,IAAA,OACK,CACL,IAAAC,EAAiB7D,OAAA3D,EAAA,UAAA2D,CAAO3D,EAAA,SAAKwH,MAC7B5C,GAAA,gBAAA6C,IAAA,GACA7C,GAAA,cAAA8C,IAAA,GACA9C,GAAA,kBAAA0C,IAAA,GACA1C,GAAA,gBAAA2C,IAAA,GAEM5D,OAAA7D,EAAA,eAAA6D,CAAY3D,EAAA,SAAKwH,MAGnB7D,OAAAvD,EAAA,KAAAuD,GACAA,OAAA1D,EAAA,aAAA0D,CAASqB,GACbN,EAAAiD,KAAA3C,GACAoC,EAAAQ,QAEA,SAAAN,KACA,IAAAO,EAAmBlE,OAAA3D,EAAA,SAAA2D,CAAKqB,IACxBgC,GAAAb,GAAAC,IACA0B,KAAAC,IAAAF,EAAA,GAAAV,EAAA,IAAAW,KAAAC,IAAAF,EAAA,GAAAV,EAAA,IAAAf,GAAA,EACAD,GAAA,GAEAgB,EAAAU,EACA3B,GAAA,EACMvC,OAAAvD,EAAA,KAAAuD,GACNqE,KAGA,SAAAA,KACA,IAAA5F,EAKA,OAHA4D,EAAAmB,EAAA,GAAAD,EAAA,GACAjB,EAAAkB,EAAA,GAAAD,EAAA,GAEAX,GACA,KAAAhG,EACA,KAAAF,EACAqG,IAAAV,EAAA8B,KAAAG,IAAArB,EAAApB,EAAAsC,KAAAI,IAAApB,EAAAlB,EAAAI,IAAAP,EAAAD,EAAAQ,EAAAH,EAAAD,EAAAI,GACAW,IAAAV,EAAA6B,KAAAG,IAAApB,EAAAnB,EAAAoC,KAAAI,IAAAnB,EAAAjB,EAAAG,IAAAN,EAAAD,EAAAO,EAAAF,EAAAD,EAAAG,GACA,MAEA,KAAAzF,EACAkG,EAAA,GAAAV,EAAA8B,KAAAG,IAAArB,EAAApB,EAAAsC,KAAAI,IAAApB,EAAAtB,EAAAQ,IAAAP,EAAAD,EAAAQ,EAAAH,EAAAD,GACAc,EAAA,IAAAV,EAAA8B,KAAAG,IAAArB,EAAAhB,EAAAkC,KAAAI,IAAApB,EAAAlB,EAAAI,IAAAP,EAAAD,EAAAK,EAAAD,EAAAI,GACAW,EAAA,GAAAV,EAAA6B,KAAAG,IAAApB,EAAAnB,EAAAoC,KAAAI,IAAAnB,EAAArB,EAAAO,IAAAN,EAAAD,EAAAO,EAAAF,EAAAD,GACAa,EAAA,IAAAV,EAAA6B,KAAAG,IAAApB,EAAAf,EAAAgC,KAAAI,IAAAnB,EAAAjB,EAAAG,IAAAN,EAAAD,EAAAK,EAAAD,EAAAG,GACA,MAEA,KAAAxF,EACAiG,IAAAjB,EAAAqC,KAAAG,IAAArB,EAAAkB,KAAAI,IAAApB,EAAAtB,EAAAQ,EAAAU,IAAAb,EAAAiC,KAAAG,IAAArB,EAAAkB,KAAAI,IAAApB,EAAAlB,EAAAI,EAAAU,KACAC,IAAAhB,EAAAmC,KAAAG,IAAApB,EAAAiB,KAAAI,IAAAnB,EAAArB,EAAAO,EAAAU,IAAAZ,EAAA+B,KAAAG,IAAApB,EAAAiB,KAAAI,IAAAnB,EAAAjB,EAAAG,EAAAU,KACA,MAIAd,EAAAJ,IACAiB,IAAA,EACAtE,EAAAoD,IAAAI,IAAAxD,EACAA,EAAAqD,IAAAI,IAAAzD,EACAvB,KAAAmB,GAAAT,EAAA6C,KAAA,SAAA9C,EAAAT,EAAAmB,EAAAnB,MAGAkF,EAAAJ,IACAgB,IAAA,EACAvE,EAAAsD,IAAAI,IAAA1D,EACAA,EAAAuD,IAAAI,IAAA3D,EACAvB,KAAAoB,GAAAV,EAAA6C,KAAA,SAAA9C,EAAAT,EAAAoB,EAAApB,MAGAwC,EAAA7B,cAAA6B,EAAA7B,WACA2E,IAAAV,EAAAjE,EAAA,MAAAqE,EAAArE,EAAA,OACA4E,IAAAT,EAAAnE,EAAA,MAAAuE,EAAAvE,EAAA,OAEAA,EAAA,QAAAiE,GACAjE,EAAA,QAAAmE,GACAnE,EAAA,QAAAqE,GACArE,EAAA,QAAAuE,IACA1C,EAAA7B,UAAA,EAAAiE,EAAAE,GAAA,CAAAE,EAAAE,IACArB,EAAAiD,KAAA3C,GACAoC,EAAA7D,SAIA,SAAAgE,KAEA,GADM5D,OAAAvD,EAAA,KAAAuD,GACI3D,EAAA,SAAKoF,QAAA,CACf,GAAYpF,EAAA,SAAKoF,QAAAN,OAAA,OACjBtB,GAAA2E,aAAA3E,GACAA,EAAA4E,WAAA,WAA6C5E,EAAA,MAAsB,KACnEK,EAAAe,GAAA,8DAEQjB,OAAA7D,EAAA,cAAA6D,CAAW3D,EAAA,SAAKwH,KAAAtB,GACxBsB,EAAA5C,GAAA,gEAEAf,EAAAO,KAAA,wBACA7C,EAAA6C,KAAA,SAAA9C,EAAAC,SACA8B,EAAA7B,cAAA6B,EAAA7B,WACA2B,EAAA3B,KAAA6B,EAAA7B,UAAA,KAAAkD,EAAAiD,KAAA3C,IACAoC,EAAAiB,MAGA,SAAAZ,KACA,OAAczH,EAAA,SAAKsI,SACnB,QACAtB,EAAAN,GAAAC,EACA,MAEA,QACAJ,IAAA/F,IACAkG,IAAAd,EAAAC,EAAAG,EAAAU,EAAAlB,EAAAC,EAAAO,EAAAU,GACAC,IAAAb,EAAAC,EAAAE,EAAAU,EAAAjB,EAAAC,EAAAM,EAAAU,GACAJ,EAAA9F,EACAuH,MAEA,MAEA,QACAzB,IAAA/F,GAAA+F,IAAA9F,IACAiG,EAAA,EAAAd,EAAAC,EAAAG,EAAwCU,EAAA,IAAAlB,EAAAC,EAAAO,GACxCW,EAAA,EAAAb,EAAAC,EAAAE,EAAwCU,EAAA,IAAAjB,EAAAC,EAAAM,GACxCM,EAAAhG,EACAgB,EAAA6C,KAAA,SAAA9C,EAAAE,WACAwG,MAEA,MAEA,eAEMrE,OAAAvD,EAAA,KAAAuD,GAGN,SAAA+D,KACA,OAAc1H,EAAA,SAAKsI,SACnB,QACAtB,IACAb,EAAAC,EAAAY,GAAA,EACAgB,MAEA,MAEA,QACAzB,IAAA9F,IACAiG,EAAA,EAAAd,EAAAC,EAAmCa,EAAA,IAAAlB,EAAAC,GACnCkB,EAAA,EAAAb,EAAAC,EAAmCY,EAAA,IAAAjB,EAAAC,GACnCY,EAAA/F,EACAwH,MAEA,MAEA,QACAzB,IAAAhG,IACgBP,EAAA,SAAKyG,QACrBC,IAAAd,EAAAC,EAAAG,EAAAU,EAAAlB,EAAAC,EAAAO,EAAAU,GACAC,IAAAb,EAAAC,EAAAE,EAAAU,EAAAjB,EAAAC,EAAAM,EAAAU,GACAJ,EAAA9F,IAEAiG,EAAA,EAAAd,EAAAC,EAAqCa,EAAA,IAAAlB,EAAAC,GACrCkB,EAAA,EAAAb,EAAAC,EAAqCY,EAAA,IAAAjB,EAAAC,GACrCY,EAAA/F,GAEAe,EAAA6C,KAAA,SAAA9C,EAAAT,IACAmH,MAEA,MAEA,eAEMrE,OAAAvD,EAAA,KAAAuD,IAIN,SAAAI,IACA,IAAAV,EAAAZ,KAAAQ,SAAA,CAAiCzB,UAAA,MAGjC,OAFA6B,EAAAD,SAAAkC,MAAA7C,KAAA8C,WACAlC,EAAAC,MACAD,EAoBA,OA7VAE,EAAAyE,KAAA,SAAAnE,EAAArC,GACAqC,EAAArC,UACAqC,EACAe,GAAA,yBAAyCG,EAAAtC,KAAA8C,WAAA8B,cAAAO,UACzChD,GAAA,uCAAuDG,EAAAtC,KAAA8C,WAAA8C,QACvDE,MAAA,mBACA,IAAAvD,EAAAvC,KACAY,EAAA2B,EAAA/B,QACAmE,EAAArC,EAAAC,EAAAO,WACAiD,EAAAnF,EAAA7B,UACAiH,EAAAnF,EAAAxC,MAAA,oBAAAU,IAAA8D,MAAA7C,KAAA8C,WAAA/D,EAAA6B,EAAAD,QACAsF,EAAoB/E,OAAA5D,EAAA,eAAA4D,CAAW6E,EAAAC,GAE/B,SAAAF,EAAAnG,GACAiB,EAAA7B,UAAA,IAAAY,GAAAe,EAAAsF,GAAA,KAAAC,EAAAtG,GACAsC,EAAAiD,KAAA3C,GACAoC,EAAA7D,QAGA,OAAAiF,GAAAC,EAAAF,IAAA,KAGA1E,EACAS,KAAA,WACA,IAAAU,EAAAvC,KACAwC,EAAAM,UACAlC,EAAA2B,EAAA/B,QACAwF,EAAAnF,EAAAxC,MAAA,oBAAAU,IAAA8D,MAAAN,EAAAC,GAAAzD,EAAA6B,EAAAD,QACAgE,EAAArC,EAAAC,EAAAC,GAAAoC,cAEY1D,OAAA1D,EAAA,aAAA0D,CAASqB,GACrB3B,EAAA7B,UAAA,MAAAiH,GAAAtF,EAAAsF,GAAA,KAAAA,EACA/D,EAAAiD,KAAA3C,GACAoC,EAAAQ,QAAArE,QAAA8E,SA8CAnD,EAAAyD,UAAA,CACAtB,YAAA,WAEA,OADA,MAAA5E,KAAA0C,SAAA1C,KAAAY,MAAA0B,QAAAtC,UAAAmG,UAAA,GACAnG,MAEAmF,MAAA,WAEA,OADAnF,KAAAmG,WAAAnG,KAAAmG,UAAA,EAAAnG,KAAA2E,KAAA,UACA3E,MAEAc,MAAA,WAEA,OADAd,KAAA2E,KAAA,SACA3E,MAEA4F,IAAA,WAEA,OADA,MAAA5F,KAAA0C,gBAAA1C,KAAAY,MAAA0B,QAAAtC,KAAA2E,KAAA,QACA3E,MAEA2E,KAAA,SAAAvG,GACM8C,OAAA3D,EAAA,eAAA2D,CAAW,IAAKxD,EAAA,KAAUoD,EAAA1C,EAAAyC,EAAArC,OAAAwB,KAAAY,MAAA7B,YAAAkC,EAAA4B,MAAA5B,EAAA,CAAA7C,EAAA4B,KAAAuC,KAAAvC,KAAAwC,SA2OhC1B,EAAAH,OAAA,SAAAyF,GACA,OAAAtD,UAAAT,QAAA1B,EAAA,oBAAAyF,IAAsElF,OAAAzD,EAAA,KAAAyD,CAAQ,GAAAkF,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAAtF,GAAAH,GAG9EG,EAAAE,OAAA,SAAAoF,GACA,OAAAtD,UAAAT,QAAArB,EAAA,oBAAAoF,IAAsElF,OAAAzD,EAAA,KAAAyD,GAAQkF,GAAAtF,GAAAE,GAG9EF,EAAAK,WAAA,SAAAiF,GACA,OAAAtD,UAAAT,QAAAlB,GAAAiF,EAAAtF,GAAAK,GAGAL,EAAAqB,GAAA,WACA,IAAA/B,EAAAa,EAAAkB,GAAAU,MAAA5B,EAAA6B,WACA,OAAA1C,IAAAa,EAAAH,EAAAV,GAGAU,EAvZe9D,EAAA,gBACf,OAAA8D,EAAAlC","file":"jfrog-ui-essentials.umd.min.vendors-chunks~2bb936f3.js","sourcesContent":["import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n"],"sourceRoot":""}