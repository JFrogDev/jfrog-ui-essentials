{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/d3-scale/src/utcTime.js","webpack://jfrog-ui-essentials/./node_modules/d3-scale/src/time.js","webpack://jfrog-ui-essentials/./node_modules/d3-scale/src/threshold.js","webpack://jfrog-ui-essentials/./node_modules/d3-scale/src/tickFormat.js","webpack://jfrog-ui-essentials/./node_modules/d3-scale/src/symlog.js"],"names":["_time__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","d3_time_format__WEBPACK_IMPORTED_MODULE_1__","d3_time__WEBPACK_IMPORTED_MODULE_2__","_init__WEBPACK_IMPORTED_MODULE_3__","__webpack_exports__","apply","Object","domain","Date","UTC","arguments","d","calendar","d3_array__WEBPACK_IMPORTED_MODULE_0__","d3_time__WEBPACK_IMPORTED_MODULE_1__","d3_time_format__WEBPACK_IMPORTED_MODULE_2__","_array__WEBPACK_IMPORTED_MODULE_3__","_continuous__WEBPACK_IMPORTED_MODULE_4__","_init__WEBPACK_IMPORTED_MODULE_5__","_nice__WEBPACK_IMPORTED_MODULE_6__","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","date","t","number","year","month","week","day","hour","minute","second","millisecond","format","scale","invert","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickFormat","tickInterval","interval","start","stop","step","target","Math","abs","i","right","length","max","every","y","_","call","map","ticks","t0","t1","r","range","reverse","count","specifier","nice","copy","threshold","_array__WEBPACK_IMPORTED_MODULE_1__","_init__WEBPACK_IMPORTED_MODULE_2__","unknown","n","x","min","slice","invertExtent","indexOf","d3_format__WEBPACK_IMPORTED_MODULE_1__","precision","type","value","isNaN","symlogish","symlog","_linear__WEBPACK_IMPORTED_MODULE_0__","_continuous__WEBPACK_IMPORTED_MODULE_1__","transformSymlog","c","sign","log1p","transformSymexp","expm1","transform","constant"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors-chunks~700c56a1.js","sourcesContent":["import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\nimport {initRange} from \"./init\";\n\nexport default function() {\n  return initRange.apply(calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]), arguments);\n}\n","import {bisector, tickStep} from \"d3-array\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport continuous, {copy, identity} from \"./continuous\";\nimport {initRange} from \"./init\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(identity, identity),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return initRange.apply(calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]), arguments);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {initRange} from \"./init\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      unknown,\n      n = 1;\n\n  function scale(x) {\n    return x <= x ? range[bisect(domain, x, 0, n)] : unknown;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return initRange.apply(scale, arguments);\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(start, stop, count, specifier) {\n  var step = tickStep(start, stop, count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {linearish} from \"./linear\";\nimport {copy, transformer} from \"./continuous\";\nimport {initRange} from \"./init\";\n\nfunction transformSymlog(c) {\n  return function(x) {\n    return Math.sign(x) * Math.log1p(Math.abs(x / c));\n  };\n}\n\nfunction transformSymexp(c) {\n  return function(x) {\n    return Math.sign(x) * Math.expm1(Math.abs(x)) * c;\n  };\n}\n\nexport function symlogish(transform) {\n  var c = 1, scale = transform(transformSymlog(c), transformSymexp(c));\n\n  scale.constant = function(_) {\n    return arguments.length ? transform(transformSymlog(c = +_), transformSymexp(c)) : c;\n  };\n\n  return linearish(scale);\n}\n\nexport default function symlog() {\n  var scale = symlogish(transformer());\n\n  scale.copy = function() {\n    return copy(scale, symlog()).constant(scale.constant());\n  };\n\n  return initRange.apply(scale, arguments);\n}\n"],"sourceRoot":""}